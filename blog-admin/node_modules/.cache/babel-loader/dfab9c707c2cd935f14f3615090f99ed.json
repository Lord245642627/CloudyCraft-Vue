{"ast":null,"code":"var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('(');\n  var ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n\n      if (colorArr[i] > 255) {\n        colorArr[i] = 255;\n      } else if (color[i] < 0) {\n        colorArr[i] = 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;","map":{"version":3,"names":["LRU","require","kCSSColorTable","clampCssByte","i","Math","round","clampCssAngle","clampCssFloat","f","parseCssInt","str","length","charAt","parseFloat","parseInt","parseCssFloat","cssHueToRgb","m1","m2","h","lerpNumber","a","b","p","setRgba","out","r","g","copyRgba","colorCache","lastRemovedArr","putToCache","colorStr","rgbaArr","put","slice","parse","cached","get","replace","toLowerCase","iv","substr","op","indexOf","ep","fname","params","split","alpha","pop","hsla2rgba","hsla","rgba","s","l","rgba2hsla","R","G","B","vMin","min","vMax","max","delta","L","H","S","deltaR","deltaG","deltaB","push","lift","color","level","colorArr","stringify","toHex","toString","fastLerp","normalizedValue","colors","value","leftIndex","floor","rightIndex","ceil","leftColor","rightColor","dv","fastMapToColor","lerp","fullOutput","mapToColor","modifyHSL","modifyAlpha","arrColor","type","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-admin/node_modules/zrender/lib/tool/color.js"],"sourcesContent":["var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('(');\n  var ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n\n      if (colorArr[i] > 255) {\n        colorArr[i] = 255;\n      } else if (color[i] < 0) {\n        colorArr[i] = 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;"],"mappings":"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"},"metadata":{},"sourceType":"script"}