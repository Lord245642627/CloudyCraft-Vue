{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId]) {\n      /******/\n      return installedModules[moduleId].exports;\n      /******/\n    }\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n\n    var module = installedModules[moduleId] = {\n      /******/\n      i: moduleId,\n\n      /******/\n      l: false,\n\n      /******/\n      exports: {}\n      /******/\n\n    };\n    /******/\n\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.l = true;\n    /******/\n\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n\n  /******/\n\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n\n  /******/\n  // define getter function for harmony exports\n\n  /******/\n\n  __webpack_require__.d = function (exports, name, getter) {\n    /******/\n    if (!__webpack_require__.o(exports, name)) {\n      /******/\n      Object.defineProperty(exports, name, {\n        enumerable: true,\n        get: getter\n      });\n      /******/\n    }\n    /******/\n\n  };\n  /******/\n\n  /******/\n  // define __esModule on exports\n\n  /******/\n\n\n  __webpack_require__.r = function (exports) {\n    /******/\n    if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n      /******/\n      Object.defineProperty(exports, Symbol.toStringTag, {\n        value: 'Module'\n      });\n      /******/\n    }\n    /******/\n\n\n    Object.defineProperty(exports, '__esModule', {\n      value: true\n    });\n    /******/\n  };\n  /******/\n\n  /******/\n  // create a fake namespace object\n\n  /******/\n  // mode & 1: value is a module id, require it\n\n  /******/\n  // mode & 2: merge all properties of value into the ns\n\n  /******/\n  // mode & 4: return value when already ns object\n\n  /******/\n  // mode & 8|1: behave like require\n\n  /******/\n\n\n  __webpack_require__.t = function (value, mode) {\n    /******/\n    if (mode & 1) value = __webpack_require__(value);\n    /******/\n\n    if (mode & 8) return value;\n    /******/\n\n    if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n    /******/\n\n    var ns = Object.create(null);\n    /******/\n\n    __webpack_require__.r(ns);\n    /******/\n\n\n    Object.defineProperty(ns, 'default', {\n      enumerable: true,\n      value: value\n    });\n    /******/\n\n    if (mode & 2 && typeof value != 'string') for (var key in value) __webpack_require__.d(ns, key, function (key) {\n      return value[key];\n    }.bind(null, key));\n    /******/\n\n    return ns;\n    /******/\n  };\n  /******/\n\n  /******/\n  // getDefaultExport function for compatibility with non-harmony modules\n\n  /******/\n\n\n  __webpack_require__.n = function (module) {\n    /******/\n    var getter = module && module.__esModule ?\n    /******/\n    function getDefault() {\n      return module['default'];\n    } :\n    /******/\n    function getModuleExports() {\n      return module;\n    };\n    /******/\n\n    __webpack_require__.d(getter, 'a', getter);\n    /******/\n\n\n    return getter;\n    /******/\n  };\n  /******/\n\n  /******/\n  // Object.prototype.hasOwnProperty.call\n\n  /******/\n\n\n  __webpack_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  /******/\n\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n\n  __webpack_require__.p = \"/dist/\";\n  /******/\n\n  /******/\n\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(__webpack_require__.s = 60);\n  /******/\n}\n/************************************************************************/\n\n/******/\n({\n  /***/\n  0:\n  /***/\n  function (module, __webpack_exports__, __webpack_require__) {\n    \"use strict\";\n    /* harmony export (binding) */\n\n    __webpack_require__.d(__webpack_exports__, \"a\", function () {\n      return normalizeComponent;\n    });\n    /* globals __VUE_SSR_CONTEXT__ */\n    // IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n    // This module is a runtime utility for cleaner component module output and will\n    // be included in the final webpack user bundle.\n\n\n    function normalizeComponent(scriptExports, render, staticRenderFns, functionalTemplate, injectStyles, scopeId, moduleIdentifier,\n    /* server only */\n    shadowMode\n    /* vue-cli only */\n    ) {\n      // Vue.extend constructor export interop\n      var options = typeof scriptExports === 'function' ? scriptExports.options : scriptExports; // render functions\n\n      if (render) {\n        options.render = render;\n        options.staticRenderFns = staticRenderFns;\n        options._compiled = true;\n      } // functional template\n\n\n      if (functionalTemplate) {\n        options.functional = true;\n      } // scopedId\n\n\n      if (scopeId) {\n        options._scopeId = 'data-v-' + scopeId;\n      }\n\n      var hook;\n\n      if (moduleIdentifier) {\n        // server build\n        hook = function (context) {\n          // 2.3 injection\n          context = context || // cached call\n          this.$vnode && this.$vnode.ssrContext || // stateful\n          this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext; // functional\n          // 2.2 with runInNewContext: true\n\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__;\n          } // inject component styles\n\n\n          if (injectStyles) {\n            injectStyles.call(this, context);\n          } // register component module identifier for async chunk inferrence\n\n\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier);\n          }\n        }; // used by ssr in case component is cached and beforeCreate\n        // never gets called\n\n\n        options._ssrRegister = hook;\n      } else if (injectStyles) {\n        hook = shadowMode ? function () {\n          injectStyles.call(this, this.$root.$options.shadowRoot);\n        } : injectStyles;\n      }\n\n      if (hook) {\n        if (options.functional) {\n          // for template-only hot-reload because in that case the render fn doesn't\n          // go through the normalizer\n          options._injectStyles = hook; // register for functioal component in vue file\n\n          var originalRender = options.render;\n\n          options.render = function renderWithStyleInjection(h, context) {\n            hook.call(context);\n            return originalRender(h, context);\n          };\n        } else {\n          // inject component registration as beforeCreate hook\n          var existing = options.beforeCreate;\n          options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n        }\n      }\n\n      return {\n        exports: scriptExports,\n        options: options\n      };\n    }\n    /***/\n\n  },\n\n  /***/\n  15:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"element-ui/lib/scrollbar\");\n    /***/\n  },\n\n  /***/\n  19:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"element-ui/lib/checkbox\");\n    /***/\n  },\n\n  /***/\n  21:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"element-ui/lib/utils/shared\");\n    /***/\n  },\n\n  /***/\n  26:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"babel-helper-vue-jsx-merge-props\");\n    /***/\n  },\n\n  /***/\n  3:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"element-ui/lib/utils/util\");\n    /***/\n  },\n\n  /***/\n  31:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"element-ui/lib/utils/scroll-into-view\");\n    /***/\n  },\n\n  /***/\n  40:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"element-ui/lib/utils/aria-utils\");\n    /***/\n  },\n\n  /***/\n  51:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"element-ui/lib/radio\");\n    /***/\n  },\n\n  /***/\n  6:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"element-ui/lib/mixins/locale\");\n    /***/\n  },\n\n  /***/\n  60:\n  /***/\n  function (module, __webpack_exports__, __webpack_require__) {\n    \"use strict\";\n\n    __webpack_require__.r(__webpack_exports__); // CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/cascader-panel/src/cascader-panel.vue?vue&type=template&id=34932346&\n\n\n    var cascader_panelvue_type_template_id_34932346_render = function () {\n      var _vm = this;\n\n      var _h = _vm.$createElement;\n\n      var _c = _vm._self._c || _h;\n\n      return _c(\"div\", {\n        class: [\"el-cascader-panel\", _vm.border && \"is-bordered\"],\n        on: {\n          keydown: _vm.handleKeyDown\n        }\n      }, _vm._l(_vm.menus, function (menu, index) {\n        return _c(\"cascader-menu\", {\n          key: index,\n          ref: \"menu\",\n          refInFor: true,\n          attrs: {\n            index: index,\n            nodes: menu\n          }\n        });\n      }), 1);\n    };\n\n    var staticRenderFns = [];\n    cascader_panelvue_type_template_id_34932346_render._withStripped = true; // CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-panel.vue?vue&type=template&id=34932346&\n    // EXTERNAL MODULE: external \"babel-helper-vue-jsx-merge-props\"\n\n    var external_babel_helper_vue_jsx_merge_props_ = __webpack_require__(26);\n\n    var external_babel_helper_vue_jsx_merge_props_default = /*#__PURE__*/__webpack_require__.n(external_babel_helper_vue_jsx_merge_props_); // EXTERNAL MODULE: external \"element-ui/lib/scrollbar\"\n\n\n    var scrollbar_ = __webpack_require__(15);\n\n    var scrollbar_default = /*#__PURE__*/__webpack_require__.n(scrollbar_); // EXTERNAL MODULE: external \"element-ui/lib/checkbox\"\n\n\n    var checkbox_ = __webpack_require__(19);\n\n    var checkbox_default = /*#__PURE__*/__webpack_require__.n(checkbox_); // EXTERNAL MODULE: external \"element-ui/lib/radio\"\n\n\n    var radio_ = __webpack_require__(51);\n\n    var radio_default = /*#__PURE__*/__webpack_require__.n(radio_); // EXTERNAL MODULE: external \"element-ui/lib/utils/util\"\n\n\n    var util_ = __webpack_require__(3); // CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/cascader-panel/src/cascader-node.vue?vue&type=script&lang=js&\n\n\n    var stopPropagation = function stopPropagation(e) {\n      return e.stopPropagation();\n    };\n    /* harmony default export */\n\n\n    var cascader_nodevue_type_script_lang_js_ = {\n      inject: ['panel'],\n      components: {\n        ElCheckbox: checkbox_default.a,\n        ElRadio: radio_default.a\n      },\n      props: {\n        node: {\n          required: true\n        },\n        nodeId: String\n      },\n      computed: {\n        config: function config() {\n          return this.panel.config;\n        },\n        isLeaf: function isLeaf() {\n          return this.node.isLeaf;\n        },\n        isDisabled: function isDisabled() {\n          return this.node.isDisabled;\n        },\n        checkedValue: function checkedValue() {\n          return this.panel.checkedValue;\n        },\n        isChecked: function isChecked() {\n          return this.node.isSameNode(this.checkedValue);\n        },\n        inActivePath: function inActivePath() {\n          return this.isInPath(this.panel.activePath);\n        },\n        inCheckedPath: function inCheckedPath() {\n          var _this = this;\n\n          if (!this.config.checkStrictly) return false;\n          return this.panel.checkedNodePaths.some(function (checkedPath) {\n            return _this.isInPath(checkedPath);\n          });\n        },\n        value: function value() {\n          return this.node.getValueByOption();\n        }\n      },\n      methods: {\n        handleExpand: function handleExpand() {\n          var _this2 = this;\n\n          var panel = this.panel,\n              node = this.node,\n              isDisabled = this.isDisabled,\n              config = this.config;\n          var multiple = config.multiple,\n              checkStrictly = config.checkStrictly;\n          if (!checkStrictly && isDisabled || node.loading) return;\n\n          if (config.lazy && !node.loaded) {\n            panel.lazyLoad(node, function () {\n              // do not use cached leaf value here, invoke this.isLeaf to get new value.\n              var isLeaf = _this2.isLeaf;\n              if (!isLeaf) _this2.handleExpand();\n\n              if (multiple) {\n                // if leaf sync checked state, else clear checked state\n                var checked = isLeaf ? node.checked : false;\n\n                _this2.handleMultiCheckChange(checked);\n              }\n            });\n          } else {\n            panel.handleExpand(node);\n          }\n        },\n        handleCheckChange: function handleCheckChange() {\n          var panel = this.panel,\n              value = this.value,\n              node = this.node;\n          panel.handleCheckChange(value);\n          panel.handleExpand(node);\n        },\n        handleMultiCheckChange: function handleMultiCheckChange(checked) {\n          this.node.doCheck(checked);\n          this.panel.calculateMultiCheckedValue();\n        },\n        isInPath: function isInPath(pathNodes) {\n          var node = this.node;\n          var selectedPathNode = pathNodes[node.level - 1] || {};\n          return selectedPathNode.uid === node.uid;\n        },\n        renderPrefix: function renderPrefix(h) {\n          var isLeaf = this.isLeaf,\n              isChecked = this.isChecked,\n              config = this.config;\n          var checkStrictly = config.checkStrictly,\n              multiple = config.multiple;\n\n          if (multiple) {\n            return this.renderCheckbox(h);\n          } else if (checkStrictly) {\n            return this.renderRadio(h);\n          } else if (isLeaf && isChecked) {\n            return this.renderCheckIcon(h);\n          }\n\n          return null;\n        },\n        renderPostfix: function renderPostfix(h) {\n          var node = this.node,\n              isLeaf = this.isLeaf;\n\n          if (node.loading) {\n            return this.renderLoadingIcon(h);\n          } else if (!isLeaf) {\n            return this.renderExpandIcon(h);\n          }\n\n          return null;\n        },\n        renderCheckbox: function renderCheckbox(h) {\n          var node = this.node,\n              config = this.config,\n              isDisabled = this.isDisabled;\n          var events = {\n            on: {\n              change: this.handleMultiCheckChange\n            },\n            nativeOn: {}\n          };\n\n          if (config.checkStrictly) {\n            // when every node is selectable, click event should not trigger expand event.\n            events.nativeOn.click = stopPropagation;\n          }\n\n          return h('el-checkbox', external_babel_helper_vue_jsx_merge_props_default()([{\n            attrs: {\n              value: node.checked,\n              indeterminate: node.indeterminate,\n              disabled: isDisabled\n            }\n          }, events]));\n        },\n        renderRadio: function renderRadio(h) {\n          var checkedValue = this.checkedValue,\n              value = this.value,\n              isDisabled = this.isDisabled; // to keep same reference if value cause radio's checked state is calculated by reference comparision;\n\n          if (Object(util_[\"isEqual\"])(value, checkedValue)) {\n            value = checkedValue;\n          }\n\n          return h('el-radio', {\n            attrs: {\n              value: checkedValue,\n              label: value,\n              disabled: isDisabled\n            },\n            on: {\n              'change': this.handleCheckChange\n            },\n            nativeOn: {\n              'click': stopPropagation\n            }\n          }, [h('span')]);\n        },\n        renderCheckIcon: function renderCheckIcon(h) {\n          return h('i', {\n            'class': 'el-icon-check el-cascader-node__prefix'\n          });\n        },\n        renderLoadingIcon: function renderLoadingIcon(h) {\n          return h('i', {\n            'class': 'el-icon-loading el-cascader-node__postfix'\n          });\n        },\n        renderExpandIcon: function renderExpandIcon(h) {\n          return h('i', {\n            'class': 'el-icon-arrow-right el-cascader-node__postfix'\n          });\n        },\n        renderContent: function renderContent(h) {\n          var panel = this.panel,\n              node = this.node;\n          var render = panel.renderLabelFn;\n          var vnode = render ? render({\n            node: node,\n            data: node.data\n          }) : null;\n          return h('span', {\n            'class': 'el-cascader-node__label'\n          }, [vnode || node.label]);\n        }\n      },\n      render: function render(h) {\n        var _this3 = this;\n\n        var inActivePath = this.inActivePath,\n            inCheckedPath = this.inCheckedPath,\n            isChecked = this.isChecked,\n            isLeaf = this.isLeaf,\n            isDisabled = this.isDisabled,\n            config = this.config,\n            nodeId = this.nodeId;\n        var expandTrigger = config.expandTrigger,\n            checkStrictly = config.checkStrictly,\n            multiple = config.multiple;\n        var disabled = !checkStrictly && isDisabled;\n        var events = {\n          on: {}\n        };\n\n        if (expandTrigger === 'click') {\n          events.on.click = this.handleExpand;\n        } else {\n          events.on.mouseenter = function (e) {\n            _this3.handleExpand();\n\n            _this3.$emit('expand', e);\n          };\n\n          events.on.focus = function (e) {\n            _this3.handleExpand();\n\n            _this3.$emit('expand', e);\n          };\n        }\n\n        if (isLeaf && !isDisabled && !checkStrictly && !multiple) {\n          events.on.click = this.handleCheckChange;\n        }\n\n        return h('li', external_babel_helper_vue_jsx_merge_props_default()([{\n          attrs: {\n            role: 'menuitem',\n            id: nodeId,\n            'aria-expanded': inActivePath,\n            tabindex: disabled ? null : -1\n          },\n          'class': {\n            'el-cascader-node': true,\n            'is-selectable': checkStrictly,\n            'in-active-path': inActivePath,\n            'in-checked-path': inCheckedPath,\n            'is-active': isChecked,\n            'is-disabled': disabled\n          }\n        }, events]), [this.renderPrefix(h), this.renderContent(h), this.renderPostfix(h)]);\n      }\n    }; // CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-node.vue?vue&type=script&lang=js&\n\n    /* harmony default export */\n\n    var src_cascader_nodevue_type_script_lang_js_ = cascader_nodevue_type_script_lang_js_; // EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\n\n    var componentNormalizer = __webpack_require__(0); // CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-node.vue\n\n\n    var cascader_node_render, cascader_node_staticRenderFns;\n    /* normalize component */\n\n    var component = Object(componentNormalizer[\"a\"\n    /* default */\n    ])(src_cascader_nodevue_type_script_lang_js_, cascader_node_render, cascader_node_staticRenderFns, false, null, null, null);\n    /* hot reload */\n\n    if (false) {\n      var api;\n    }\n\n    component.options.__file = \"packages/cascader-panel/src/cascader-node.vue\";\n    /* harmony default export */\n\n    var cascader_node = component.exports; // EXTERNAL MODULE: external \"element-ui/lib/mixins/locale\"\n\n    var locale_ = __webpack_require__(6);\n\n    var locale_default = /*#__PURE__*/__webpack_require__.n(locale_); // CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/cascader-panel/src/cascader-menu.vue?vue&type=script&lang=js&\n\n    /* harmony default export */\n\n\n    var cascader_menuvue_type_script_lang_js_ = {\n      name: 'ElCascaderMenu',\n      mixins: [locale_default.a],\n      inject: ['panel'],\n      components: {\n        ElScrollbar: scrollbar_default.a,\n        CascaderNode: cascader_node\n      },\n      props: {\n        nodes: {\n          type: Array,\n          required: true\n        },\n        index: Number\n      },\n      data: function data() {\n        return {\n          activeNode: null,\n          hoverTimer: null,\n          id: Object(util_[\"generateId\"])()\n        };\n      },\n      computed: {\n        isEmpty: function isEmpty() {\n          return !this.nodes.length;\n        },\n        menuId: function menuId() {\n          return 'cascader-menu-' + this.id + '-' + this.index;\n        }\n      },\n      methods: {\n        handleExpand: function handleExpand(e) {\n          this.activeNode = e.target;\n        },\n        handleMouseMove: function handleMouseMove(e) {\n          var activeNode = this.activeNode,\n              hoverTimer = this.hoverTimer;\n          var hoverZone = this.$refs.hoverZone;\n          if (!activeNode || !hoverZone) return;\n\n          if (activeNode.contains(e.target)) {\n            clearTimeout(hoverTimer);\n\n            var _$el$getBoundingClien = this.$el.getBoundingClientRect(),\n                left = _$el$getBoundingClien.left;\n\n            var startX = e.clientX - left;\n            var _$el = this.$el,\n                offsetWidth = _$el.offsetWidth,\n                offsetHeight = _$el.offsetHeight;\n            var top = activeNode.offsetTop;\n            var bottom = top + activeNode.offsetHeight;\n            hoverZone.innerHTML = '\\n          <path style=\"pointer-events: auto;\" fill=\"transparent\" d=\"M' + startX + ' ' + top + ' L' + offsetWidth + ' 0 V' + top + ' Z\" />\\n          <path style=\"pointer-events: auto;\" fill=\"transparent\" d=\"M' + startX + ' ' + bottom + ' L' + offsetWidth + ' ' + offsetHeight + ' V' + bottom + ' Z\" />\\n        ';\n          } else if (!hoverTimer) {\n            this.hoverTimer = setTimeout(this.clearHoverZone, this.panel.config.hoverThreshold);\n          }\n        },\n        clearHoverZone: function clearHoverZone() {\n          var hoverZone = this.$refs.hoverZone;\n          if (!hoverZone) return;\n          hoverZone.innerHTML = '';\n        },\n        renderEmptyText: function renderEmptyText(h) {\n          return h('div', {\n            'class': 'el-cascader-menu__empty-text'\n          }, [this.t('el.cascader.noData')]);\n        },\n        renderNodeList: function renderNodeList(h) {\n          var menuId = this.menuId;\n          var isHoverMenu = this.panel.isHoverMenu;\n          var events = {\n            on: {}\n          };\n\n          if (isHoverMenu) {\n            events.on.expand = this.handleExpand;\n          }\n\n          var nodes = this.nodes.map(function (node, index) {\n            var hasChildren = node.hasChildren;\n            return h('cascader-node', external_babel_helper_vue_jsx_merge_props_default()([{\n              key: node.uid,\n              attrs: {\n                node: node,\n                'node-id': menuId + '-' + index,\n                'aria-haspopup': hasChildren,\n                'aria-owns': hasChildren ? menuId : null\n              }\n            }, events]));\n          });\n          return [].concat(nodes, [isHoverMenu ? h('svg', {\n            ref: 'hoverZone',\n            'class': 'el-cascader-menu__hover-zone'\n          }) : null]);\n        }\n      },\n      render: function render(h) {\n        var isEmpty = this.isEmpty,\n            menuId = this.menuId;\n        var events = {\n          nativeOn: {}\n        }; // optimize hover to expand experience (#8010)\n\n        if (this.panel.isHoverMenu) {\n          events.nativeOn.mousemove = this.handleMouseMove; // events.nativeOn.mouseleave = this.clearHoverZone;\n        }\n\n        return h('el-scrollbar', external_babel_helper_vue_jsx_merge_props_default()([{\n          attrs: {\n            tag: 'ul',\n            role: 'menu',\n            id: menuId,\n            'wrap-class': 'el-cascader-menu__wrap',\n            'view-class': {\n              'el-cascader-menu__list': true,\n              'is-empty': isEmpty\n            }\n          },\n          'class': 'el-cascader-menu'\n        }, events]), [isEmpty ? this.renderEmptyText(h) : this.renderNodeList(h)]);\n      }\n    }; // CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-menu.vue?vue&type=script&lang=js&\n\n    /* harmony default export */\n\n    var src_cascader_menuvue_type_script_lang_js_ = cascader_menuvue_type_script_lang_js_; // CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-menu.vue\n\n    var cascader_menu_render, cascader_menu_staticRenderFns;\n    /* normalize component */\n\n    var cascader_menu_component = Object(componentNormalizer[\"a\"\n    /* default */\n    ])(src_cascader_menuvue_type_script_lang_js_, cascader_menu_render, cascader_menu_staticRenderFns, false, null, null, null);\n    /* hot reload */\n\n    if (false) {\n      var cascader_menu_api;\n    }\n\n    cascader_menu_component.options.__file = \"packages/cascader-panel/src/cascader-menu.vue\";\n    /* harmony default export */\n\n    var cascader_menu = cascader_menu_component.exports; // EXTERNAL MODULE: external \"element-ui/lib/utils/shared\"\n\n    var shared_ = __webpack_require__(21); // CONCATENATED MODULE: ./packages/cascader-panel/src/node.js\n\n\n    var _createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    function _classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    }\n\n    var uid = 0;\n\n    var node_Node = function () {\n      function Node(data, config, parentNode) {\n        _classCallCheck(this, Node);\n\n        this.data = data;\n        this.config = config;\n        this.parent = parentNode || null;\n        this.level = !this.parent ? 1 : this.parent.level + 1;\n        this.uid = uid++;\n        this.initState();\n        this.initChildren();\n      }\n\n      Node.prototype.initState = function initState() {\n        var _config = this.config,\n            valueKey = _config.value,\n            labelKey = _config.label;\n        this.value = this.data[valueKey];\n        this.label = this.data[labelKey];\n        this.pathNodes = this.calculatePathNodes();\n        this.path = this.pathNodes.map(function (node) {\n          return node.value;\n        });\n        this.pathLabels = this.pathNodes.map(function (node) {\n          return node.label;\n        }); // lazy load\n\n        this.loading = false;\n        this.loaded = false;\n      };\n\n      Node.prototype.initChildren = function initChildren() {\n        var _this = this;\n\n        var config = this.config;\n        var childrenKey = config.children;\n        var childrenData = this.data[childrenKey];\n        this.hasChildren = Array.isArray(childrenData);\n        this.children = (childrenData || []).map(function (child) {\n          return new Node(child, config, _this);\n        });\n      };\n\n      Node.prototype.calculatePathNodes = function calculatePathNodes() {\n        var nodes = [this];\n        var parent = this.parent;\n\n        while (parent) {\n          nodes.unshift(parent);\n          parent = parent.parent;\n        }\n\n        return nodes;\n      };\n\n      Node.prototype.getPath = function getPath() {\n        return this.path;\n      };\n\n      Node.prototype.getValue = function getValue() {\n        return this.value;\n      };\n\n      Node.prototype.getValueByOption = function getValueByOption() {\n        return this.config.emitPath ? this.getPath() : this.getValue();\n      };\n\n      Node.prototype.getText = function getText(allLevels, separator) {\n        return allLevels ? this.pathLabels.join(separator) : this.label;\n      };\n\n      Node.prototype.isSameNode = function isSameNode(checkedValue) {\n        var value = this.getValueByOption();\n        return this.config.multiple && Array.isArray(checkedValue) ? checkedValue.some(function (val) {\n          return Object(util_[\"isEqual\"])(val, value);\n        }) : Object(util_[\"isEqual\"])(checkedValue, value);\n      };\n\n      Node.prototype.broadcast = function broadcast(event) {\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        var handlerName = 'onParent' + Object(util_[\"capitalize\"])(event);\n        this.children.forEach(function (child) {\n          if (child) {\n            // bottom up\n            child.broadcast.apply(child, [event].concat(args));\n            child[handlerName] && child[handlerName].apply(child, args);\n          }\n        });\n      };\n\n      Node.prototype.emit = function emit(event) {\n        var parent = this.parent;\n        var handlerName = 'onChild' + Object(util_[\"capitalize\"])(event);\n\n        if (parent) {\n          for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n\n          parent[handlerName] && parent[handlerName].apply(parent, args);\n          parent.emit.apply(parent, [event].concat(args));\n        }\n      };\n\n      Node.prototype.onParentCheck = function onParentCheck(checked) {\n        if (!this.isDisabled) {\n          this.setCheckState(checked);\n        }\n      };\n\n      Node.prototype.onChildCheck = function onChildCheck() {\n        var children = this.children;\n        var validChildren = children.filter(function (child) {\n          return !child.isDisabled;\n        });\n        var checked = validChildren.length ? validChildren.every(function (child) {\n          return child.checked;\n        }) : false;\n        this.setCheckState(checked);\n      };\n\n      Node.prototype.setCheckState = function setCheckState(checked) {\n        var totalNum = this.children.length;\n        var checkedNum = this.children.reduce(function (c, p) {\n          var num = p.checked ? 1 : p.indeterminate ? 0.5 : 0;\n          return c + num;\n        }, 0);\n        this.checked = checked;\n        this.indeterminate = checkedNum !== totalNum && checkedNum > 0;\n      };\n\n      Node.prototype.syncCheckState = function syncCheckState(checkedValue) {\n        var value = this.getValueByOption();\n        var checked = this.isSameNode(checkedValue, value);\n        this.doCheck(checked);\n      };\n\n      Node.prototype.doCheck = function doCheck(checked) {\n        if (this.checked !== checked) {\n          if (this.config.checkStrictly) {\n            this.checked = checked;\n          } else {\n            // bottom up to unify the calculation of the indeterminate state\n            this.broadcast('check', checked);\n            this.setCheckState(checked);\n            this.emit('check');\n          }\n        }\n      };\n\n      _createClass(Node, [{\n        key: 'isDisabled',\n        get: function get() {\n          var data = this.data,\n              parent = this.parent,\n              config = this.config;\n          var disabledKey = config.disabled;\n          var checkStrictly = config.checkStrictly;\n          return data[disabledKey] || !checkStrictly && parent && parent.isDisabled;\n        }\n      }, {\n        key: 'isLeaf',\n        get: function get() {\n          var data = this.data,\n              loaded = this.loaded,\n              hasChildren = this.hasChildren,\n              children = this.children;\n          var _config2 = this.config,\n              lazy = _config2.lazy,\n              leafKey = _config2.leaf;\n\n          if (lazy) {\n            var isLeaf = Object(shared_[\"isDef\"])(data[leafKey]) ? data[leafKey] : loaded ? !children.length : false;\n            this.hasChildren = !isLeaf;\n            return isLeaf;\n          }\n\n          return !hasChildren;\n        }\n      }]);\n\n      return Node;\n    }();\n    /* harmony default export */\n\n\n    var src_node = node_Node; // CONCATENATED MODULE: ./packages/cascader-panel/src/store.js\n\n    function store_classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    }\n\n    var flatNodes = function flatNodes(data, leafOnly) {\n      return data.reduce(function (res, node) {\n        if (node.isLeaf) {\n          res.push(node);\n        } else {\n          !leafOnly && res.push(node);\n          res = res.concat(flatNodes(node.children, leafOnly));\n        }\n\n        return res;\n      }, []);\n    };\n\n    var store_Store = function () {\n      function Store(data, config) {\n        store_classCallCheck(this, Store);\n        this.config = config;\n        this.initNodes(data);\n      }\n\n      Store.prototype.initNodes = function initNodes(data) {\n        var _this = this;\n\n        data = Object(util_[\"coerceTruthyValueToArray\"])(data);\n        this.nodes = data.map(function (nodeData) {\n          return new src_node(nodeData, _this.config);\n        });\n        this.flattedNodes = this.getFlattedNodes(false, false);\n        this.leafNodes = this.getFlattedNodes(true, false);\n      };\n\n      Store.prototype.appendNode = function appendNode(nodeData, parentNode) {\n        var node = new src_node(nodeData, this.config, parentNode);\n        var children = parentNode ? parentNode.children : this.nodes;\n        children.push(node);\n      };\n\n      Store.prototype.appendNodes = function appendNodes(nodeDataList, parentNode) {\n        var _this2 = this;\n\n        nodeDataList = Object(util_[\"coerceTruthyValueToArray\"])(nodeDataList);\n        nodeDataList.forEach(function (nodeData) {\n          return _this2.appendNode(nodeData, parentNode);\n        });\n      };\n\n      Store.prototype.getNodes = function getNodes() {\n        return this.nodes;\n      };\n\n      Store.prototype.getFlattedNodes = function getFlattedNodes(leafOnly) {\n        var cached = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var cachedNodes = leafOnly ? this.leafNodes : this.flattedNodes;\n        return cached ? cachedNodes : flatNodes(this.nodes, leafOnly);\n      };\n\n      Store.prototype.getNodeByValue = function getNodeByValue(value) {\n        var nodes = this.getFlattedNodes(false, !this.config.lazy).filter(function (node) {\n          return Object(util_[\"valueEquals\"])(node.path, value) || node.value === value;\n        });\n        return nodes && nodes.length ? nodes[0] : null;\n      };\n\n      return Store;\n    }();\n    /* harmony default export */\n\n\n    var src_store = store_Store; // EXTERNAL MODULE: external \"element-ui/lib/utils/merge\"\n\n    var merge_ = __webpack_require__(9);\n\n    var merge_default = /*#__PURE__*/__webpack_require__.n(merge_); // EXTERNAL MODULE: external \"element-ui/lib/utils/aria-utils\"\n\n\n    var aria_utils_ = __webpack_require__(40);\n\n    var aria_utils_default = /*#__PURE__*/__webpack_require__.n(aria_utils_); // EXTERNAL MODULE: external \"element-ui/lib/utils/scroll-into-view\"\n\n\n    var scroll_into_view_ = __webpack_require__(31);\n\n    var scroll_into_view_default = /*#__PURE__*/__webpack_require__.n(scroll_into_view_); // CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/cascader-panel/src/cascader-panel.vue?vue&type=script&lang=js&\n\n\n    var _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    }; //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n\n\n    var KeyCode = aria_utils_default.a.keys;\n    var DefaultProps = {\n      expandTrigger: 'click',\n      // or hover\n      multiple: false,\n      checkStrictly: false,\n      // whether all nodes can be selected\n      emitPath: true,\n      // wether to emit an array of all levels value in which node is located\n      lazy: false,\n      lazyLoad: util_[\"noop\"],\n      value: 'value',\n      label: 'label',\n      children: 'children',\n      leaf: 'leaf',\n      disabled: 'disabled',\n      hoverThreshold: 500\n    };\n\n    var cascader_panelvue_type_script_lang_js_isLeaf = function isLeaf(el) {\n      return !el.getAttribute('aria-owns');\n    };\n\n    var getSibling = function getSibling(el, distance) {\n      var parentNode = el.parentNode;\n\n      if (parentNode) {\n        var siblings = parentNode.querySelectorAll('.el-cascader-node[tabindex=\"-1\"]');\n        var index = Array.prototype.indexOf.call(siblings, el);\n        return siblings[index + distance] || null;\n      }\n\n      return null;\n    };\n\n    var getMenuIndex = function getMenuIndex(el, distance) {\n      if (!el) return;\n      var pieces = el.id.split('-');\n      return Number(pieces[pieces.length - 2]);\n    };\n\n    var focusNode = function focusNode(el) {\n      if (!el) return;\n      el.focus();\n      !cascader_panelvue_type_script_lang_js_isLeaf(el) && el.click();\n    };\n\n    var checkNode = function checkNode(el) {\n      if (!el) return;\n      var input = el.querySelector('input');\n\n      if (input) {\n        input.click();\n      } else if (cascader_panelvue_type_script_lang_js_isLeaf(el)) {\n        el.click();\n      }\n    };\n    /* harmony default export */\n\n\n    var cascader_panelvue_type_script_lang_js_ = {\n      name: 'ElCascaderPanel',\n      components: {\n        CascaderMenu: cascader_menu\n      },\n      props: {\n        value: {},\n        options: Array,\n        props: Object,\n        border: {\n          type: Boolean,\n          default: true\n        },\n        renderLabel: Function\n      },\n      provide: function provide() {\n        return {\n          panel: this\n        };\n      },\n      data: function data() {\n        return {\n          checkedValue: null,\n          checkedNodePaths: [],\n          store: [],\n          menus: [],\n          activePath: [],\n          loadCount: 0\n        };\n      },\n      computed: {\n        config: function config() {\n          return merge_default()(_extends({}, DefaultProps), this.props || {});\n        },\n        multiple: function multiple() {\n          return this.config.multiple;\n        },\n        checkStrictly: function checkStrictly() {\n          return this.config.checkStrictly;\n        },\n        leafOnly: function leafOnly() {\n          return !this.checkStrictly;\n        },\n        isHoverMenu: function isHoverMenu() {\n          return this.config.expandTrigger === 'hover';\n        },\n        renderLabelFn: function renderLabelFn() {\n          return this.renderLabel || this.$scopedSlots.default;\n        }\n      },\n      watch: {\n        options: {\n          handler: function handler() {\n            this.initStore();\n          },\n          immediate: true,\n          deep: true\n        },\n        value: function value() {\n          this.syncCheckedValue();\n          this.checkStrictly && this.calculateCheckedNodePaths();\n        },\n        checkedValue: function checkedValue(val) {\n          if (!Object(util_[\"isEqual\"])(val, this.value)) {\n            this.checkStrictly && this.calculateCheckedNodePaths();\n            this.$emit('input', val);\n            this.$emit('change', val);\n          }\n        }\n      },\n      mounted: function mounted() {\n        if (!this.isEmptyValue(this.value)) {\n          this.syncCheckedValue();\n        }\n      },\n      methods: {\n        initStore: function initStore() {\n          var config = this.config,\n              options = this.options;\n\n          if (config.lazy && Object(util_[\"isEmpty\"])(options)) {\n            this.lazyLoad();\n          } else {\n            this.store = new src_store(options, config);\n            this.menus = [this.store.getNodes()];\n            this.syncMenuState();\n          }\n        },\n        syncCheckedValue: function syncCheckedValue() {\n          var value = this.value,\n              checkedValue = this.checkedValue;\n\n          if (!Object(util_[\"isEqual\"])(value, checkedValue)) {\n            this.activePath = [];\n            this.checkedValue = value;\n            this.syncMenuState();\n          }\n        },\n        syncMenuState: function syncMenuState() {\n          var multiple = this.multiple,\n              checkStrictly = this.checkStrictly;\n          this.syncActivePath();\n          multiple && this.syncMultiCheckState();\n          checkStrictly && this.calculateCheckedNodePaths();\n          this.$nextTick(this.scrollIntoView);\n        },\n        syncMultiCheckState: function syncMultiCheckState() {\n          var _this = this;\n\n          var nodes = this.getFlattedNodes(this.leafOnly);\n          nodes.forEach(function (node) {\n            node.syncCheckState(_this.checkedValue);\n          });\n        },\n        isEmptyValue: function isEmptyValue(val) {\n          var multiple = this.multiple,\n              config = this.config;\n          var emitPath = config.emitPath;\n\n          if (multiple || emitPath) {\n            return Object(util_[\"isEmpty\"])(val);\n          }\n\n          return false;\n        },\n        syncActivePath: function syncActivePath() {\n          var _this2 = this;\n\n          var store = this.store,\n              multiple = this.multiple,\n              activePath = this.activePath,\n              checkedValue = this.checkedValue;\n\n          if (!Object(util_[\"isEmpty\"])(activePath)) {\n            var nodes = activePath.map(function (node) {\n              return _this2.getNodeByValue(node.getValue());\n            });\n            this.expandNodes(nodes);\n          } else if (!this.isEmptyValue(checkedValue)) {\n            var value = multiple ? checkedValue[0] : checkedValue;\n            var checkedNode = this.getNodeByValue(value) || {};\n\n            var _nodes = (checkedNode.pathNodes || []).slice(0, -1);\n\n            this.expandNodes(_nodes);\n          } else {\n            this.activePath = [];\n            this.menus = [store.getNodes()];\n          }\n        },\n        expandNodes: function expandNodes(nodes) {\n          var _this3 = this;\n\n          nodes.forEach(function (node) {\n            return _this3.handleExpand(node, true\n            /* silent */\n            );\n          });\n        },\n        calculateCheckedNodePaths: function calculateCheckedNodePaths() {\n          var _this4 = this;\n\n          var checkedValue = this.checkedValue,\n              multiple = this.multiple;\n          var checkedValues = multiple ? Object(util_[\"coerceTruthyValueToArray\"])(checkedValue) : [checkedValue];\n          this.checkedNodePaths = checkedValues.map(function (v) {\n            var checkedNode = _this4.getNodeByValue(v);\n\n            return checkedNode ? checkedNode.pathNodes : [];\n          });\n        },\n        handleKeyDown: function handleKeyDown(e) {\n          var target = e.target,\n              keyCode = e.keyCode;\n\n          switch (keyCode) {\n            case KeyCode.up:\n              var prev = getSibling(target, -1);\n              focusNode(prev);\n              break;\n\n            case KeyCode.down:\n              var next = getSibling(target, 1);\n              focusNode(next);\n              break;\n\n            case KeyCode.left:\n              var preMenu = this.$refs.menu[getMenuIndex(target) - 1];\n\n              if (preMenu) {\n                var expandedNode = preMenu.$el.querySelector('.el-cascader-node[aria-expanded=\"true\"]');\n                focusNode(expandedNode);\n              }\n\n              break;\n\n            case KeyCode.right:\n              var nextMenu = this.$refs.menu[getMenuIndex(target) + 1];\n\n              if (nextMenu) {\n                var firstNode = nextMenu.$el.querySelector('.el-cascader-node[tabindex=\"-1\"]');\n                focusNode(firstNode);\n              }\n\n              break;\n\n            case KeyCode.enter:\n              checkNode(target);\n              break;\n\n            case KeyCode.esc:\n            case KeyCode.tab:\n              this.$emit('close');\n              break;\n\n            default:\n              return;\n          }\n        },\n        handleExpand: function handleExpand(node, silent) {\n          var activePath = this.activePath;\n          var level = node.level;\n          var path = activePath.slice(0, level - 1);\n          var menus = this.menus.slice(0, level);\n\n          if (!node.isLeaf) {\n            path.push(node);\n            menus.push(node.children);\n          }\n\n          this.activePath = path;\n          this.menus = menus;\n\n          if (!silent) {\n            var pathValues = path.map(function (node) {\n              return node.getValue();\n            });\n            var activePathValues = activePath.map(function (node) {\n              return node.getValue();\n            });\n\n            if (!Object(util_[\"valueEquals\"])(pathValues, activePathValues)) {\n              this.$emit('active-item-change', pathValues); // Deprecated\n\n              this.$emit('expand-change', pathValues);\n            }\n          }\n        },\n        handleCheckChange: function handleCheckChange(value) {\n          this.checkedValue = value;\n        },\n        lazyLoad: function lazyLoad(node, onFullfiled) {\n          var _this5 = this;\n\n          var config = this.config;\n\n          if (!node) {\n            node = node || {\n              root: true,\n              level: 0\n            };\n            this.store = new src_store([], config);\n            this.menus = [this.store.getNodes()];\n          }\n\n          node.loading = true;\n\n          var resolve = function resolve(dataList) {\n            var parent = node.root ? null : node;\n            dataList && dataList.length && _this5.store.appendNodes(dataList, parent);\n            node.loading = false;\n            node.loaded = true; // dispose default value on lazy load mode\n\n            if (Array.isArray(_this5.checkedValue)) {\n              var nodeValue = _this5.checkedValue[_this5.loadCount++];\n              var valueKey = _this5.config.value;\n              var leafKey = _this5.config.leaf;\n\n              if (Array.isArray(dataList) && dataList.filter(function (item) {\n                return item[valueKey] === nodeValue;\n              }).length > 0) {\n                var checkedNode = _this5.store.getNodeByValue(nodeValue);\n\n                if (!checkedNode.data[leafKey]) {\n                  _this5.lazyLoad(checkedNode, function () {\n                    _this5.handleExpand(checkedNode);\n                  });\n                }\n\n                if (_this5.loadCount === _this5.checkedValue.length) {\n                  _this5.$parent.computePresentText();\n                }\n              }\n            }\n\n            onFullfiled && onFullfiled(dataList);\n          };\n\n          config.lazyLoad(node, resolve);\n        },\n\n        /**\n         * public methods\n        */\n        calculateMultiCheckedValue: function calculateMultiCheckedValue() {\n          this.checkedValue = this.getCheckedNodes(this.leafOnly).map(function (node) {\n            return node.getValueByOption();\n          });\n        },\n        scrollIntoView: function scrollIntoView() {\n          if (this.$isServer) return;\n          var menus = this.$refs.menu || [];\n          menus.forEach(function (menu) {\n            var menuElement = menu.$el;\n\n            if (menuElement) {\n              var container = menuElement.querySelector('.el-scrollbar__wrap');\n              var activeNode = menuElement.querySelector('.el-cascader-node.is-active') || menuElement.querySelector('.el-cascader-node.in-active-path');\n              scroll_into_view_default()(container, activeNode);\n            }\n          });\n        },\n        getNodeByValue: function getNodeByValue(val) {\n          return this.store.getNodeByValue(val);\n        },\n        getFlattedNodes: function getFlattedNodes(leafOnly) {\n          var cached = !this.config.lazy;\n          return this.store.getFlattedNodes(leafOnly, cached);\n        },\n        getCheckedNodes: function getCheckedNodes(leafOnly) {\n          var checkedValue = this.checkedValue,\n              multiple = this.multiple;\n\n          if (multiple) {\n            var nodes = this.getFlattedNodes(leafOnly);\n            return nodes.filter(function (node) {\n              return node.checked;\n            });\n          } else {\n            return this.isEmptyValue(checkedValue) ? [] : [this.getNodeByValue(checkedValue)];\n          }\n        },\n        clearCheckedNodes: function clearCheckedNodes() {\n          var config = this.config,\n              leafOnly = this.leafOnly;\n          var multiple = config.multiple,\n              emitPath = config.emitPath;\n\n          if (multiple) {\n            this.getCheckedNodes(leafOnly).filter(function (node) {\n              return !node.isDisabled;\n            }).forEach(function (node) {\n              return node.doCheck(false);\n            });\n            this.calculateMultiCheckedValue();\n          } else {\n            this.checkedValue = emitPath ? [] : null;\n          }\n        }\n      }\n    }; // CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-panel.vue?vue&type=script&lang=js&\n\n    /* harmony default export */\n\n    var src_cascader_panelvue_type_script_lang_js_ = cascader_panelvue_type_script_lang_js_; // CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-panel.vue\n\n    /* normalize component */\n\n    var cascader_panel_component = Object(componentNormalizer[\"a\"\n    /* default */\n    ])(src_cascader_panelvue_type_script_lang_js_, cascader_panelvue_type_template_id_34932346_render, staticRenderFns, false, null, null, null);\n    /* hot reload */\n\n    if (false) {\n      var cascader_panel_api;\n    }\n\n    cascader_panel_component.options.__file = \"packages/cascader-panel/src/cascader-panel.vue\";\n    /* harmony default export */\n\n    var cascader_panel = cascader_panel_component.exports; // CONCATENATED MODULE: ./packages/cascader-panel/index.js\n\n    /* istanbul ignore next */\n\n    cascader_panel.install = function (Vue) {\n      Vue.component(cascader_panel.name, cascader_panel);\n    };\n    /* harmony default export */\n\n\n    var packages_cascader_panel = __webpack_exports__[\"default\"] = cascader_panel;\n    /***/\n  },\n\n  /***/\n  9:\n  /***/\n  function (module, exports) {\n    module.exports = require(\"element-ui/lib/utils/merge\");\n    /***/\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}