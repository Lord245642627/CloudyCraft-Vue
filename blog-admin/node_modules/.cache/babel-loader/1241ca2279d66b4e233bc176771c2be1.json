{"ast":null,"code":"export default {\n  created() {\n    this.current = this.$store.state.pageState.friendLink;\n    this.listLinks();\n  },\n\n  data: function () {\n    return {\n      loading: true,\n      deleteFlag: false,\n      addOrEdit: false,\n      linkIdList: [],\n      linkList: [],\n      linkForm: {\n        id: null,\n        linkName: '',\n        linkAvatar: '',\n        linkIntro: '',\n        linkAddress: ''\n      },\n      keywords: null,\n      current: 1,\n      size: 10,\n      total: 0\n    };\n  },\n  methods: {\n    selectionChange(linkList) {\n      this.linkIdList = [];\n      linkList.forEach(item => {\n        this.linkIdList.push(item.id);\n      });\n    },\n\n    searchLinks() {\n      this.current = 1;\n      this.listLinks();\n    },\n\n    sizeChange(size) {\n      this.size = size;\n      this.listLinks();\n    },\n\n    currentChange(current) {\n      this.current = current;\n      this.$store.commit('updateFriendLinkPageState', current);\n      this.listLinks();\n    },\n\n    deleteLink(id) {\n      var param = {};\n\n      if (id == null) {\n        param = {\n          data: this.linkIdList\n        };\n      } else {\n        param = {\n          data: [id]\n        };\n      }\n\n      this.axios.delete('/api/admin/links', param).then(({\n        data\n      }) => {\n        if (data.code === 0) {\n          this.$notify.success({\n            title: '成功',\n            message: data.message\n          });\n          this.listLinks();\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: data.message\n          });\n        }\n\n        this.deleteFlag = false;\n      });\n    },\n\n    openModel(link) {\n      if (link != null) {\n        this.linkForm = JSON.parse(JSON.stringify(link));\n        this.$refs.linkTitle.innerHTML = '修改友链';\n      } else {\n        this.linkForm.id = null;\n        this.linkForm.linkName = '';\n        this.linkForm.linkAvatar = '';\n        this.linkForm.linkIntro = '';\n        this.linkForm.linkAddress = '';\n        this.$refs.linkTitle.innerHTML = '添加友链';\n      }\n\n      this.addOrEdit = true;\n    },\n\n    addOrEditCategory() {\n      if (this.linkForm.linkName.trim() == '') {\n        this.$message.error('友链名不能为空');\n        return false;\n      }\n\n      if (this.linkForm.linkAvatar.trim() == '') {\n        this.$message.error('友链头像不能为空');\n        return false;\n      }\n\n      if (this.linkForm.linkIntro.trim() == '') {\n        this.$message.error('友链介绍不能为空');\n        return false;\n      }\n\n      if (this.linkForm.linkAddress.trim() == '') {\n        this.$message.error('友链地址不能为空');\n        return false;\n      }\n\n      this.axios.post('/api/admin/links', this.linkForm).then(({\n        data\n      }) => {\n        if (data.code === 0) {\n          this.$notify.success({\n            title: '成功',\n            message: data.message\n          });\n          this.listLinks();\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: data.message\n          });\n        }\n\n        this.addOrEdit = false;\n      });\n    },\n\n    listLinks() {\n      this.axios.get('/api/admin/links', {\n        params: {\n          current: this.current,\n          size: this.size,\n          keywords: this.keywords\n        }\n      }).then(({\n        data\n      }) => {\n        this.linkList = data.data.records;\n        this.total = data.data.total;\n        this.loading = false;\n      });\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}