{"ast":null,"code":"/* IMPORT */\nimport _ from '../utils/index.js';\nimport ChannelsReusable from '../channels/reusable.js';\nimport { DEC2HEX } from '../constants.js';\n/* MAIN */\n\nconst Hex = {\n  /* VARIABLES */\n  re: /^#((?:[a-f0-9]{2}){2,4}|[a-f0-9]{3})$/i,\n\n  /* API */\n  parse: color => {\n    if (color.charCodeAt(0) !== 35) return; // '#'\n\n    const match = color.match(Hex.re);\n    if (!match) return;\n    const hex = match[1];\n    const dec = parseInt(hex, 16);\n    const length = hex.length;\n    const hasAlpha = length % 4 === 0;\n    const isFullLength = length > 4;\n    const multiplier = isFullLength ? 1 : 17;\n    const bits = isFullLength ? 8 : 4;\n    const bitsOffset = hasAlpha ? 0 : -1;\n    const mask = isFullLength ? 255 : 15;\n    return ChannelsReusable.set({\n      r: (dec >> bits * (bitsOffset + 3) & mask) * multiplier,\n      g: (dec >> bits * (bitsOffset + 2) & mask) * multiplier,\n      b: (dec >> bits * (bitsOffset + 1) & mask) * multiplier,\n      a: hasAlpha ? (dec & mask) * multiplier / 255 : 1\n    }, color);\n  },\n  stringify: channels => {\n    const {\n      r,\n      g,\n      b,\n      a\n    } = channels;\n\n    if (a < 1) {\n      // #RRGGBBAA\n      return `#${DEC2HEX[Math.round(r)]}${DEC2HEX[Math.round(g)]}${DEC2HEX[Math.round(b)]}${DEC2HEX[Math.round(a * 255)]}`;\n    } else {\n      // #RRGGBB\n      return `#${DEC2HEX[Math.round(r)]}${DEC2HEX[Math.round(g)]}${DEC2HEX[Math.round(b)]}`;\n    }\n  }\n};\n/* EXPORT */\n\nexport default Hex;","map":{"version":3,"names":["_","ChannelsReusable","DEC2HEX","Hex","re","parse","color","charCodeAt","match","hex","dec","parseInt","length","hasAlpha","isFullLength","multiplier","bits","bitsOffset","mask","set","r","g","b","a","stringify","channels","Math","round"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-admin/node_modules/khroma/dist/color/hex.js"],"sourcesContent":["/* IMPORT */\nimport _ from '../utils/index.js';\nimport ChannelsReusable from '../channels/reusable.js';\nimport { DEC2HEX } from '../constants.js';\n/* MAIN */\nconst Hex = {\n    /* VARIABLES */\n    re: /^#((?:[a-f0-9]{2}){2,4}|[a-f0-9]{3})$/i,\n    /* API */\n    parse: (color) => {\n        if (color.charCodeAt(0) !== 35)\n            return; // '#'\n        const match = color.match(Hex.re);\n        if (!match)\n            return;\n        const hex = match[1];\n        const dec = parseInt(hex, 16);\n        const length = hex.length;\n        const hasAlpha = length % 4 === 0;\n        const isFullLength = length > 4;\n        const multiplier = isFullLength ? 1 : 17;\n        const bits = isFullLength ? 8 : 4;\n        const bitsOffset = hasAlpha ? 0 : -1;\n        const mask = isFullLength ? 255 : 15;\n        return ChannelsReusable.set({\n            r: ((dec >> (bits * (bitsOffset + 3))) & mask) * multiplier,\n            g: ((dec >> (bits * (bitsOffset + 2))) & mask) * multiplier,\n            b: ((dec >> (bits * (bitsOffset + 1))) & mask) * multiplier,\n            a: hasAlpha ? (dec & mask) * multiplier / 255 : 1\n        }, color);\n    },\n    stringify: (channels) => {\n        const { r, g, b, a } = channels;\n        if (a < 1) { // #RRGGBBAA\n            return `#${DEC2HEX[Math.round(r)]}${DEC2HEX[Math.round(g)]}${DEC2HEX[Math.round(b)]}${DEC2HEX[Math.round(a * 255)]}`;\n        }\n        else { // #RRGGBB\n            return `#${DEC2HEX[Math.round(r)]}${DEC2HEX[Math.round(g)]}${DEC2HEX[Math.round(b)]}`;\n        }\n    }\n};\n/* EXPORT */\nexport default Hex;\n"],"mappings":"AAAA;AACA,OAAOA,CAAP,MAAc,mBAAd;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA;;AACA,MAAMC,GAAG,GAAG;EACR;EACAC,EAAE,EAAE,wCAFI;;EAGR;EACAC,KAAK,EAAGC,KAAD,IAAW;IACd,IAAIA,KAAK,CAACC,UAAN,CAAiB,CAAjB,MAAwB,EAA5B,EACI,OAFU,CAEF;;IACZ,MAAMC,KAAK,GAAGF,KAAK,CAACE,KAAN,CAAYL,GAAG,CAACC,EAAhB,CAAd;IACA,IAAI,CAACI,KAAL,EACI;IACJ,MAAMC,GAAG,GAAGD,KAAK,CAAC,CAAD,CAAjB;IACA,MAAME,GAAG,GAAGC,QAAQ,CAACF,GAAD,EAAM,EAAN,CAApB;IACA,MAAMG,MAAM,GAAGH,GAAG,CAACG,MAAnB;IACA,MAAMC,QAAQ,GAAGD,MAAM,GAAG,CAAT,KAAe,CAAhC;IACA,MAAME,YAAY,GAAGF,MAAM,GAAG,CAA9B;IACA,MAAMG,UAAU,GAAGD,YAAY,GAAG,CAAH,GAAO,EAAtC;IACA,MAAME,IAAI,GAAGF,YAAY,GAAG,CAAH,GAAO,CAAhC;IACA,MAAMG,UAAU,GAAGJ,QAAQ,GAAG,CAAH,GAAO,CAAC,CAAnC;IACA,MAAMK,IAAI,GAAGJ,YAAY,GAAG,GAAH,GAAS,EAAlC;IACA,OAAOb,gBAAgB,CAACkB,GAAjB,CAAqB;MACxBC,CAAC,EAAE,CAAEV,GAAG,IAAKM,IAAI,IAAIC,UAAU,GAAG,CAAjB,CAAb,GAAqCC,IAAtC,IAA8CH,UADzB;MAExBM,CAAC,EAAE,CAAEX,GAAG,IAAKM,IAAI,IAAIC,UAAU,GAAG,CAAjB,CAAb,GAAqCC,IAAtC,IAA8CH,UAFzB;MAGxBO,CAAC,EAAE,CAAEZ,GAAG,IAAKM,IAAI,IAAIC,UAAU,GAAG,CAAjB,CAAb,GAAqCC,IAAtC,IAA8CH,UAHzB;MAIxBQ,CAAC,EAAEV,QAAQ,GAAG,CAACH,GAAG,GAAGQ,IAAP,IAAeH,UAAf,GAA4B,GAA/B,GAAqC;IAJxB,CAArB,EAKJT,KALI,CAAP;EAMH,CAzBO;EA0BRkB,SAAS,EAAGC,QAAD,IAAc;IACrB,MAAM;MAAEL,CAAF;MAAKC,CAAL;MAAQC,CAAR;MAAWC;IAAX,IAAiBE,QAAvB;;IACA,IAAIF,CAAC,GAAG,CAAR,EAAW;MAAE;MACT,OAAQ,IAAGrB,OAAO,CAACwB,IAAI,CAACC,KAAL,CAAWP,CAAX,CAAD,CAAgB,GAAElB,OAAO,CAACwB,IAAI,CAACC,KAAL,CAAWN,CAAX,CAAD,CAAgB,GAAEnB,OAAO,CAACwB,IAAI,CAACC,KAAL,CAAWL,CAAX,CAAD,CAAgB,GAAEpB,OAAO,CAACwB,IAAI,CAACC,KAAL,CAAWJ,CAAC,GAAG,GAAf,CAAD,CAAsB,EAAnH;IACH,CAFD,MAGK;MAAE;MACH,OAAQ,IAAGrB,OAAO,CAACwB,IAAI,CAACC,KAAL,CAAWP,CAAX,CAAD,CAAgB,GAAElB,OAAO,CAACwB,IAAI,CAACC,KAAL,CAAWN,CAAX,CAAD,CAAgB,GAAEnB,OAAO,CAACwB,IAAI,CAACC,KAAL,CAAWL,CAAX,CAAD,CAAgB,EAApF;IACH;EACJ;AAlCO,CAAZ;AAoCA;;AACA,eAAenB,GAAf"},"metadata":{},"sourceType":"module"}