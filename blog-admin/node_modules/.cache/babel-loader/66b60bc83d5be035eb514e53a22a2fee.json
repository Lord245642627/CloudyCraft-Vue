{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;","map":{"version":3,"names":["echarts","require","globalListener","AxisPointerView","extendComponentView","type","render","globalAxisPointerModel","ecModel","api","globalTooltipModel","getComponent","triggerOn","get","register","currTrigger","e","dispatchAction","indexOf","x","offsetX","y","offsetY","remove","unregister","getZr","superApply","_model","arguments","dispose","_default","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/cloudycraft-vue/blog-admin/node_modules/echarts/lib/component/axisPointer/AxisPointerView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,eAAD,CAArB;;AAEA,IAAIC,cAAc,GAAGD,OAAO,CAAC,kBAAD,CAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,eAAe,GAAGH,OAAO,CAACI,mBAAR,CAA4B;EAChDC,IAAI,EAAE,aAD0C;EAEhDC,MAAM,EAAE,UAAUC,sBAAV,EAAkCC,OAAlC,EAA2CC,GAA3C,EAAgD;IACtD,IAAIC,kBAAkB,GAAGF,OAAO,CAACG,YAAR,CAAqB,SAArB,CAAzB;IACA,IAAIC,SAAS,GAAGL,sBAAsB,CAACM,GAAvB,CAA2B,WAA3B,KAA2CH,kBAAkB,IAAIA,kBAAkB,CAACG,GAAnB,CAAuB,WAAvB,CAAjE,IAAwG,iBAAxH,CAFsD,CAEqF;IAC3I;;IAEAX,cAAc,CAACY,QAAf,CAAwB,aAAxB,EAAuCL,GAAvC,EAA4C,UAAUM,WAAV,EAAuBC,CAAvB,EAA0BC,cAA1B,EAA0C;MACpF;MACA,IAAIL,SAAS,KAAK,MAAd,KAAyBG,WAAW,KAAK,OAAhB,IAA2BH,SAAS,CAACM,OAAV,CAAkBH,WAAlB,KAAkC,CAAtF,CAAJ,EAA8F;QAC5FE,cAAc,CAAC;UACbZ,IAAI,EAAE,mBADO;UAEbU,WAAW,EAAEA,WAFA;UAGbI,CAAC,EAAEH,CAAC,IAAIA,CAAC,CAACI,OAHG;UAIbC,CAAC,EAAEL,CAAC,IAAIA,CAAC,CAACM;QAJG,CAAD,CAAd;MAMD;IACF,CAVD;EAWD,CAlB+C;;EAoBhD;AACF;AACA;EACEC,MAAM,EAAE,UAAUf,OAAV,EAAmBC,GAAnB,EAAwB;IAC9BP,cAAc,CAACsB,UAAf,CAA0Bf,GAAG,CAACgB,KAAJ,EAA1B,EAAuC,aAAvC;IACAtB,eAAe,CAACuB,UAAhB,CAA2B,KAAKC,MAAhC,EAAwC,QAAxC,EAAkDC,SAAlD;EACD,CA1B+C;;EA4BhD;AACF;AACA;EACEC,OAAO,EAAE,UAAUrB,OAAV,EAAmBC,GAAnB,EAAwB;IAC/BP,cAAc,CAACsB,UAAf,CAA0B,aAA1B,EAAyCf,GAAzC;IACAN,eAAe,CAACuB,UAAhB,CAA2B,KAAKC,MAAhC,EAAwC,SAAxC,EAAmDC,SAAnD;EACD;AAlC+C,CAA5B,CAAtB;AAoCA,IAAIE,QAAQ,GAAG3B,eAAf;AACA4B,MAAM,CAACC,OAAP,GAAiBF,QAAjB"},"metadata":{},"sourceType":"script"}