{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// id may be function name of Object, add a prefix to avoid this problem.\n\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id == null ? '' + dataIndex : '' + id;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id;\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;","map":{"version":3,"names":["_config","require","__DEV__","zrUtil","_clazz","enableClassCheck","generateNodeKey","id","Graph","directed","_directed","nodes","edges","_nodesMap","_edgesMap","data","edgeData","graphProto","prototype","type","isDirected","addNode","dataIndex","nodesMap","node","Node","hostGraph","push","getNodeByIndex","rawIdx","getRawIndex","getNodeById","addEdge","n1","n2","edgesMap","isInstance","key","edge","Edge","outEdges","inEdges","getEdgeByIndex","getEdge","eachNode","cb","context","len","length","i","call","eachEdge","node1","node2","breadthFirstTraverse","startNode","direction","edgeType","__visited","queue","currentNode","shift","e","otherNode","update","count","filterSelf","idx","clone","graph","constructor","degree","inDegree","outDegree","getModel","path","itemModel","getItemModel","createGraphDataProxyMixin","hostName","dataName","getValue","dimension","get","getDimension","setVisual","value","setItemVisual","getVisual","ignoreParent","getItemVisual","setLayout","layout","merge","setItemLayout","getLayout","getItemLayout","getGraphicEl","getItemGraphicEl","mixin","_default","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-admin/node_modules/echarts/lib/data/Graph.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id == null ? '' + dataIndex : '' + id;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id;\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}