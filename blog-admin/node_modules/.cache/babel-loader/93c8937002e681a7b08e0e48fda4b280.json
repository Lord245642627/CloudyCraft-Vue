{"ast":null,"code":"var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;","map":{"version":3,"names":["smoothSpline","require","smoothBezier","buildPath","ctx","shape","closePath","points","smooth","length","controlPoints","smoothConstraint","moveTo","len","i","cp1","cp2","p","bezierCurveTo","l","lineTo","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/cloudycraft-vue/blog-admin/node_modules/zrender/lib/graphic/helper/poly.js"],"sourcesContent":["var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;"],"mappings":"AAAA,IAAIA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA1B;;AAEA,IAAIC,YAAY,GAAGD,OAAO,CAAC,gBAAD,CAA1B;;AAEA,SAASE,SAAT,CAAmBC,GAAnB,EAAwBC,KAAxB,EAA+BC,SAA/B,EAA0C;EACxC,IAAIC,MAAM,GAAGF,KAAK,CAACE,MAAnB;EACA,IAAIC,MAAM,GAAGH,KAAK,CAACG,MAAnB;;EAEA,IAAID,MAAM,IAAIA,MAAM,CAACE,MAAP,IAAiB,CAA/B,EAAkC;IAChC,IAAID,MAAM,IAAIA,MAAM,KAAK,QAAzB,EAAmC;MACjC,IAAIE,aAAa,GAAGR,YAAY,CAACK,MAAD,EAASC,MAAT,EAAiBF,SAAjB,EAA4BD,KAAK,CAACM,gBAAlC,CAAhC;MACAP,GAAG,CAACQ,MAAJ,CAAWL,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAX,EAAyBA,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAzB;MACA,IAAIM,GAAG,GAAGN,MAAM,CAACE,MAAjB;;MAEA,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIR,SAAS,GAAGO,GAAH,GAASA,GAAG,GAAG,CAA5B,CAAjB,EAAiDC,CAAC,EAAlD,EAAsD;QACpD,IAAIC,GAAG,GAAGL,aAAa,CAACI,CAAC,GAAG,CAAL,CAAvB;QACA,IAAIE,GAAG,GAAGN,aAAa,CAACI,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAvB;QACA,IAAIG,CAAC,GAAGV,MAAM,CAAC,CAACO,CAAC,GAAG,CAAL,IAAUD,GAAX,CAAd;QACAT,GAAG,CAACc,aAAJ,CAAkBH,GAAG,CAAC,CAAD,CAArB,EAA0BA,GAAG,CAAC,CAAD,CAA7B,EAAkCC,GAAG,CAAC,CAAD,CAArC,EAA0CA,GAAG,CAAC,CAAD,CAA7C,EAAkDC,CAAC,CAAC,CAAD,CAAnD,EAAwDA,CAAC,CAAC,CAAD,CAAzD;MACD;IACF,CAXD,MAWO;MACL,IAAIT,MAAM,KAAK,QAAf,EAAyB;QACvBD,MAAM,GAAGP,YAAY,CAACO,MAAD,EAASD,SAAT,CAArB;MACD;;MAEDF,GAAG,CAACQ,MAAJ,CAAWL,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAX,EAAyBA,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAzB;;MAEA,KAAK,IAAIO,CAAC,GAAG,CAAR,EAAWK,CAAC,GAAGZ,MAAM,CAACE,MAA3B,EAAmCK,CAAC,GAAGK,CAAvC,EAA0CL,CAAC,EAA3C,EAA+C;QAC7CV,GAAG,CAACgB,MAAJ,CAAWb,MAAM,CAACO,CAAD,CAAN,CAAU,CAAV,CAAX,EAAyBP,MAAM,CAACO,CAAD,CAAN,CAAU,CAAV,CAAzB;MACD;IACF;;IAEDR,SAAS,IAAIF,GAAG,CAACE,SAAJ,EAAb;EACD;AACF;;AAEDe,OAAO,CAAClB,SAAR,GAAoBA,SAApB"},"metadata":{},"sourceType":"script"}