{"ast":null,"code":"import Crontab from '@/components/Crontab';\nimport router from '@/router';\nexport default {\n  components: {\n    Crontab\n  },\n\n  created() {\n    this.current = this.$store.state.pageState.quartz;\n    this.listJobGroups();\n    this.listJobs();\n  },\n\n  data() {\n    return {\n      job: {},\n      copyJob: {},\n      title: '',\n      loading: true,\n      isDelete: false,\n      current: 1,\n      size: 10,\n      total: 0,\n      dialogFormVisible: false,\n      openCron: false,\n      expression: '',\n      openView: false,\n      editOrUpdate: true,\n      searchParams: {},\n      jobGroups: [],\n      jobs: [],\n      jobIds: [],\n      rules: {\n        jobName: [{\n          required: true,\n          message: '任务名称不能为空',\n          trigger: 'blur'\n        }],\n        invokeTarget: [{\n          required: true,\n          message: '调用目标字符串不能为空',\n          trigger: 'blur'\n        }],\n        cronExpression: [{\n          required: true,\n          message: 'cron执行表达式不能为空',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  methods: {\n    sizeChange(size) {\n      this.size = size;\n      this.listJobs();\n    },\n\n    currentChange(current) {\n      this.current = current;\n      this.$store.commit('updateQuartzPageState', current);\n      this.listJobs();\n    },\n\n    listJobGroups() {\n      this.axios.get('/api/admin/jobs/jobGroups').then(({\n        data\n      }) => {\n        this.jobGroups = data.data;\n      });\n    },\n\n    listJobs() {\n      this.searchParams.current = this.current;\n      this.searchParams.size = this.size;\n      this.axios.get('/api/admin/jobs', {\n        params: this.searchParams\n      }).then(({\n        data\n      }) => {\n        this.jobs = data.data.records;\n        this.total = data.data.total;\n        this.loading = false;\n      });\n    },\n\n    reset() {\n      this.searchParams = {};\n      this.listJobs();\n    },\n\n    selectionChange(jobs) {\n      this.jobIds = [];\n      jobs.forEach(item => {\n        this.jobIds.push(item.id);\n      });\n    },\n\n    changeStatus(job) {\n      this.axios.put('/api/admin/jobs/status', {\n        id: job.id,\n        status: job.status\n      }).then(({\n        data\n      }) => {\n        if (data.code === 0) {\n          this.$notify.success({\n            title: '成功',\n            message: '修改成功'\n          });\n          this.listJobs();\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: '修改失败'\n          });\n        }\n      });\n    },\n\n    deleteJobs(id) {\n      let param = {};\n\n      if (id == null) {\n        param = {\n          data: this.jobIds\n        };\n      } else {\n        param = {\n          data: [id]\n        };\n      }\n\n      this.axios.delete('/api/admin/jobs', param).then(({\n        data\n      }) => {\n        if (data.code === 0) {\n          this.$notify.success({\n            title: '成功',\n            message: '删除成功'\n          });\n          this.listJobs();\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: '删除失败'\n          });\n        }\n\n        this.isDelete = false;\n      });\n    },\n\n    handleShowCron() {\n      this.expression = this.job.cronExpression;\n      this.openCron = true;\n    },\n\n    handleAdd() {\n      this.editOrUpdate = false;\n      this.job = {};\n      this.title = '新增任务';\n      this.dialogFormVisible = true;\n    },\n\n    handleChange(jobId) {\n      this.editOrUpdate = true;\n      this.title = '编辑任务';\n      this.axios.get('/api/admin/jobs/' + jobId).then(({\n        data\n      }) => {\n        this.job = data.data;\n      });\n      this.dialogFormVisible = true;\n    },\n\n    crontabFill(value) {\n      this.job.cronExpression = value;\n    },\n\n    handleEditOrUpdate() {\n      if (this.editOrUpdate === true) {\n        this.axios.put('/api/admin/jobs', this.job).then(({\n          data\n        }) => {\n          if (data.code === 0) {\n            this.$notify.success({\n              title: '修改成功',\n              message: data.message\n            });\n            this.listJobs();\n          } else {\n            this.$notify.error({\n              title: '修改失败',\n              message: data.message\n            });\n          }\n\n          this.dialogFormVisible = false;\n        });\n      } else if (this.editOrUpdate === false) {\n        this.axios.post('/api/admin/jobs', this.job).then(({\n          data\n        }) => {\n          if (data.code === 0) {\n            this.$notify.success({\n              title: '添加成功',\n              message: data.message\n            });\n            this.listJobs();\n          } else {\n            this.$notify.error({\n              title: '添加失败',\n              message: data.message\n            });\n          }\n\n          this.dialogFormVisible = false;\n        });\n      }\n    },\n\n    handleCommand(command, row) {\n      switch (command) {\n        case 'handleRun':\n          this.handleRun(row);\n          break;\n\n        case 'handleView':\n          this.handleView(row);\n          break;\n\n        case 'handleJobLog':\n          this.handleJobLog(row.id);\n          break;\n\n        default:\n          break;\n      }\n    },\n\n    handleRun(job) {\n      let params = {\n        id: job.id,\n        jobGroup: job.jobGroup\n      };\n      this.axios.put('/api/admin/jobs/run', params).then(({\n        data\n      }) => {\n        if (data.code === 0) {\n          this.$notify.success({\n            title: '执行成功',\n            message: data.message\n          });\n        } else {\n          this.$notify.error({\n            title: '执行失败',\n            message: data.message\n          });\n        }\n      });\n    },\n\n    handleView(job) {\n      this.openView = true;\n      this.job = job;\n    },\n\n    handleJobLog(jobId) {\n      router.push({\n        path: '/quartz/log/' + jobId\n      });\n    },\n\n    openLog() {\n      router.push({\n        path: '/quartz/log/all'\n      });\n    },\n\n    afterClosed() {\n      this.job = '';\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}