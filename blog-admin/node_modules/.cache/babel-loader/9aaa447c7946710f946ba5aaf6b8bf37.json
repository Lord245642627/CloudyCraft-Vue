{"ast":null,"code":"import Crontab from '@/components/Crontab';\nimport router from '@/router';\nexport default {\n  components: {\n    Crontab\n  },\n\n  created() {\n    this.current = this.$store.state.pageState.quartz;\n    this.listJobGroups();\n    this.listJobs();\n  },\n\n  data() {\n    return {\n      job: {},\n      copyJob: {},\n      title: '',\n      loading: true,\n      isDelete: false,\n      current: 1,\n      size: 10,\n      total: 0,\n      dialogFormVisible: false,\n      openCron: false,\n      expression: '',\n      openView: false,\n      editOrUpdate: true,\n      searchParams: {},\n      jobGroups: [],\n      jobs: [],\n      jobIds: [],\n      rules: {\n        jobName: [{\n          required: true,\n          message: '任务名称不能为空',\n          trigger: 'blur'\n        }],\n        invokeTarget: [{\n          required: true,\n          message: '调用目标字符串不能为空',\n          trigger: 'blur'\n        }],\n        cronExpression: [{\n          required: true,\n          message: 'cron执行表达式不能为空',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  methods: {\n    sizeChange(size) {\n      this.size = size;\n      this.listJobs();\n    },\n\n    currentChange(current) {\n      this.current = current;\n      this.$store.commit('updateQuartzPageState', current);\n      this.listJobs();\n    },\n\n    listJobGroups() {\n      this.axios.get('/api/admin/jobs/jobGroups').then(({\n        data\n      }) => {\n        this.jobGroups = data.data;\n      });\n    },\n\n    listJobs() {\n      this.searchParams.current = this.current;\n      this.searchParams.size = this.size;\n      this.axios.get('/api/admin/jobs', {\n        params: this.searchParams\n      }).then(({\n        data\n      }) => {\n        this.jobs = data.data.records;\n        this.count = data.data.count;\n        this.loading = false;\n      });\n    },\n\n    reset() {\n      this.searchParams = {};\n      this.listJobs();\n    },\n\n    selectionChange(jobs) {\n      this.jobIds = [];\n      jobs.forEach(item => {\n        this.jobIds.push(item.id);\n      });\n    },\n\n    changeStatus(job) {\n      this.axios.put('/api/admin/jobs/status', {\n        id: job.id,\n        status: job.status\n      }).then(({\n        data\n      }) => {\n        if (data.code === 0) {\n          this.$notify.success({\n            title: '成功',\n            message: '修改成功'\n          });\n          this.listJobs();\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: '修改失败'\n          });\n        }\n      });\n    },\n\n    deleteJobs(id) {\n      let param = {};\n\n      if (id == null) {\n        param = {\n          data: this.jobIds\n        };\n      } else {\n        param = {\n          data: [id]\n        };\n      }\n\n      this.axios.delete('/api/admin/jobs', param).then(({\n        data\n      }) => {\n        if (data.code === 0) {\n          this.$notify.success({\n            title: '成功',\n            message: '删除成功'\n          });\n          this.listJobs();\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: '删除失败'\n          });\n        }\n\n        this.isDelete = false;\n      });\n    },\n\n    handleShowCron() {\n      this.expression = this.job.cronExpression;\n      this.openCron = true;\n    },\n\n    handleAdd() {\n      this.editOrUpdate = false;\n      this.job = {};\n      this.title = '新增任务';\n      this.dialogFormVisible = true;\n    },\n\n    handleChange(jobId) {\n      this.editOrUpdate = true;\n      this.title = '编辑任务';\n      this.axios.get('/api/admin/jobs/' + jobId).then(({\n        data\n      }) => {\n        this.job = data.data;\n      });\n      this.dialogFormVisible = true;\n    },\n\n    crontabFill(value) {\n      this.job.cronExpression = value;\n    },\n\n    handleEditOrUpdate() {\n      if (this.editOrUpdate === true) {\n        this.axios.put('/api/admin/jobs', this.job).then(({\n          data\n        }) => {\n          if (data.code === 0) {\n            this.$notify.success({\n              title: '修改成功',\n              message: data.message\n            });\n            this.listJobs();\n          } else {\n            this.$notify.error({\n              title: '修改失败',\n              message: data.message\n            });\n          }\n\n          this.dialogFormVisible = false;\n        });\n      } else if (this.editOrUpdate === false) {\n        this.axios.post('/api/admin/jobs', this.job).then(({\n          data\n        }) => {\n          if (data.code === 0) {\n            this.$notify.success({\n              title: '添加成功',\n              message: data.message\n            });\n            this.listJobs();\n          } else {\n            this.$notify.error({\n              title: '添加失败',\n              message: data.message\n            });\n          }\n\n          this.dialogFormVisible = false;\n        });\n      }\n    },\n\n    handleCommand(command, row) {\n      switch (command) {\n        case 'handleRun':\n          this.handleRun(row);\n          break;\n\n        case 'handleView':\n          this.handleView(row);\n          break;\n\n        case 'handleJobLog':\n          this.handleJobLog(row.id);\n          break;\n\n        default:\n          break;\n      }\n    },\n\n    handleRun(job) {\n      let params = {\n        id: job.id,\n        jobGroup: job.jobGroup\n      };\n      this.axios.put('/api/admin/jobs/run', params).then(({\n        data\n      }) => {\n        if (data.code === 0) {\n          this.$notify.success({\n            title: '执行成功',\n            message: data.message\n          });\n        } else {\n          this.$notify.error({\n            title: '执行失败',\n            message: data.message\n          });\n        }\n      });\n    },\n\n    handleView(job) {\n      this.openView = true;\n      this.job = job;\n    },\n\n    handleJobLog(jobId) {\n      router.push({\n        path: '/quartz/log/' + jobId\n      });\n    },\n\n    openLog() {\n      router.push({\n        path: '/quartz/log/all'\n      });\n    },\n\n    afterClosed() {\n      this.job = '';\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAsQA;AACA;AACA;EACAA;IAAAC;EAAA,CADA;;EAEAC;IACA;IACA;IACA;EACA,CANA;;EAOAC;IACA;MACAC,OADA;MAEAC,WAFA;MAGAC,SAHA;MAIAC,aAJA;MAKAC,eALA;MAMAC,UANA;MAOAC,QAPA;MAQAC,QARA;MASAC,wBATA;MAUAC,eAVA;MAWAC,cAXA;MAYAC,eAZA;MAaAC,kBAbA;MAcAC,gBAdA;MAeAC,aAfA;MAgBAC,QAhBA;MAiBAC,UAjBA;MAkBAC;QACAC;UAAAC;UAAAC;UAAAC;QAAA,EADA;QAEAC;UAAAH;UAAAC;UAAAC;QAAA,EAFA;QAGAE;UAAAJ;UAAAC;UAAAC;QAAA;MAHA;IAlBA;EAwBA,CAhCA;;EAiCAG;IACAC;MACA;MACA;IACA,CAJA;;IAKAC;MACA;MACA;MACA;IACA,CATA;;IAUAC;MACA;QAAA5B;MAAA;QACA;MACA,CAFA;IAGA,CAdA;;IAeA6B;MACA;MACA;MACA,WACAC,GADA,CACA,iBADA,EACA;QACAC;MADA,CADA,EAIAC,IAJA,CAIA;QAAAhC;MAAA;QACA;QACA;QACA;MACA,CARA;IASA,CA3BA;;IA4BAiC;MACA;MACA;IACA,CA/BA;;IAgCAC;MACA;MACAlB;QACA;MACA,CAFA;IAGA,CArCA;;IAsCAmB;MACA,WACAC,GADA,CACA,wBADA,EACA;QACAC,UADA;QAEAC;MAFA,CADA,EAKAN,IALA,CAKA;QAAAhC;MAAA;QACA;UACA;YACAG,WADA;YAEAkB;UAFA;UAIA;QACA,CANA,MAMA;UACA;YACAlB,WADA;YAEAkB;UAFA;QAIA;MACA,CAlBA;IAmBA,CA1DA;;IA2DAkB;MACA;;MACA;QACAC;UAAAxC;QAAA;MACA,CAFA,MAEA;QACAwC;UAAAxC;QAAA;MACA;;MACA;QAAAA;MAAA;QACA;UACA;YACAG,WADA;YAEAkB;UAFA;UAIA;QACA,CANA,MAMA;UACA;YACAlB,WADA;YAEAkB;UAFA;QAIA;;QACA;MACA,CAdA;IAeA,CAjFA;;IAkFAoB;MACA;MACA;IACA,CArFA;;IAsFAC;MACA;MACA;MACA;MACA;IACA,CA3FA;;IA4FAC;MACA;MACA;MACA;QAAA3C;MAAA;QACA;MACA,CAFA;MAGA;IACA,CAnGA;;IAoGA4C;MACA;IACA,CAtGA;;IAuGAC;MACA;QACA;UAAA7C;QAAA;UACA;YACA;cACAG,aADA;cAEAkB;YAFA;YAIA;UACA,CANA,MAMA;YACA;cACAlB,aADA;cAEAkB;YAFA;UAIA;;UACA;QACA,CAdA;MAeA,CAhBA,MAgBA;QACA;UAAArB;QAAA;UACA;YACA;cACAG,aADA;cAEAkB;YAFA;YAIA;UACA,CANA,MAMA;YACA;cACAlB,aADA;cAEAkB;YAFA;UAIA;;UACA;QACA,CAdA;MAeA;IACA,CAzIA;;IA0IAyB;MACA;QACA;UACA;UACA;;QACA;UACA;UACA;;QACA;UACA;UACA;;QACA;UACA;MAXA;IAaA,CAxJA;;IAyJAC;MACA;QACAV,UADA;QAEAW;MAFA;MAIA;QAAAhD;MAAA;QACA;UACA;YACAG,aADA;YAEAkB;UAFA;QAIA,CALA,MAKA;UACA;YACAlB,aADA;YAEAkB;UAFA;QAIA;MACA,CAZA;IAaA,CA3KA;;IA4KA4B;MACA;MACA;IACA,CA/KA;;IAgLAC;MACAC;QAAAC;MAAA;IACA,CAlLA;;IAmLAC;MACAF;QAAAC;MAAA;IACA,CArLA;;IAsLAE;MACA;IACA;;EAxLA;AAjCA","names":["components","Crontab","created","data","job","copyJob","title","loading","isDelete","current","size","total","dialogFormVisible","openCron","expression","openView","editOrUpdate","searchParams","jobGroups","jobs","jobIds","rules","jobName","required","message","trigger","invokeTarget","cronExpression","methods","sizeChange","currentChange","listJobGroups","listJobs","get","params","then","reset","selectionChange","changeStatus","put","id","status","deleteJobs","param","handleShowCron","handleAdd","handleChange","crontabFill","handleEditOrUpdate","handleCommand","handleRun","jobGroup","handleView","handleJobLog","router","path","openLog","afterClosed"],"sourceRoot":"src/views/quartz","sources":["Quartz.vue"],"sourcesContent":["<template>\n  <el-card class=\"main-card\">\n    <el-form ref=\"queryForm\" :inline=\"true\" label-width=\"68px\">\n      <el-form-item label=\"任务名称\" prop=\"jobName\">\n        <el-input\n          v-model=\"searchParams.jobName\"\n          placeholder=\"请输入任务名称\"\n          clearable\n          size=\"small\"\n          @keyup.enter.native=\"listJobs\" />\n      </el-form-item>\n      <el-form-item label=\"任务组名\" prop=\"jobGroup\">\n        <el-select\n          @change=\"listJobs\"\n          v-model=\"searchParams.jobGroup\"\n          placeholder=\"请选择任务组名\"\n          clearable\n          size=\"small\">\n          <el-option v-for=\"jobGroup in jobGroups\" :key=\"jobGroup\" :label=\"jobGroup\" :value=\"jobGroup\" />\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"任务状态\" prop=\"status\">\n        <el-select @change=\"listJobs\" v-model=\"searchParams.status\" placeholder=\"请选择任务状态\" clearable size=\"small\">\n          <el-option label=\"正常\" :value=\"1\" />\n          <el-option label=\"暂停\" :value=\"0\" />\n        </el-select>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"small\" @click=\"listJobs\">搜索</el-button>\n        <el-button icon=\"el-icon-refresh\" size=\"small\" @click=\"reset\">重置</el-button>\n      </el-form-item>\n    </el-form>\n    <el-row :gutter=\"10\" class=\"mb8\">\n      <el-col :span=\"1.5\">\n        <el-button type=\"primary\" icon=\"el-icon-plus\" size=\"small\" @click=\"handleAdd\">新增</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button type=\"info\" icon=\"el-icon-s-operation\" size=\"small\" @click=\"openLog\">日志</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"danger\"\n          size=\"small\"\n          icon=\"el-icon-delete\"\n          :disabled=\"jobIds.length == 0\"\n          @click=\"isDelete = true\">\n          批量删除\n        </el-button>\n      </el-col>\n    </el-row>\n    <div style=\"margin-top: 5px\">\n      <el-table border style=\"width: 100%\" :data=\"jobs\" @selection-change=\"selectionChange\" v-loading=\"loading\">\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n        <el-table-column label=\"任务名称\" width=\"160\" align=\"center\" prop=\"jobName\" :show-overflow-tooltip=\"true\" />\n        <el-table-column label=\"任务组名\" align=\"center\" prop=\"jobGroup\">\n          <template slot-scope=\"scope\">\n            <el-tag>\n              {{ scope.row.jobGroup }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"调用目标字符串\" align=\"center\" prop=\"invokeTarget\" :show-overflow-tooltip=\"true\" />\n        <el-table-column label=\"cron执行表达式\" align=\"center\" prop=\"cronExpression\" :show-overflow-tooltip=\"true\" />\n        <el-table-column label=\"状态\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <el-switch\n              v-model=\"scope.row.status\"\n              active-color=\"#13ce66\"\n              inactive-color=\"#F4F4F5\"\n              :active-value=\"1\"\n              :inactive-value=\"0\"\n              @change=\"changeStatus(scope.row)\"></el-switch>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"创建时间\" align=\"center\" width=\"160\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.createTime | dateTime }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"备注\" align=\"center\" width=\"160\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.remark }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n          <template slot-scope=\"scope\">\n            <el-button size=\"mini\" type=\"text\" @click=\"handleChange(scope.row.id)\">编辑</el-button>\n            <el-popconfirm title=\"确定删除吗？\" style=\"margin-left: 10px\" @confirm=\"deleteJobs(scope.row.id)\">\n              <el-button size=\"mini\" type=\"text\" slot=\"reference\">删除</el-button>\n            </el-popconfirm>\n            <el-dropdown size=\"mini\" @command=\"(command) => handleCommand(command, scope.row)\">\n              <el-button size=\"mini\" type=\"text\" style=\"margin-left: 9px\">更多</el-button>\n              <el-dropdown-menu slot=\"dropdown\">\n                <el-dropdown-item command=\"handleRun\" icon=\"el-icon-caret-right\">执行一次</el-dropdown-item>\n                <el-dropdown-item command=\"handleView\" icon=\"el-icon-view\">任务详细</el-dropdown-item>\n                <el-dropdown-item command=\"handleJobLog\" icon=\"el-icon-s-operation\">调度日志</el-dropdown-item>\n              </el-dropdown-menu>\n            </el-dropdown>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <el-pagination\n      class=\"pagination-container\"\n      background\n      @size-change=\"sizeChange\"\n      @current-change=\"currentChange\"\n      :current-page=\"current\"\n      :page-size=\"size\"\n      :total=\"total\"\n      :page-sizes=\"[10, 20]\"\n      layout=\"total, sizes, prev, pager, next, jumper\" />\n    <el-dialog :visible.sync=\"isDelete\" width=\"30%\">\n      <div class=\"dialog-title-container\" slot=\"title\"><i class=\"el-icon-warning\" style=\"color: #ff9900\" />提示</div>\n      <div style=\"font-size: 1rem\">是否删除选中项？</div>\n      <div slot=\"footer\">\n        <el-button @click=\"isDelete = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"deleteJobs(null)\"> 确 定 </el-button>\n      </div>\n    </el-dialog>\n    <el-dialog :title=\"title\" :visible.sync=\"dialogFormVisible\" width=\"800px\" append-to-body>\n      <el-form ref=\"dataForm\" :model=\"job\" :rules=\"rules\" label-width=\"120px\">\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item label=\"任务名称\" prop=\"jobName\">\n              <el-input v-model=\"job.jobName\" placeholder=\"请输入任务名称\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"任务分组\" prop=\"jobName\">\n              <el-input v-model=\"job.jobGroup\" placeholder=\"请输入任务名称\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item prop=\"invokeTarget\">\n              <span slot=\"label\">\n                调用方法\n                <el-tooltip placement=\"top\">\n                  <div slot=\"content\">\n                    Bean调用示例：auroraQuartz.blogParams('blog')\n                    <br />Class类调用示例：com.aurora.quartz.AuroraQuartz.blogParams('blog')\n                    <br />参数说明：支持字符串，布尔类型，长整型，浮点型，整型\n                  </div>\n                  <i class=\"el-icon-question\"></i>\n                </el-tooltip>\n              </span>\n              <el-input v-model=\"job.invokeTarget\" placeholder=\"请输入调用目标字符串\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"cron表达式\" prop=\"cronExpression\">\n              <el-input v-model=\"job.cronExpression\" placeholder=\"请输入cron执行表达式\">\n                <template slot=\"append\">\n                  <el-button type=\"primary\" @click=\"handleShowCron\">\n                    生成表达式\n                    <i class=\"el-icon-time el-icon--right\"></i>\n                  </el-button>\n                </template>\n              </el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"错误策略\" prop=\"misfirePolicy\">\n              <el-radio-group v-model=\"job.misfirePolicy\">\n                <el-radio-button :label=\"0\">默认策略</el-radio-button>\n                <el-radio-button :label=\"1\">立即执行</el-radio-button>\n                <el-radio-button :label=\"2\">执行一次</el-radio-button>\n                <el-radio-button :label=\"3\">放弃执行</el-radio-button>\n              </el-radio-group>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"是否并发\" prop=\"concurrent\">\n              <el-radio-group v-model=\"job.concurrent\" size=\"small\">\n                <el-radio-button :label=\"0\">允许</el-radio-button>\n                <el-radio-button :label=\"1\">禁止</el-radio-button>\n              </el-radio-group>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"状态\">\n              <el-radio-group v-model=\"job.status\">\n                <el-radio :label=\"1\">正常</el-radio>\n                <el-radio :label=\"0\">暂停</el-radio>\n              </el-radio-group>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item label=\"备注\" prop=\"remark\">\n              <el-input v-model=\"job.remark\" placeholder=\"备注信息\" type=\"textarea\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"handleEditOrUpdate\">确 定</el-button>\n      </div>\n    </el-dialog>\n    <el-dialog title=\"Cron表达式生成器\" :visible.sync=\"openCron\" append-to-body destroy-on-close class=\"scrollbar\">\n      <crontab @hide=\"openCron = false\" @fill=\"crontabFill\" :expression=\"expression\"></crontab>\n    </el-dialog>\n    <el-dialog title=\"任务详细\" :visible.sync=\"openView\" @closed=\"afterClosed\" width=\"700px\" append-to-body>\n      <el-form ref=\"form\" :model=\"job\" label-width=\"120px\" size=\"mini\">\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item label=\"任务编号：\">{{ job.id }}</el-form-item>\n            <el-form-item label=\"任务名称：\">{{ job.jobName }}</el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"任务分组：\">\n              {{ job.jobGroup }}\n            </el-form-item>\n            <el-form-item label=\"创建时间：\">{{ job.createTime | dateTime }}</el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"cron表达式：\">{{ job.cronExpression }}</el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"下次执行时间：\">{{ job.nextValidTime | dateTime }}</el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"调用目标方法：\">{{ job.invokeTarget }}</el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"任务状态：\">\n              <div v-if=\"job.status === 1\">正常</div>\n              <div v-else-if=\"job.status === 0\">暂停</div>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"是否并发：\">\n              <div v-if=\"job.concurrent === 1\">允许</div>\n              <div v-else-if=\"job.concurrent === 0\">禁止</div>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"执行策略：\">\n              <div v-if=\"job.concurrent === 0\">默认策略</div>\n              <div v-else-if=\"job.concurrent === 1\">立即执行</div>\n              <div v-else-if=\"job.concurrent === 2\">执行一次</div>\n              <div v-else-if=\"job.concurrent === 3\">放弃执行</div>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item label=\"备注：\">\n              <div>{{ job.remark }}</div>\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"openView = false\">关 闭</el-button>\n      </div>\n    </el-dialog>\n  </el-card>\n</template>\n<script>\nimport Crontab from '@/components/Crontab'\nimport router from '@/router'\nexport default {\n  components: { Crontab },\n  created() {\n    this.current = this.$store.state.pageState.quartz\n    this.listJobGroups()\n    this.listJobs()\n  },\n  data() {\n    return {\n      job: {},\n      copyJob: {},\n      title: '',\n      loading: true,\n      isDelete: false,\n      current: 1,\n      size: 10,\n      total: 0,\n      dialogFormVisible: false,\n      openCron: false,\n      expression: '',\n      openView: false,\n      editOrUpdate: true,\n      searchParams: {},\n      jobGroups: [],\n      jobs: [],\n      jobIds: [],\n      rules: {\n        jobName: [{ required: true, message: '任务名称不能为空', trigger: 'blur' }],\n        invokeTarget: [{ required: true, message: '调用目标字符串不能为空', trigger: 'blur' }],\n        cronExpression: [{ required: true, message: 'cron执行表达式不能为空', trigger: 'blur' }]\n      }\n    }\n  },\n  methods: {\n    sizeChange(size) {\n      this.size = size\n      this.listJobs()\n    },\n    currentChange(current) {\n      this.current = current\n      this.$store.commit('updateQuartzPageState', current)\n      this.listJobs()\n    },\n    listJobGroups() {\n      this.axios.get('/api/admin/jobs/jobGroups').then(({ data }) => {\n        this.jobGroups = data.data\n      })\n    },\n    listJobs() {\n      this.searchParams.current = this.current\n      this.searchParams.size = this.size\n      this.axios\n        .get('/api/admin/jobs', {\n          params: this.searchParams\n        })\n        .then(({ data }) => {\n          this.jobs = data.data.records\n          this.count = data.data.count\n          this.loading = false\n        })\n    },\n    reset() {\n      this.searchParams = {}\n      this.listJobs()\n    },\n    selectionChange(jobs) {\n      this.jobIds = []\n      jobs.forEach((item) => {\n        this.jobIds.push(item.id)\n      })\n    },\n    changeStatus(job) {\n      this.axios\n        .put('/api/admin/jobs/status', {\n          id: job.id,\n          status: job.status\n        })\n        .then(({ data }) => {\n          if (data.code === 0) {\n            this.$notify.success({\n              title: '成功',\n              message: '修改成功'\n            })\n            this.listJobs()\n          } else {\n            this.$notify.error({\n              title: '失败',\n              message: '修改失败'\n            })\n          }\n        })\n    },\n    deleteJobs(id) {\n      let param = {}\n      if (id == null) {\n        param = { data: this.jobIds }\n      } else {\n        param = { data: [id] }\n      }\n      this.axios.delete('/api/admin/jobs', param).then(({ data }) => {\n        if (data.code === 0) {\n          this.$notify.success({\n            title: '成功',\n            message: '删除成功'\n          })\n          this.listJobs()\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: '删除失败'\n          })\n        }\n        this.isDelete = false\n      })\n    },\n    handleShowCron() {\n      this.expression = this.job.cronExpression\n      this.openCron = true\n    },\n    handleAdd() {\n      this.editOrUpdate = false\n      this.job = {}\n      this.title = '新增任务'\n      this.dialogFormVisible = true\n    },\n    handleChange(jobId) {\n      this.editOrUpdate = true\n      this.title = '编辑任务'\n      this.axios.get('/api/admin/jobs/' + jobId).then(({ data }) => {\n        this.job = data.data\n      })\n      this.dialogFormVisible = true\n    },\n    crontabFill(value) {\n      this.job.cronExpression = value\n    },\n    handleEditOrUpdate() {\n      if (this.editOrUpdate === true) {\n        this.axios.put('/api/admin/jobs', this.job).then(({ data }) => {\n          if (data.code === 0) {\n            this.$notify.success({\n              title: '修改成功',\n              message: data.message\n            })\n            this.listJobs()\n          } else {\n            this.$notify.error({\n              title: '修改失败',\n              message: data.message\n            })\n          }\n          this.dialogFormVisible = false\n        })\n      } else if (this.editOrUpdate === false) {\n        this.axios.post('/api/admin/jobs', this.job).then(({ data }) => {\n          if (data.code === 0) {\n            this.$notify.success({\n              title: '添加成功',\n              message: data.message\n            })\n            this.listJobs()\n          } else {\n            this.$notify.error({\n              title: '添加失败',\n              message: data.message\n            })\n          }\n          this.dialogFormVisible = false\n        })\n      }\n    },\n    handleCommand(command, row) {\n      switch (command) {\n        case 'handleRun':\n          this.handleRun(row)\n          break\n        case 'handleView':\n          this.handleView(row)\n          break\n        case 'handleJobLog':\n          this.handleJobLog(row.id)\n          break\n        default:\n          break\n      }\n    },\n    handleRun(job) {\n      let params = {\n        id: job.id,\n        jobGroup: job.jobGroup\n      }\n      this.axios.put('/api/admin/jobs/run', params).then(({ data }) => {\n        if (data.code === 0) {\n          this.$notify.success({\n            title: '执行成功',\n            message: data.message\n          })\n        } else {\n          this.$notify.error({\n            title: '执行失败',\n            message: data.message\n          })\n        }\n      })\n    },\n    handleView(job) {\n      this.openView = true\n      this.job = job\n    },\n    handleJobLog(jobId) {\n      router.push({ path: '/quartz/log/' + jobId })\n    },\n    openLog() {\n      router.push({ path: '/quartz/log/all' })\n    },\n    afterClosed() {\n      this.job = ''\n    }\n  }\n}\n</script>\n<style>\n.el-textarea__inner {\n  resize: none !important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}