{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * It is `[rangeModeForMin, rangeModeForMax]`.\n     * The optional values for `rangeMode`:\n     * + `'value'` mode: the axis extent will always be determined by\n     *     `dataZoom.startValue` and `dataZoom.endValue`, despite\n     *     how data like and how `axis.min` and `axis.max` are.\n     * + `'percent'` mode: `100` represents 100% of the `[dMin, dMax]`,\n     *     where `dMin` is `axis.min` if `axis.min` specified, otherwise `data.extent[0]`,\n     *     and `dMax` is `axis.max` if `axis.max` specified, otherwise `data.extent[1]`.\n     *     Axis extent will be determined by the result of the percent of `[dMin, dMax]`.\n     *\n     * For example, when users are using dynamic data (update data periodically via `setOption`),\n     * if in `'value`' mode, the window will be kept in a fixed value range despite how\n     * data are appended, while if in `'percent'` mode, whe window range will be changed alone with\n     * the appended data (suppose `axis.min` and `axis.max` are not specified).\n     *\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var inputRawOption = retrieveRawOption(option);\n    /**\n     * Suppose a \"main process\" start at the point that model prepared (that is,\n     * model initialized or merged or method called in `action`).\n     * We should keep the `main process` idempotent, that is, given a set of values\n     * on `option`, we get the same result.\n     *\n     * But sometimes, values on `option` will be updated for providing users\n     * a \"final calculated value\" (`dataZoomProcessor` will do that). Those value\n     * should not be the base/input of the `main process`.\n     *\n     * So in that case we should save and keep the input of the `main process`\n     * separately, called `settledOption`.\n     *\n     * For example, consider the case:\n     * (Step_1) brush zoom the grid by `toolbox.dataZoom`,\n     *     where the original input `option.startValue`, `option.endValue` are earsed by\n     *     calculated value.\n     * (Step)2) click the legend to hide and show a series,\n     *     where the new range is calculated by the earsed `startValue` and `endValue`,\n     *     which brings incorrect result.\n     *\n     * @readOnly\n     */\n\n    this.settledOption = inputRawOption;\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(inputRawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var inputRawOption = retrieveRawOption(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    zrUtil.merge(this.settledOption, inputRawOption, true);\n    this.doInit(inputRawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (inputRawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(inputRawOption);\n\n    updateRangeUse(this, inputRawOption);\n    var settledOption = this.settledOption;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = settledOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (inputRawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (inputRawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  setRawRange: function (opt) {\n    var thisOption = this.option;\n    var settledOption = this.settledOption;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // Consider the pair <start, startValue>:\n      // If one has value and the other one is `null/undefined`, we both set them\n      // to `settledOption`. This strategy enables the feature to clear the original\n      // value in `settledOption` to `null/undefined`.\n      // But if both of them are `null/undefined`, we do not set them to `settledOption`\n      // and keep `settledOption` with the original value. This strategy enables users to\n      // only set <end or endValue> but not set <start or startValue> when calling\n      // `dispatchAction`.\n      // The pair <end, endValue> is treated in the same way.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        thisOption[names[0]] = settledOption[names[0]] = opt[names[0]];\n        thisOption[names[1]] = settledOption[names[1]] = opt[names[1]];\n      }\n    }, this);\n    updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  setCalculatedRange: function (opt) {\n    var option = this.option;\n    each(['start', 'startValue', 'end', 'endValue'], function (name) {\n      option[name] = opt[name];\n    });\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n/**\n * Retrieve the those raw params from option, which will be cached separately.\n * becasue they will be overwritten by normalized/calculated values in the main\n * process.\n */\n\nfunction retrieveRawOption(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, inputRawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = inputRawOption[names[0]] != null;\n    var valueSpecified = inputRawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;","map":{"version":3,"names":["_config","require","__DEV__","echarts","zrUtil","env","modelUtil","helper","AxisProxy","each","eachAxisDim","DataZoomModel","extendComponentModel","type","dependencies","defaultOption","zlevel","z","orient","xAxisIndex","yAxisIndex","filterMode","throttle","start","end","startValue","endValue","minSpan","maxSpan","minValueSpan","maxValueSpan","rangeMode","init","option","parentModel","ecModel","_dataIntervalByAxis","_dataInfo","_axisProxies","textStyleModel","_autoThrottle","_rangePropMode","inputRawOption","retrieveRawOption","settledOption","mergeDefaultAndTheme","doInit","mergeOption","newOption","merge","thisOption","canvasSupported","realtime","_setDefaultThrottle","updateRangeUse","names","index","getModel","_resetTarget","_giveAxisProxies","axisProxies","eachTargetAxis","dimNames","axisIndex","dataZoomModel","axisModel","dependentModels","axis","axisProxy","__dzAxisProxy","name","autoMode","_judgeAutoMode","axisIndexName","normalizeToArray","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","get","dimName","length","singleAxis","singleAxisModel","singleAxisIndex","componentIndex","axisIndices","axisModels","i","len","push","eachSeries","seriesModel","_isSeriesHasAllAxesTypeOf","axisId","queryComponents","mainType","id","indexOf","dim","axisType","is","seriesAxisIndex","hasOwnProperty","globalOption","animation","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","indices","callback","context","call","getAxisProxy","getAxisModel","setRawRange","opt","setCalculatedRange","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","key","hostedBy","getRangePropMode","slice","ret","rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","_default","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/cloudycraft-vue/blog-admin/node_modules/echarts/lib/component/dataZoom/DataZoomModel.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * It is `[rangeModeForMin, rangeModeForMax]`.\n     * The optional values for `rangeMode`:\n     * + `'value'` mode: the axis extent will always be determined by\n     *     `dataZoom.startValue` and `dataZoom.endValue`, despite\n     *     how data like and how `axis.min` and `axis.max` are.\n     * + `'percent'` mode: `100` represents 100% of the `[dMin, dMax]`,\n     *     where `dMin` is `axis.min` if `axis.min` specified, otherwise `data.extent[0]`,\n     *     and `dMax` is `axis.max` if `axis.max` specified, otherwise `data.extent[1]`.\n     *     Axis extent will be determined by the result of the percent of `[dMin, dMax]`.\n     *\n     * For example, when users are using dynamic data (update data periodically via `setOption`),\n     * if in `'value`' mode, the window will be kept in a fixed value range despite how\n     * data are appended, while if in `'percent'` mode, whe window range will be changed alone with\n     * the appended data (suppose `axis.min` and `axis.max` are not specified).\n     *\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var inputRawOption = retrieveRawOption(option);\n    /**\n     * Suppose a \"main process\" start at the point that model prepared (that is,\n     * model initialized or merged or method called in `action`).\n     * We should keep the `main process` idempotent, that is, given a set of values\n     * on `option`, we get the same result.\n     *\n     * But sometimes, values on `option` will be updated for providing users\n     * a \"final calculated value\" (`dataZoomProcessor` will do that). Those value\n     * should not be the base/input of the `main process`.\n     *\n     * So in that case we should save and keep the input of the `main process`\n     * separately, called `settledOption`.\n     *\n     * For example, consider the case:\n     * (Step_1) brush zoom the grid by `toolbox.dataZoom`,\n     *     where the original input `option.startValue`, `option.endValue` are earsed by\n     *     calculated value.\n     * (Step)2) click the legend to hide and show a series,\n     *     where the new range is calculated by the earsed `startValue` and `endValue`,\n     *     which brings incorrect result.\n     *\n     * @readOnly\n     */\n\n    this.settledOption = inputRawOption;\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(inputRawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var inputRawOption = retrieveRawOption(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    zrUtil.merge(this.settledOption, inputRawOption, true);\n    this.doInit(inputRawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (inputRawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(inputRawOption);\n\n    updateRangeUse(this, inputRawOption);\n    var settledOption = this.settledOption;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = settledOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (inputRawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (inputRawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  setRawRange: function (opt) {\n    var thisOption = this.option;\n    var settledOption = this.settledOption;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // Consider the pair <start, startValue>:\n      // If one has value and the other one is `null/undefined`, we both set them\n      // to `settledOption`. This strategy enables the feature to clear the original\n      // value in `settledOption` to `null/undefined`.\n      // But if both of them are `null/undefined`, we do not set them to `settledOption`\n      // and keep `settledOption` with the original value. This strategy enables users to\n      // only set <end or endValue> but not set <start or startValue> when calling\n      // `dispatchAction`.\n      // The pair <end, endValue> is treated in the same way.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        thisOption[names[0]] = settledOption[names[0]] = opt[names[0]];\n        thisOption[names[1]] = settledOption[names[1]] = opt[names[1]];\n      }\n    }, this);\n    updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  setCalculatedRange: function (opt) {\n    var option = this.option;\n    each(['start', 'startValue', 'end', 'endValue'], function (name) {\n      option[name] = opt[name];\n    });\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n/**\n * Retrieve the those raw params from option, which will be cached separately.\n * becasue they will be overwritten by normalized/calculated values in the main\n * process.\n */\n\nfunction retrieveRawOption(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, inputRawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = inputRawOption[names[0]] != null;\n    var valueSpecified = inputRawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}