{"ast":null,"code":"var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar util = require(\"../core/util\");\n\nvar logError = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar ShadowManager = require(\"./helper/ShadowManager\");\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n} // function append(parent, child) {\n//     if (checkParentAvailable(parent, child)) {\n//         parent.appendChild(child);\n//     }\n// }\n\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts, zrId) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgDom = createElement('svg');\n  svgDom.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgDom.setAttribute('version', '1.1');\n  svgDom.setAttribute('baseProfile', 'full');\n  svgDom.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n  var bgRoot = createElement('g');\n  svgDom.appendChild(bgRoot);\n  var svgRoot = createElement('g');\n  svgDom.appendChild(svgRoot);\n  this.gradientManager = new GradientManager(zrId, svgRoot);\n  this.clipPathManager = new ClippathManager(zrId, svgRoot);\n  this.shadowManager = new ShadowManager(zrId, svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgDom = svgDom;\n  this._svgRoot = svgRoot;\n  this._backgroundRoot = bgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgDom);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getSvgDom: function () {\n    return this._svgDom;\n  },\n  getSvgRoot: function () {\n    return this._svgRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  setBackgroundColor: function (backgroundColor) {\n    // TODO gradient\n    // Insert a bg rect instead of setting background to viewport.\n    // Otherwise, the exported SVG don't have background.\n    if (this._backgroundRoot && this._backgroundNode) {\n      this._backgroundRoot.removeChild(this._backgroundNode);\n    }\n\n    var bgNode = createElement('rect');\n    bgNode.setAttribute('width', this.getWidth());\n    bgNode.setAttribute('height', this.getHeight());\n    bgNode.setAttribute('x', 0);\n    bgNode.setAttribute('y', 0);\n    bgNode.setAttribute('id', 0);\n    bgNode.style.fill = backgroundColor;\n\n    this._backgroundRoot.appendChild(bgNode);\n\n    this._backgroundNode = bgNode;\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    this.shadowManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n      var svgElement = getSvgElement(displayable) || getTextSvgElement(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient and shadow\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n            this.shadowManager.update(svgElement, displayable);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement; // zrender.Text only create textSvgElement.\n\n          this.gradientManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\n          this.shadowManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\n          this.shadowManager.markUsed(displayable);\n          this.shadowManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n\n          if (textSvgElement) {\n            // Insert text.\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          }\n\n          prevSvgElement = svgElement || textSvgElement || prevSvgElement;\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this.shadowManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgDom;\n    var defs = svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width || this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgDom; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n\n    if (this._backgroundNode) {\n      this._backgroundNode.setAttribute('width', width);\n\n      this._backgroundNode.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._backgroundRoot = this._svgDom = this._backgroundNode = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  toDataURL: function () {\n    this.refresh();\n    var html = encodeURIComponent(this._svgDom.outerHTML.replace(/></g, '>\\n\\r<'));\n    return 'data:image/svg+xml;charset=UTF-8,' + html;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    logError('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\nutil.each(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;","map":{"version":3,"names":["_core","require","createElement","util","logError","Path","ZImage","ZText","arrayDiff","GradientManager","ClippathManager","ShadowManager","_graphic","svgPath","path","svgImage","image","svgText","text","parseInt10","val","parseInt","getSvgProxy","el","checkParentAvailable","parent","child","parentNode","insertAfter","prevSibling","nextSibling","insertBefore","appendChild","prepend","firstChild","remove","removeChild","getTextSvgElement","displayable","__textSvgEl","getSvgElement","__svgEl","SVGPainter","root","storage","opts","zrId","_opts","extend","svgDom","setAttribute","style","cssText","bgRoot","svgRoot","gradientManager","clipPathManager","shadowManager","viewport","document","_svgDom","_svgRoot","_backgroundRoot","_viewport","resize","width","height","_visibleList","prototype","constructor","getType","getViewportRoot","getSvgDom","getSvgRoot","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","refresh","list","getDisplayList","_paintList","setBackgroundColor","backgroundColor","_backgroundNode","bgNode","getWidth","getHeight","fill","markAllUnused","visibleList","listLen","length","newVisibleList","i","svgProxy","svgElement","invisible","__dirty","brush","update","stroke","push","diff","prevSvgElement","item","removed","k","count","indices","textSvgElement","added","addWithoutUpdate","markUsed","removeUnused","_getDefs","isForceCreating","defs","getElementsByTagName","contains","children","display","_getSize","_width","_height","viewportStyle","whIdx","wh","cwh","plt","prb","parseFloat","stl","defaultView","getComputedStyle","dispose","innerHTML","clear","toDataURL","html","encodeURIComponent","outerHTML","replace","createMethodNotSupport","method","each","name","_default","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-admin/node_modules/zrender/lib/svg/Painter.js"],"sourcesContent":["var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar util = require(\"../core/util\");\n\nvar logError = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar ShadowManager = require(\"./helper/ShadowManager\");\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n} // function append(parent, child) {\n//     if (checkParentAvailable(parent, child)) {\n//         parent.appendChild(child);\n//     }\n// }\n\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts, zrId) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgDom = createElement('svg');\n  svgDom.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgDom.setAttribute('version', '1.1');\n  svgDom.setAttribute('baseProfile', 'full');\n  svgDom.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n  var bgRoot = createElement('g');\n  svgDom.appendChild(bgRoot);\n  var svgRoot = createElement('g');\n  svgDom.appendChild(svgRoot);\n  this.gradientManager = new GradientManager(zrId, svgRoot);\n  this.clipPathManager = new ClippathManager(zrId, svgRoot);\n  this.shadowManager = new ShadowManager(zrId, svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgDom = svgDom;\n  this._svgRoot = svgRoot;\n  this._backgroundRoot = bgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgDom);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getSvgDom: function () {\n    return this._svgDom;\n  },\n  getSvgRoot: function () {\n    return this._svgRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  setBackgroundColor: function (backgroundColor) {\n    // TODO gradient\n    // Insert a bg rect instead of setting background to viewport.\n    // Otherwise, the exported SVG don't have background.\n    if (this._backgroundRoot && this._backgroundNode) {\n      this._backgroundRoot.removeChild(this._backgroundNode);\n    }\n\n    var bgNode = createElement('rect');\n    bgNode.setAttribute('width', this.getWidth());\n    bgNode.setAttribute('height', this.getHeight());\n    bgNode.setAttribute('x', 0);\n    bgNode.setAttribute('y', 0);\n    bgNode.setAttribute('id', 0);\n    bgNode.style.fill = backgroundColor;\n\n    this._backgroundRoot.appendChild(bgNode);\n\n    this._backgroundNode = bgNode;\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    this.shadowManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n      var svgElement = getSvgElement(displayable) || getTextSvgElement(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient and shadow\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n            this.shadowManager.update(svgElement, displayable);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement; // zrender.Text only create textSvgElement.\n\n          this.gradientManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\n          this.shadowManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\n          this.shadowManager.markUsed(displayable);\n          this.shadowManager.addWithoutUpdate(svgElement || textSvgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n\n          if (textSvgElement) {\n            // Insert text.\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          }\n\n          prevSvgElement = svgElement || textSvgElement || prevSvgElement;\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this.shadowManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgDom;\n    var defs = svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width || this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgDom; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n\n    if (this._backgroundNode) {\n      this._backgroundNode.setAttribute('width', width);\n\n      this._backgroundNode.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._backgroundRoot = this._svgDom = this._backgroundNode = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  toDataURL: function () {\n    this.refresh();\n    var html = encodeURIComponent(this._svgDom.outerHTML.replace(/></g, '>\\n\\r<'));\n    return 'data:image/svg+xml;charset=UTF-8,' + html;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    logError('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\nutil.each(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}