{"ast":null,"code":"import { resetRouter } from '@/router';\nexport default {\n  created() {\n    let matched = this.$route.matched.filter(item => item.name);\n    const first = matched[0];\n\n    if (first && first.name !== '首页') {\n      matched = [{\n        path: '/',\n        name: '首页'\n      }].concat(matched);\n    }\n\n    this.breadcrumbs = matched;\n    this.$store.commit('saveTab', this.$route);\n  },\n\n  data: function () {\n    return {\n      isSearch: false,\n      fullscreen: false,\n      breadcrumbs: []\n    };\n  },\n  methods: {\n    goTo(tab) {\n      this.$router.push({\n        path: tab.path\n      });\n    },\n\n    removeTab(tab) {\n      this.$store.commit('removeTab', tab);\n\n      if (tab.path == this.$route.path) {\n        var tabList = this.$store.state.tabList;\n        this.$router.push({\n          path: tabList[tabList.length - 1].path\n        });\n      }\n    },\n\n    trigger() {\n      this.$store.commit('trigger');\n    },\n\n    handleCommand(command) {\n      if (command == 'setting') {\n        this.$router.push({\n          path: '/setting'\n        });\n      }\n\n      if (command == 'logout') {\n        this.axios.post('/api/users/logout').then(({\n          data\n        }) => {\n          this.$store.commit('logout');\n          this.$store.commit('resetTab');\n          resetRouter();\n          this.$router.push({\n            path: '/login'\n          });\n        });\n      }\n    },\n\n    closeAllTab() {\n      this.$store.commit('resetTab');\n      this.$router.push({\n        path: '/'\n      });\n    },\n\n    fullScreen() {\n      let element = document.documentElement;\n\n      if (this.fullscreen) {\n        if (document.exitFullscreen) {\n          document.exitFullscreen();\n        } else if (document.webkitCancelFullScreen) {\n          document.webkitCancelFullScreen();\n        } else if (document.mozCancelFullScreen) {\n          document.mozCancelFullScreen();\n        } else if (document.msExitFullscreen) {\n          document.msExitFullscreen();\n        }\n      } else {\n        if (element.requestFullscreen) {\n          element.requestFullscreen();\n        } else if (element.webkitRequestFullScreen) {\n          element.webkitRequestFullScreen();\n        } else if (element.mozRequestFullScreen) {\n          element.mozRequestFullScreen();\n        } else if (element.msRequestFullscreen) {\n          element.msRequestFullscreen();\n        }\n      }\n\n      this.fullscreen = !this.fullscreen;\n    }\n\n  },\n  computed: {\n    isActive() {\n      return function (tab) {\n        if (tab.path == this.$route.path) {\n          return 'tabs-view-item-active';\n        }\n\n        return 'tabs-view-item';\n      };\n    },\n\n    isFold() {\n      return this.$store.state.collapse ? 'el-icon-s-unfold' : 'el-icon-s-fold';\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAyCA;AACA;EACAA;IACA;IACA;;IACA;MACAC;QAAAC;QAAAC;MAAA;IACA;;IACA;IACA;EACA,CATA;;EAUAC;IACA;MACAC,eADA;MAEAC,iBAFA;MAGAC;IAHA;EAKA,CAhBA;EAiBAC;IACAC;MACA;QAAAP;MAAA;IACA,CAHA;;IAIAQ;MACA;;MACA;QACA;QACA;UAAAR;QAAA;MACA;IACA,CAVA;;IAWAS;MACA;IACA,CAbA;;IAcAC;MACA;QACA;UAAAV;QAAA;MACA;;MACA;QACA;UAAAE;QAAA;UACA;UACA;UACAS;UACA;YAAAX;UAAA;QACA,CALA;MAMA;IACA,CA1BA;;IA2BAY;MACA;MACA;QAAAZ;MAAA;IACA,CA9BA;;IA+BAa;MACA;;MACA;QACA;UACAC;QACA,CAFA,MAEA;UACAA;QACA,CAFA,MAEA;UACAA;QACA,CAFA,MAEA;UACAA;QACA;MACA,CAVA,MAUA;QACA;UACAC;QACA,CAFA,MAEA;UACAA;QACA,CAFA,MAEA;UACAA;QACA,CAFA,MAEA;UACAA;QACA;MACA;;MACA;IACA;;EAvDA,CAjBA;EA0EAC;IACAC;MACA;QACA;UACA;QACA;;QACA;MACA,CALA;IAMA,CARA;;IASAC;MACA;IACA;;EAXA;AA1EA","names":["created","matched","path","name","data","isSearch","fullscreen","breadcrumbs","methods","goTo","removeTab","trigger","handleCommand","resetRouter","closeAllTab","fullScreen","document","element","computed","isActive","isFold"],"sourceRoot":"src/layout/components","sources":["NavBar.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"nav-bar\">\n      <div class=\"hambuger-container\" @click=\"trigger\">\n        <i :class=\"isFold\" />\n      </div>\n      <el-breadcrumb>\n        <el-breadcrumb-item v-for=\"item of breadcrumbs\" :key=\"item.path\">\n          <span v-if=\"item.redirect\">{{ item.name }}</span>\n          <router-link v-else :to=\"item.path\">{{ item.name }}</router-link>\n        </el-breadcrumb-item>\n      </el-breadcrumb>\n      <div class=\"right-menu\">\n        <div class=\"screen-full\" @click=\"fullScreen\">\n          <i class=\"iconfont el-icon-myicwindowzoom48px\" />\n        </div>\n        <el-dropdown @command=\"handleCommand\">\n          <el-avatar :size=\"40\" :src=\"this.$store.state.userInfo.avatar\" />\n          <i class=\"el-icon-caret-bottom\" />\n          <el-dropdown-menu slot=\"dropdown\">\n            <el-dropdown-item command=\"setting\"> <i class=\"el-icon-s-custom\" />个人中心 </el-dropdown-item>\n            <el-dropdown-item command=\"logout\" divided>\n              <i class=\"iconfont el-icon-mytuichu\" />退出登录\n            </el-dropdown-item>\n          </el-dropdown-menu>\n        </el-dropdown>\n      </div>\n    </div>\n    <div class=\"tabs-view-container\">\n      <div class=\"tabs-wrapper\">\n        <span :class=\"isActive(item)\" v-for=\"item of this.$store.state.tabList\" :key=\"item.path\" @click=\"goTo(item)\">\n          {{ item.name }}\n          <i class=\"el-icon-close\" v-if=\"item.path != '/'\" @click.stop=\"removeTab(item)\" />\n        </span>\n      </div>\n      <div class=\"tabs-close-item\" style=\"float: right\" @click=\"closeAllTab\">全部关闭</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { resetRouter } from '@/router'\nexport default {\n  created() {\n    let matched = this.$route.matched.filter((item) => item.name)\n    const first = matched[0]\n    if (first && first.name !== '首页') {\n      matched = [{ path: '/', name: '首页' }].concat(matched)\n    }\n    this.breadcrumbs = matched\n    this.$store.commit('saveTab', this.$route)\n  },\n  data: function () {\n    return {\n      isSearch: false,\n      fullscreen: false,\n      breadcrumbs: []\n    }\n  },\n  methods: {\n    goTo(tab) {\n      this.$router.push({ path: tab.path })\n    },\n    removeTab(tab) {\n      this.$store.commit('removeTab', tab)\n      if (tab.path == this.$route.path) {\n        var tabList = this.$store.state.tabList\n        this.$router.push({ path: tabList[tabList.length - 1].path })\n      }\n    },\n    trigger() {\n      this.$store.commit('trigger')\n    },\n    handleCommand(command) {\n      if (command == 'setting') {\n        this.$router.push({ path: '/setting' })\n      }\n      if (command == 'logout') {\n        this.axios.post('/api/users/logout').then(({ data }) => {\n          this.$store.commit('logout')\n          this.$store.commit('resetTab')\n          resetRouter()\n          this.$router.push({ path: '/login' })\n        })\n      }\n    },\n    closeAllTab() {\n      this.$store.commit('resetTab')\n      this.$router.push({ path: '/' })\n    },\n    fullScreen() {\n      let element = document.documentElement\n      if (this.fullscreen) {\n        if (document.exitFullscreen) {\n          document.exitFullscreen()\n        } else if (document.webkitCancelFullScreen) {\n          document.webkitCancelFullScreen()\n        } else if (document.mozCancelFullScreen) {\n          document.mozCancelFullScreen()\n        } else if (document.msExitFullscreen) {\n          document.msExitFullscreen()\n        }\n      } else {\n        if (element.requestFullscreen) {\n          element.requestFullscreen()\n        } else if (element.webkitRequestFullScreen) {\n          element.webkitRequestFullScreen()\n        } else if (element.mozRequestFullScreen) {\n          element.mozRequestFullScreen()\n        } else if (element.msRequestFullscreen) {\n          element.msRequestFullscreen()\n        }\n      }\n      this.fullscreen = !this.fullscreen\n    }\n  },\n  computed: {\n    isActive() {\n      return function (tab) {\n        if (tab.path == this.$route.path) {\n          return 'tabs-view-item-active'\n        }\n        return 'tabs-view-item'\n      }\n    },\n    isFold() {\n      return this.$store.state.collapse ? 'el-icon-s-unfold' : 'el-icon-s-fold'\n    }\n  }\n}\n</script>\n\n<style scoped>\n.nav-bar {\n  display: flex;\n  align-items: center;\n  padding-left: 15px;\n  padding-right: 30px;\n  height: 50px;\n  box-shadow: 0 1px 4px rgba(0, 21, 41, 0.08);\n}\n.hambuger-container {\n  font-size: 1.25rem;\n  cursor: pointer;\n  margin-right: 24px;\n}\n.tabs-wrapper {\n  overflow-x: auto;\n  overflow-y: hidden;\n  white-space: nowrap;\n  width: 95%;\n}\n.tabs-view-container {\n  display: flex;\n  position: relative;\n  padding-left: 10px;\n  padding-right: 10px;\n  height: 33px;\n  background: #fff;\n  border-bottom: 1px solid #d8dce5;\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.12), 0 0 3px 0 rgba(0, 0, 0, 0.04);\n}\n.tabs-view-item {\n  display: inline-block;\n  cursor: pointer;\n  height: 25px;\n  line-height: 25px;\n  border: 1px solid #d8dce5;\n  color: #495060;\n  background: #fff;\n  padding: 0 8px;\n  font-size: 12px;\n  margin-top: 4px;\n  margin-left: 5px;\n}\n.tabs-close-item {\n  position: absolute;\n  right: 10px;\n  display: inline-block;\n  cursor: pointer;\n  height: 25px;\n  line-height: 25px;\n  border: 1px solid #d8dce5;\n  color: #495060;\n  background: #fff;\n  padding: 0 8px;\n  font-size: 12px;\n  margin-top: 4px;\n  margin-left: 5px;\n}\n.tabs-view-item-active {\n  display: inline-block;\n  cursor: pointer;\n  height: 26px;\n  line-height: 26px;\n  padding: 0 8px;\n  font-size: 12px;\n  margin-top: 4px;\n  margin-left: 5px;\n  background-color: #42b983;\n  color: #fff;\n  border-color: #42b983;\n}\n.tabs-view-item-active:before {\n  content: '';\n  background: #fff;\n  display: inline-block;\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  position: relative;\n  margin-right: 2px;\n}\n.el-icon-close {\n  padding: 0.1rem;\n}\n.el-icon-close:hover {\n  border-radius: 50%;\n  background: #b4bccc;\n  transition-duration: 0.3s;\n}\n.right-menu {\n  margin-left: auto;\n  display: flex;\n  align-items: center;\n}\n.el-icon-caret-bottom {\n  margin-left: 0.5rem;\n  font-size: 0.75rem;\n}\n.screen-full {\n  cursor: pointer;\n  margin-right: 1rem;\n  font-size: 1.25rem;\n}\n*::-webkit-scrollbar {\n  width: 0.5rem;\n  height: 6px;\n}\n*::-webkit-scrollbar-thumb {\n  border-radius: 0.5rem;\n  background-color: rgba(144, 147, 153, 0.3);\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}