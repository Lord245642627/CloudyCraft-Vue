{"ast":null,"code":"var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n/**\n * Animation main class, dispatch and manage all animation controllers\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\n\n\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * Add clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * Add animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * Delete animation clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * Delete animation clip\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta); // 'frame' should be triggered before stage, because upper application\n    // depends on the sequence (e.g., echarts-stream and finish\n    // event judge)\n\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * Start animation.\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * Stop animation.\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause animation.\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume animation.\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * Clear animation.\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * Whether animation finished.\n   */\n  isFinished: function () {\n    return !this._clips.length;\n  },\n\n  /**\n   * Creat animator for a target, whose props can be animated.\n   *\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] Whether loop animation.\n   * @param  {Function} [options.getter=null] Get value from target.\n   * @param  {Function} [options.setter=null] Set value to target.\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;","map":{"version":3,"names":["util","require","_event","Dispatcher","requestAnimationFrame","Animator","Animation","options","stage","onframe","_clips","_running","_time","_pausedTime","_pauseStart","_paused","call","prototype","constructor","addClip","clip","push","addAnimator","animator","animation","clips","getClips","i","length","removeClip","idx","indexOf","splice","removeAnimator","_update","time","Date","getTime","delta","len","deferredEvents","deferredClips","e","step","_needsRemove","pop","fire","trigger","update","_startLoop","self","start","stop","pause","resume","clear","isFinished","animate","target","loop","getter","setter","mixin","_default","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-admin/node_modules/zrender/lib/animation/Animation.js"],"sourcesContent":["var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * Animation main class, dispatch and manage all animation controllers\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * Add clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * Add animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * Delete animation clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * Delete animation clip\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta); // 'frame' should be triggered before stage, because upper application\n    // depends on the sequence (e.g., echarts-stream and finish\n    // event judge)\n\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * Start animation.\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * Stop animation.\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause animation.\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume animation.\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * Clear animation.\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * Whether animation finished.\n   */\n  isFinished: function () {\n    return !this._clips.length;\n  },\n\n  /**\n   * Creat animator for a target, whose props can be animated.\n   *\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] Whether loop animation.\n   * @param  {Function} [options.getter=null] Get value from target.\n   * @param  {Function} [options.setter=null] Set value to target.\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}