{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n} // Make it simple, do not visit all stacked value to count precision.\n// function getPrecision(data, valueAxisDim, dataIndex) {\n//     var precision = -1;\n//     var stackedDim = data.mapDimension(valueAxisDim);\n//     do {\n//         precision = Math.max(\n//             numberUtil.getPrecision(data.get(stackedDim, dataIndex)),\n//             precision\n//         );\n//         var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n//         if (stackedOnSeries) {\n//             var byValue = data.get(data.getCalculationInfo('stackedByDimension'), dataIndex);\n//             data = stackedOnSeries.getData();\n//             dataIndex = data.indexOf(data.getCalculationInfo('stackedByDimension'), byValue);\n//             stackedDim = data.getCalculationInfo('stackedDimension');\n//         }\n//         else {\n//             data = null;\n//         }\n//     } while (data);\n//     return precision;\n// }\n\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var stacked = isDimensionStacked(data, targetDataDim\n  /*, otherDataDim*/\n  );\n  var calcDataDim = stacked ? data.getCalculationInfo('stackResultDimension') : targetDataDim;\n  var value = numCalculate(data, calcDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(calcDataDim, value)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex);\n  coordArr[targetCoordIndex] = data.get(calcDataDim, dataIndex);\n  var coordArrValue = data.get(targetDataDim, dataIndex); // Make it simple, do not visit all stacked value to count precision.\n\n  var precision = numberUtil.getPrecision(data.get(targetDataDim, dataIndex));\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return [coordArr, coordArrValue];\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      var coordInfo = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex);\n      item.coord = coordInfo[0]; // Force to use the value of calculated value.\n      // let item use the value without stack.\n\n      item.value = coordInfo[1];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          coord[i] = numCalculate(data, data.mapDimension(dims[i]), coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(dataDimToCoordDim(seriesModel, ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n    ret.valueDataDim = data.mapDimension(ret.valueAxis.dim);\n  }\n\n  return ret;\n}\n\nfunction dataDimToCoordDim(seriesModel, dataDim) {\n  var data = seriesModel.getData();\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    });\n    return sum / count;\n  } else if (type === 'median') {\n    return data.getMedian(valueDataDim);\n  } else {\n    // max & min\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;","map":{"version":3,"names":["zrUtil","require","numberUtil","_dataStackHelper","isDimensionStacked","indexOf","hasXOrY","item","isNaN","parseFloat","x","y","hasXAndY","markerTypeCalculatorWithExtent","mlType","data","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","stacked","calcDataDim","getCalculationInfo","value","numCalculate","dataIndex","indicesOfNearest","get","coordArrValue","precision","getPrecision","Math","min","toFixed","curry","markerTypeCalculator","max","average","dataTransform","seriesModel","getData","coordSys","coordinateSystem","isArray","coord","dims","dimensions","axisInfo","getAxisInfo","clone","type","baseAxis","valueAxis","dim","coordInfo","baseDataDim","valueDataDim","xAxis","radiusAxis","yAxis","angleAxis","i","mapDimension","ret","valueIndex","valueDim","getDimension","getAxis","dataDimToCoordDim","getOtherAxis","getBaseAxis","dataDim","length","dimItem","getDimensionInfo","name","coordDim","dataFilter","containData","dimValueGetter","dimName","dimIndex","sum","count","each","val","idx","getMedian","getDataExtent","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-admin/node_modules/echarts/lib/component/marker/markerHelper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n} // Make it simple, do not visit all stacked value to count precision.\n// function getPrecision(data, valueAxisDim, dataIndex) {\n//     var precision = -1;\n//     var stackedDim = data.mapDimension(valueAxisDim);\n//     do {\n//         precision = Math.max(\n//             numberUtil.getPrecision(data.get(stackedDim, dataIndex)),\n//             precision\n//         );\n//         var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n//         if (stackedOnSeries) {\n//             var byValue = data.get(data.getCalculationInfo('stackedByDimension'), dataIndex);\n//             data = stackedOnSeries.getData();\n//             dataIndex = data.indexOf(data.getCalculationInfo('stackedByDimension'), byValue);\n//             stackedDim = data.getCalculationInfo('stackedDimension');\n//         }\n//         else {\n//             data = null;\n//         }\n//     } while (data);\n//     return precision;\n// }\n\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var stacked = isDimensionStacked(data, targetDataDim\n  /*, otherDataDim*/\n  );\n  var calcDataDim = stacked ? data.getCalculationInfo('stackResultDimension') : targetDataDim;\n  var value = numCalculate(data, calcDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(calcDataDim, value)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex);\n  coordArr[targetCoordIndex] = data.get(calcDataDim, dataIndex);\n  var coordArrValue = data.get(targetDataDim, dataIndex); // Make it simple, do not visit all stacked value to count precision.\n\n  var precision = numberUtil.getPrecision(data.get(targetDataDim, dataIndex));\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return [coordArr, coordArrValue];\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      var coordInfo = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex);\n      item.coord = coordInfo[0]; // Force to use the value of calculated value.\n      // let item use the value without stack.\n\n      item.value = coordInfo[1];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          coord[i] = numCalculate(data, data.mapDimension(dims[i]), coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(dataDimToCoordDim(seriesModel, ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n    ret.valueDataDim = data.mapDimension(ret.valueAxis.dim);\n  }\n\n  return ret;\n}\n\nfunction dataDimToCoordDim(seriesModel, dataDim) {\n  var data = seriesModel.getData();\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    });\n    return sum / count;\n  } else if (type === 'median') {\n    return data.getMedian(valueDataDim);\n  } else {\n    // max & min\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;"],"mappings":"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"},"metadata":{},"sourceType":"script"}