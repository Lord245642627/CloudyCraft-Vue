{"ast":null,"code":"require(\"core-js/modules/esnext.typed-array.find-last.js\");\n\nrequire(\"core-js/modules/esnext.typed-array.find-last-index.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Uint8ClampedArray */\n\n\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function (data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function () {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function (data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;","map":{"version":3,"names":["zrUtil","require","GRADIENT_LEVELS","Heatmap","canvas","createCanvas","blurSize","pointSize","maxOpacity","minOpacity","_gradientPixels","prototype","update","data","width","height","normalize","colorFunc","isInRange","brush","_getBrush","gradientInRange","_getGradient","gradientOutOfRange","r","ctx","getContext","len","length","i","p","x","y","value","alpha","globalAlpha","drawImage","imageData","getImageData","pixels","offset","pixelLen","diffOpacity","gradientOffset","Math","floor","gradient","putImageData","brushCanvas","_brushCanvas","d","clearRect","shadowOffsetX","shadowBlur","shadowColor","beginPath","arc","PI","closePath","fill","state","gradientPixels","pixelsSingleState","Uint8ClampedArray","color","off","_default","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/cloudycraft-vue/blog-admin/node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Uint8ClampedArray */\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function (data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function () {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function (data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}