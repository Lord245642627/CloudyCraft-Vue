{"ast":null,"code":"import * as imageConversion from 'image-conversion';\nexport default {\n  created() {\n    const path = this.$route.path;\n    const arr = path.split('/');\n    const articleId = arr[2];\n\n    if (articleId) {\n      this.axios.get('/api/admin/articles/' + articleId).then(({\n        data\n      }) => {\n        this.article = data.data;\n      });\n    } else {\n      const article = sessionStorage.getItem('article');\n\n      if (article) {\n        this.article = JSON.parse(article);\n      }\n    }\n  },\n\n  destroyed() {\n    this.autoSaveArticle();\n  },\n\n  data: function () {\n    return {\n      addOrEdit: false,\n      autoSave: true,\n      categoryName: '',\n      tagName: '',\n      categorys: [],\n      tagList: [],\n      typeList: [{\n        type: 1,\n        desc: '原创'\n      }, {\n        type: 2,\n        desc: '转载'\n      }, {\n        type: 3,\n        desc: '翻译'\n      }],\n      article: {\n        id: null,\n        articleTitle: this.$moment(new Date()).format('YYYY-MM-DD'),\n        articleContent: '',\n        articleAbstract: '',\n        articleCover: '',\n        categoryName: null,\n        tagNames: [],\n        isTop: 0,\n        type: 1,\n        status: 1\n      },\n      headers: {\n        Authorization: 'Bearer ' + sessionStorage.getItem('token')\n      }\n    };\n  },\n  methods: {\n    listCategories() {\n      this.axios.get('/api/admin/categories/search').then(({\n        data\n      }) => {\n        this.categorys = data.data;\n      });\n    },\n\n    listTags() {\n      this.axios.get('/api/admin/tags/search').then(({\n        data\n      }) => {\n        this.tagList = data.data;\n      });\n    },\n\n    openModel() {\n      if (this.article.articleTitle.trim() == '') {\n        this.$message.error('文章标题不能为空');\n        return false;\n      }\n\n      if (this.article.articleContent.trim() == '') {\n        this.$message.error('文章内容不能为空');\n        return false;\n      }\n\n      this.listCategories();\n      this.listTags();\n      this.addOrEdit = true;\n    },\n\n    uploadCover(response) {\n      this.article.articleCover = response.data;\n    },\n\n    beforeUpload(file) {\n      return new Promise(resolve => {\n        if (file.size / 1024 < this.config.UPLOAD_SIZE) {\n          resolve(file);\n        }\n\n        imageConversion.compressAccurately(file, this.config.UPLOAD_SIZE).then(res => {\n          resolve(res);\n        });\n      });\n    },\n\n    uploadImg(pos, file) {\n      var formdata = new FormData();\n\n      if (file.size / 1024 < this.config.UPLOAD_SIZE) {\n        formdata.append('file', file);\n        this.axios.post('/api/admin/articles/images', formdata).then(({\n          data\n        }) => {\n          this.$refs.md.$img2Url(pos, data.data);\n        });\n      } else {\n        imageConversion.compressAccurately(file, this.config.UPLOAD_SIZE).then(res => {\n          formdata.append('file', new window.File([res], file.name, {\n            type: file.type\n          }));\n          this.axios.post('/api/admin/articles/images', formdata).then(({\n            data\n          }) => {\n            this.$refs.md.$img2Url(pos, data.data);\n          });\n        });\n      }\n    },\n\n    saveArticleDraft() {\n      if (this.article.articleTitle.trim() == '') {\n        this.$message.error('文章标题不能为空');\n        return false;\n      }\n\n      if (this.article.articleContent.trim() == '') {\n        this.$message.error('文章内容不能为空');\n        return false;\n      }\n\n      this.article.status = 3;\n      this.axios.post('/api/admin/articles', this.article).then(({\n        data\n      }) => {\n        if (data.code === 0) {\n          if (this.article.id === null) {\n            this.$store.commit('removeTab', '发布文章');\n          } else {\n            this.$store.commit('removeTab', '修改文章');\n          }\n\n          sessionStorage.removeItem('article');\n          this.$router.push({\n            path: '/article-list'\n          });\n          this.$notify.success({\n            title: '成功',\n            message: '保存草稿成功'\n          });\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: '保存草稿失败'\n          });\n        }\n      });\n      this.autoSave = false;\n    },\n\n    saveOrUpdateArticle() {\n      if (this.article.articleTitle.trim() == '') {\n        this.$message.error('文章标题不能为空');\n        return false;\n      }\n\n      if (this.article.articleContent.trim() == '') {\n        this.$message.error('文章内容不能为空');\n        return false;\n      }\n\n      if (this.article.categoryName == null) {\n        this.$message.error('文章分类不能为空');\n        return false;\n      }\n\n      if (this.article.tagNames.length == 0) {\n        this.$message.error('文章标签不能为空');\n        return false;\n      }\n\n      if (this.article.articleCover.trim() == '') {\n        this.$message.error('文章封面不能为空');\n        return false;\n      }\n\n      this.axios.post('/api/admin/articles', this.article).then(({\n        data\n      }) => {\n        if (data.code === 0) {\n          if (this.article.id === null) {\n            this.$store.commit('removeTab', '发布文章');\n          } else {\n            this.$store.commit('removeTab', '修改文章');\n          }\n\n          sessionStorage.removeItem('article');\n          this.$router.push({\n            path: '/article-list'\n          });\n          this.$notify.success({\n            title: '成功',\n            message: data.message\n          });\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: data.message\n          });\n        }\n\n        this.addOrEdit = false;\n      });\n      this.autoSave = false;\n    },\n\n    autoSaveArticle() {\n      if (this.autoSave && this.article.articleTitle.trim() != '' && this.article.articleContent.trim() != '' && this.article.id != null) {\n        this.axios.post('/api/admin/articles', this.article).then(({\n          data\n        }) => {\n          if (data.code === 0) {\n            this.$notify.success({\n              title: '成功',\n              message: '自动保存成功'\n            });\n          } else {\n            this.$notify.error({\n              title: '失败',\n              message: '自动保存失败'\n            });\n          }\n        });\n      }\n\n      if (this.autoSave && this.article.id == null) {\n        sessionStorage.setItem('article', JSON.stringify(this.article));\n      }\n    },\n\n    searchCategories(keywords, cb) {\n      this.axios.get('/api/admin/categories/search', {\n        params: {\n          keywords: keywords\n        }\n      }).then(({\n        data\n      }) => {\n        cb(data.data);\n      });\n    },\n\n    handleSelectCategories(item) {\n      this.addCategory({\n        categoryName: item.categoryName\n      });\n    },\n\n    saveCategory() {\n      if (this.categoryName.trim() != '') {\n        this.addCategory({\n          categoryName: this.categoryName\n        });\n        this.categoryName = '';\n      }\n    },\n\n    addCategory(item) {\n      this.article.categoryName = item.categoryName;\n    },\n\n    removeCategory() {\n      this.article.categoryName = null;\n    },\n\n    searchTags(keywords, cb) {\n      this.axios.get('/api/admin/tags/search', {\n        params: {\n          keywords: keywords\n        }\n      }).then(({\n        data\n      }) => {\n        cb(data.data);\n      });\n    },\n\n    handleSelectTag(item) {\n      this.addTag({\n        tagName: item.tagName\n      });\n    },\n\n    saveTag() {\n      if (this.tagName.trim() != '') {\n        this.addTag({\n          tagName: this.tagName\n        });\n        this.tagName = '';\n      }\n    },\n\n    addTag(item) {\n      if (this.article.tagNames.indexOf(item.tagName) == -1) {\n        this.article.tagNames.push(item.tagName);\n      }\n    },\n\n    removeTag(item) {\n      const index = this.article.tagNames.indexOf(item);\n      this.article.tagNames.splice(index, 1);\n    }\n\n  },\n  computed: {\n    tagClass() {\n      return function (item) {\n        const index = this.article.tagNames.indexOf(item.tagName);\n        return index != -1 ? 'tag-item-select' : 'tag-item';\n      };\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA8IA;AACA;EACAA;IACA;IACA;IACA;;IACA;MACA;QAAAC;MAAA;QACA;MACA,CAFA;IAGA,CAJA,MAIA;MACA;;MACA;QACA;MACA;IACA;EACA,CAfA;;EAgBAC;IACA;EACA,CAlBA;;EAmBAD;IACA;MACAE,gBADA;MAEAC,cAFA;MAGAC,gBAHA;MAIAC,WAJA;MAKAC,aALA;MAMAC,WANA;MAOAC,WACA;QACAC,OADA;QAEAC;MAFA,CADA,EAKA;QACAD,OADA;QAEAC;MAFA,CALA,EASA;QACAD,OADA;QAEAC;MAFA,CATA,CAPA;MAqBAC;QACAC,QADA;QAEAC,2DAFA;QAGAC,kBAHA;QAIAC,mBAJA;QAKAC,gBALA;QAMAZ,kBANA;QAOAa,YAPA;QAQAC,QARA;QASAT,OATA;QAUAU;MAVA,CArBA;MAiCAC;QAAAC;MAAA;IAjCA;EAmCA,CAvDA;EAwDAC;IACAC;MACA;QAAAvB;MAAA;QACA;MACA,CAFA;IAGA,CALA;;IAMAwB;MACA;QAAAxB;MAAA;QACA;MACA,CAFA;IAGA,CAVA;;IAWAyB;MACA;QACA;QACA;MACA;;MACA;QACA;QACA;MACA;;MACA;MACA;MACA;IACA,CAvBA;;IAwBAC;MACA;IACA,CA1BA;;IA2BAC;MACA;QACA;UACAC;QACA;;QACAC;UACAD;QACA,CAFA;MAGA,CAPA;IAQA,CApCA;;IAqCAE;MACA;;MACA;QACAC;QACA;UAAA/B;QAAA;UACA;QACA,CAFA;MAGA,CALA,MAKA;QACA6B;UACAE;YAAAtB;UAAA;UACA;YAAAT;UAAA;YACA;UACA,CAFA;QAGA,CALA;MAMA;IACA,CApDA;;IAqDAgC;MACA;QACA;QACA;MACA;;MACA;QACA;QACA;MACA;;MACA;MACA;QAAAhC;MAAA;QACA;UACA;YACA;UACA,CAFA,MAEA;YACA;UACA;;UACAiC;UACA;YAAAC;UAAA;UACA;YACAC,WADA;YAEAC;UAFA;QAIA,CAZA,MAYA;UACA;YACAD,WADA;YAEAC;UAFA;QAIA;MACA,CAnBA;MAoBA;IACA,CApFA;;IAqFAC;MACA;QACA;QACA;MACA;;MACA;QACA;QACA;MACA;;MACA;QACA;QACA;MACA;;MACA;QACA;QACA;MACA;;MACA;QACA;QACA;MACA;;MACA;QAAArC;MAAA;QACA;UACA;YACA;UACA,CAFA,MAEA;YACA;UACA;;UACAiC;UACA;YAAAC;UAAA;UACA;YACAC,WADA;YAEAC;UAFA;QAIA,CAZA,MAYA;UACA;YACAD,WADA;YAEAC;UAFA;QAIA;;QACA;MACA,CApBA;MAqBA;IACA,CAhIA;;IAiIAE;MACA,IACA,iBACA,sCADA,IAEA,wCAFA,IAGA,uBAJA,EAKA;QACA;UAAAtC;QAAA;UACA;YACA;cACAmC,WADA;cAEAC;YAFA;UAIA,CALA,MAKA;YACA;cACAD,WADA;cAEAC;YAFA;UAIA;QACA,CAZA;MAaA;;MACA;QACAH;MACA;IACA,CAzJA;;IA0JAM;MACA,WACAC,GADA,CACA,8BADA,EACA;QACAC;UACAC;QADA;MADA,CADA,EAMAC,IANA,CAMA;QAAA3C;MAAA;QACA4C;MACA,CARA;IASA,CApKA;;IAqKAC;MACA;QACAzC;MADA;IAGA,CAzKA;;IA0KA0C;MACA;QACA;UACA1C;QADA;QAGA;MACA;IACA,CAjLA;;IAkLA2C;MACA;IACA,CApLA;;IAqLAC;MACA;IACA,CAvLA;;IAwLAC;MACA,WACAT,GADA,CACA,wBADA,EACA;QACAC;UACAC;QADA;MADA,CADA,EAMAC,IANA,CAMA;QAAA3C;MAAA;QACA4C;MACA,CARA;IASA,CAlMA;;IAmMAM;MACA;QACA7C;MADA;IAGA,CAvMA;;IAwMA8C;MACA;QACA;UACA9C;QADA;QAGA;MACA;IACA,CA/MA;;IAgNA+C;MACA;QACA;MACA;IACA,CApNA;;IAqNAC;MACA;MACA;IACA;;EAxNA,CAxDA;EAkRAC;IACAC;MACA;QACA;QACA;MACA,CAHA;IAIA;;EANA;AAlRA","names":["created","data","destroyed","addOrEdit","autoSave","categoryName","tagName","categorys","tagList","typeList","type","desc","article","id","articleTitle","articleContent","articleAbstract","articleCover","tagNames","isTop","status","headers","Authorization","methods","listCategories","listTags","openModel","uploadCover","beforeUpload","resolve","imageConversion","uploadImg","formdata","saveArticleDraft","sessionStorage","path","title","message","saveOrUpdateArticle","autoSaveArticle","searchCategories","get","params","keywords","then","cb","handleSelectCategories","saveCategory","addCategory","removeCategory","searchTags","handleSelectTag","saveTag","addTag","removeTag","computed","tagClass"],"sourceRoot":"src/views/article","sources":["Article.vue"],"sourcesContent":["<template>\n  <el-card class=\"main-card\">\n    <div class=\"title\">{{ this.$route.name }}</div>\n    <div class=\"article-title-container\">\n      <el-input v-model=\"article.articleTitle\" size=\"medium\" placeholder=\"输入文章标题\" />\n      <el-button\n        type=\"danger\"\n        size=\"medium\"\n        class=\"save-btn\"\n        @click=\"saveArticleDraft\"\n        v-if=\"article.id == null || article.status == 3\">\n        保存草稿\n      </el-button>\n      <el-button type=\"danger\" size=\"medium\" @click=\"openModel\" style=\"margin-left: 10px\"> 发布文章 </el-button>\n    </div>\n    <mavon-editor ref=\"md\" v-model=\"article.articleContent\" @imgAdd=\"uploadImg\" style=\"height: calc(100vh - 260px)\" />\n    <el-dialog :visible.sync=\"addOrEdit\" width=\"40%\" top=\"3vh\">\n      <div class=\"dialog-title-container\" slot=\"title\">发布文章</div>\n      <el-form label-width=\"80px\" size=\"medium\" :model=\"article\">\n        <el-form-item label=\"文章分类\">\n          <el-tag\n            type=\"success\"\n            v-show=\"article.categoryName\"\n            style=\"margin: 0 1rem 0 0\"\n            :closable=\"true\"\n            @close=\"removeCategory\">\n            {{ article.categoryName }}\n          </el-tag>\n          <el-popover placement=\"bottom-start\" width=\"460\" trigger=\"click\" v-if=\"!article.categoryName\">\n            <div class=\"popover-title\">分类</div>\n            <el-autocomplete\n              style=\"width: 100%\"\n              v-model=\"categoryName\"\n              :fetch-suggestions=\"searchCategories\"\n              placeholder=\"请输入分类名搜索，enter可添加自定义分类\"\n              :trigger-on-focus=\"false\"\n              @keyup.enter.native=\"saveCategory\"\n              @select=\"handleSelectCategories\">\n              <template slot-scope=\"{ item }\">\n                <div>{{ item.categoryName }}</div>\n              </template>\n            </el-autocomplete>\n            <div class=\"popover-container\">\n              <div v-for=\"item of categorys\" :key=\"item.id\" class=\"category-item\" @click=\"addCategory(item)\">\n                {{ item.categoryName }}\n              </div>\n            </div>\n            <el-button type=\"success\" plain slot=\"reference\" size=\"small\"> 添加分类 </el-button>\n          </el-popover>\n        </el-form-item>\n        <el-form-item label=\"文章标签\">\n          <el-tag\n            v-for=\"(item, index) of article.tagNames\"\n            :key=\"index\"\n            style=\"margin: 0 1rem 0 0\"\n            :closable=\"true\"\n            @close=\"removeTag(item)\">\n            {{ item }}\n          </el-tag>\n          <el-popover placement=\"bottom-start\" width=\"460\" trigger=\"click\" v-if=\"article.tagNames.length < 3\">\n            <div class=\"popover-title\">标签</div>\n            <el-autocomplete\n              style=\"width: 100%\"\n              v-model=\"tagName\"\n              :fetch-suggestions=\"searchTags\"\n              placeholder=\"请输入标签名搜索，enter可添加自定义标签\"\n              :trigger-on-focus=\"false\"\n              @keyup.enter.native=\"saveTag\"\n              @select=\"handleSelectTag\">\n              <template slot-scope=\"{ item }\">\n                <div>{{ item.tagName }}</div>\n              </template>\n            </el-autocomplete>\n            <div class=\"popover-container\">\n              <div style=\"margin-bottom: 1rem\">添加标签</div>\n              <el-tag v-for=\"(item, index) of tagList\" :key=\"index\" :class=\"tagClass(item)\" @click=\"addTag(item)\">\n                {{ item.tagName }}\n              </el-tag>\n            </div>\n            <el-button type=\"primary\" plain slot=\"reference\" size=\"small\"> 添加标签 </el-button>\n          </el-popover>\n        </el-form-item>\n        <el-form-item label=\"文章类型\">\n          <el-select v-model=\"article.type\" placeholder=\"请选择类型\">\n            <el-option v-for=\"item in typeList\" :key=\"item.type\" :label=\"item.desc\" :value=\"item.type\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"原文地址\" v-if=\"article.type != 1\">\n          <el-input v-model=\"article.originalUrl\" placeholder=\"请填写原文链接\" />\n        </el-form-item>\n        <el-form-item label=\"上传封面\">\n          <el-upload\n            class=\"upload-cover\"\n            drag\n            action=\"/api/admin/articles/images\"\n            multiple\n            :headers=\"headers\"\n            :before-upload=\"beforeUpload\"\n            :on-success=\"uploadCover\">\n            <i class=\"el-icon-upload\" v-if=\"article.articleCover == ''\" />\n            <div class=\"el-upload__text\" v-if=\"article.articleCover == ''\">将文件拖到此处，或<em>点击上传</em></div>\n            <img v-else :src=\"article.articleCover\" width=\"360px\" height=\"180px\" />\n          </el-upload>\n        </el-form-item>\n        <el-form-item label=\"置顶\">\n          <el-switch\n            v-model=\"article.isTop\"\n            active-color=\"#13ce66\"\n            inactive-color=\"#F4F4F5\"\n            :active-value=\"1\"\n            :inactive-value=\"0\" />\n        </el-form-item>\n        <el-form-item label=\"推荐\">\n          <el-switch\n            v-model=\"article.isFeatured\"\n            active-color=\"#13ce66\"\n            inactive-color=\"#F4F4F5\"\n            :active-value=\"1\"\n            :inactive-value=\"0\" />\n        </el-form-item>\n        <el-form-item label=\"发布形式\">\n          <el-radio-group v-model=\"article.status\">\n            <el-radio :label=\"1\">公开</el-radio>\n            <el-radio :label=\"2\">密码</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"访问密码\" v-if=\"article.status == 2\">\n          <el-input v-model=\"article.password\" placeholder=\"请填写文章访问密码\" />\n        </el-form-item>\n        <el-form-item label=\"文章摘要\">\n          <el-input type=\"textarea\" autosize=\"true\" v-model=\"article.articleAbstract\" placeholder=\"默认取文章前500个字符\" />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\">\n        <el-button @click=\"addOrEdit = false\">取 消</el-button>\n        <el-button type=\"danger\" @click=\"saveOrUpdateArticle\"> 发 表 </el-button>\n      </div>\n    </el-dialog>\n  </el-card>\n</template>\n\n<script>\nimport * as imageConversion from 'image-conversion'\nexport default {\n  created() {\n    const path = this.$route.path\n    const arr = path.split('/')\n    const articleId = arr[2]\n    if (articleId) {\n      this.axios.get('/api/admin/articles/' + articleId).then(({ data }) => {\n        this.article = data.data\n      })\n    } else {\n      const article = sessionStorage.getItem('article')\n      if (article) {\n        this.article = JSON.parse(article)\n      }\n    }\n  },\n  destroyed() {\n    this.autoSaveArticle()\n  },\n  data: function () {\n    return {\n      addOrEdit: false,\n      autoSave: true,\n      categoryName: '',\n      tagName: '',\n      categorys: [],\n      tagList: [],\n      typeList: [\n        {\n          type: 1,\n          desc: '原创'\n        },\n        {\n          type: 2,\n          desc: '转载'\n        },\n        {\n          type: 3,\n          desc: '翻译'\n        }\n      ],\n      article: {\n        id: null,\n        articleTitle: this.$moment(new Date()).format('YYYY-MM-DD'),\n        articleContent: '',\n        articleAbstract: '',\n        articleCover: '',\n        categoryName: null,\n        tagNames: [],\n        isTop: 0,\n        type: 1,\n        status: 1\n      },\n      headers: { Authorization: 'Bearer ' + sessionStorage.getItem('token') }\n    }\n  },\n  methods: {\n    listCategories() {\n      this.axios.get('/api/admin/categories/search').then(({ data }) => {\n        this.categorys = data.data\n      })\n    },\n    listTags() {\n      this.axios.get('/api/admin/tags/search').then(({ data }) => {\n        this.tagList = data.data\n      })\n    },\n    openModel() {\n      if (this.article.articleTitle.trim() == '') {\n        this.$message.error('文章标题不能为空')\n        return false\n      }\n      if (this.article.articleContent.trim() == '') {\n        this.$message.error('文章内容不能为空')\n        return false\n      }\n      this.listCategories()\n      this.listTags()\n      this.addOrEdit = true\n    },\n    uploadCover(response) {\n      this.article.articleCover = response.data\n    },\n    beforeUpload(file) {\n      return new Promise((resolve) => {\n        if (file.size / 1024 < this.config.UPLOAD_SIZE) {\n          resolve(file)\n        }\n        imageConversion.compressAccurately(file, this.config.UPLOAD_SIZE).then((res) => {\n          resolve(res)\n        })\n      })\n    },\n    uploadImg(pos, file) {\n      var formdata = new FormData()\n      if (file.size / 1024 < this.config.UPLOAD_SIZE) {\n        formdata.append('file', file)\n        this.axios.post('/api/admin/articles/images', formdata).then(({ data }) => {\n          this.$refs.md.$img2Url(pos, data.data)\n        })\n      } else {\n        imageConversion.compressAccurately(file, this.config.UPLOAD_SIZE).then((res) => {\n          formdata.append('file', new window.File([res], file.name, { type: file.type }))\n          this.axios.post('/api/admin/articles/images', formdata).then(({ data }) => {\n            this.$refs.md.$img2Url(pos, data.data)\n          })\n        })\n      }\n    },\n    saveArticleDraft() {\n      if (this.article.articleTitle.trim() == '') {\n        this.$message.error('文章标题不能为空')\n        return false\n      }\n      if (this.article.articleContent.trim() == '') {\n        this.$message.error('文章内容不能为空')\n        return false\n      }\n      this.article.status = 3\n      this.axios.post('/api/admin/articles', this.article).then(({ data }) => {\n        if (data.code === 0) {\n          if (this.article.id === null) {\n            this.$store.commit('removeTab', '发布文章')\n          } else {\n            this.$store.commit('removeTab', '修改文章')\n          }\n          sessionStorage.removeItem('article')\n          this.$router.push({ path: '/article-list' })\n          this.$notify.success({\n            title: '成功',\n            message: '保存草稿成功'\n          })\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: '保存草稿失败'\n          })\n        }\n      })\n      this.autoSave = false\n    },\n    saveOrUpdateArticle() {\n      if (this.article.articleTitle.trim() == '') {\n        this.$message.error('文章标题不能为空')\n        return false\n      }\n      if (this.article.articleContent.trim() == '') {\n        this.$message.error('文章内容不能为空')\n        return false\n      }\n      if (this.article.categoryName == null) {\n        this.$message.error('文章分类不能为空')\n        return false\n      }\n      if (this.article.tagNames.length == 0) {\n        this.$message.error('文章标签不能为空')\n        return false\n      }\n      if (this.article.articleCover.trim() == '') {\n        this.$message.error('文章封面不能为空')\n        return false\n      }\n      this.axios.post('/api/admin/articles', this.article).then(({ data }) => {\n        if (data.code === 0) {\n          if (this.article.id === null) {\n            this.$store.commit('removeTab', '发布文章')\n          } else {\n            this.$store.commit('removeTab', '修改文章')\n          }\n          sessionStorage.removeItem('article')\n          this.$router.push({ path: '/article-list' })\n          this.$notify.success({\n            title: '成功',\n            message: data.message\n          })\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: data.message\n          })\n        }\n        this.addOrEdit = false\n      })\n      this.autoSave = false\n    },\n    autoSaveArticle() {\n      if (\n        this.autoSave &&\n        this.article.articleTitle.trim() != '' &&\n        this.article.articleContent.trim() != '' &&\n        this.article.id != null\n      ) {\n        this.axios.post('/api/admin/articles', this.article).then(({ data }) => {\n          if (data.code === 0) {\n            this.$notify.success({\n              title: '成功',\n              message: '自动保存成功'\n            })\n          } else {\n            this.$notify.error({\n              title: '失败',\n              message: '自动保存失败'\n            })\n          }\n        })\n      }\n      if (this.autoSave && this.article.id == null) {\n        sessionStorage.setItem('article', JSON.stringify(this.article))\n      }\n    },\n    searchCategories(keywords, cb) {\n      this.axios\n        .get('/api/admin/categories/search', {\n          params: {\n            keywords: keywords\n          }\n        })\n        .then(({ data }) => {\n          cb(data.data)\n        })\n    },\n    handleSelectCategories(item) {\n      this.addCategory({\n        categoryName: item.categoryName\n      })\n    },\n    saveCategory() {\n      if (this.categoryName.trim() != '') {\n        this.addCategory({\n          categoryName: this.categoryName\n        })\n        this.categoryName = ''\n      }\n    },\n    addCategory(item) {\n      this.article.categoryName = item.categoryName\n    },\n    removeCategory() {\n      this.article.categoryName = null\n    },\n    searchTags(keywords, cb) {\n      this.axios\n        .get('/api/admin/tags/search', {\n          params: {\n            keywords: keywords\n          }\n        })\n        .then(({ data }) => {\n          cb(data.data)\n        })\n    },\n    handleSelectTag(item) {\n      this.addTag({\n        tagName: item.tagName\n      })\n    },\n    saveTag() {\n      if (this.tagName.trim() != '') {\n        this.addTag({\n          tagName: this.tagName\n        })\n        this.tagName = ''\n      }\n    },\n    addTag(item) {\n      if (this.article.tagNames.indexOf(item.tagName) == -1) {\n        this.article.tagNames.push(item.tagName)\n      }\n    },\n    removeTag(item) {\n      const index = this.article.tagNames.indexOf(item)\n      this.article.tagNames.splice(index, 1)\n    }\n  },\n  computed: {\n    tagClass() {\n      return function (item) {\n        const index = this.article.tagNames.indexOf(item.tagName)\n        return index != -1 ? 'tag-item-select' : 'tag-item'\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.article-title-container {\n  display: flex;\n  align-items: center;\n  margin-bottom: 1.25rem;\n  margin-top: 2.25rem;\n}\n.save-btn {\n  margin-left: 0.75rem;\n  background: #fff;\n  color: #f56c6c;\n}\n.tag-item {\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n  cursor: pointer;\n}\n.tag-item-select {\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n  cursor: not-allowed;\n  color: #ccccd8 !important;\n}\n.category-item {\n  cursor: pointer;\n  padding: 0.6rem 0.5rem;\n}\n.category-item:hover {\n  background-color: #f0f9eb;\n  color: #67c23a;\n}\n.popover-title {\n  margin-bottom: 1rem;\n  text-align: center;\n}\n.popover-container {\n  margin-top: 1rem;\n  height: 260px;\n  overflow-y: auto;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}