{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n      var itemStyleList = ['opacity', 'symbol', 'symbolSize', 'symbolKeepAspect'];\n\n      for (var i = 0; i < itemStyleList.length; i++) {\n        var itemStyle = itemModel.getShallow(itemStyleList[i], true);\n\n        if (itemStyle != null) {\n          categoriesData.setItemVisual(idx, itemStyleList[i], itemStyle);\n        }\n      }\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          var itemStyleList = ['color', 'opacity', 'symbol', 'symbolSize', 'symbolKeepAspect'];\n\n          for (var i = 0; i < itemStyleList.length; i++) {\n            if (data.getItemVisual(idx, itemStyleList[i], true) == null) {\n              data.setItemVisual(idx, itemStyleList[i], categoriesData.getItemVisual(category, itemStyleList[i]));\n            }\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","map":{"version":3,"names":["_default","ecModel","paletteScope","eachSeriesByType","seriesModel","categoriesData","getCategoriesData","data","getData","categoryNameIdxMap","each","idx","name","getName","itemModel","getItemModel","color","get","getColorFromPalette","setItemVisual","itemStyleList","i","length","itemStyle","getShallow","count","model","category","getItemVisual","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-admin/node_modules/echarts/lib/chart/graph/categoryVisual.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n      var itemStyleList = ['opacity', 'symbol', 'symbolSize', 'symbolKeepAspect'];\n\n      for (var i = 0; i < itemStyleList.length; i++) {\n        var itemStyle = itemModel.getShallow(itemStyleList[i], true);\n\n        if (itemStyle != null) {\n          categoriesData.setItemVisual(idx, itemStyleList[i], itemStyle);\n        }\n      }\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          var itemStyleList = ['color', 'opacity', 'symbol', 'symbolSize', 'symbolKeepAspect'];\n\n          for (var i = 0; i < itemStyleList.length; i++) {\n            if (data.getItemVisual(idx, itemStyleList[i], true) == null) {\n              data.setItemVisual(idx, itemStyleList[i], categoriesData.getItemVisual(category, itemStyleList[i]));\n            }\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}