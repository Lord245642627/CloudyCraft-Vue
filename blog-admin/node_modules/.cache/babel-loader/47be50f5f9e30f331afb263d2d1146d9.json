{"ast":null,"code":"export default {\n  created() {\n    this.current = this.$store.state.pageState.exceptionLog;\n    this.listLogs();\n  },\n\n  data() {\n    return {\n      logs: [],\n      logIds: [],\n      isDelete: false,\n      loading: true,\n      keywords: '',\n      current: 1,\n      size: 10,\n      total: 0,\n      exceptionLog: '',\n      isCheck: false,\n      exceptionInfo: ''\n    };\n  },\n\n  methods: {\n    selectionChange(logs) {\n      this.logIds = [];\n      logs.forEach(item => {\n        this.logIds.push(item.id);\n      });\n    },\n\n    sizeChange(size) {\n      this.size = size;\n      this.listLogs();\n    },\n\n    currentChange(current) {\n      this.current = current;\n      this.$store.commit('updateExceptionLogPageState', current);\n      this.listLogs();\n    },\n\n    searchLogs() {\n      this.current = 1;\n      this.$store.commit('updateExceptionLogPageState', this.current);\n      this.listLogs();\n    },\n\n    listLogs() {\n      this.axios.get('/api/admin/exception/logs', {\n        params: {\n          current: this.current,\n          size: this.size,\n          keywords: this.keywords\n        }\n      }).then(({\n        data\n      }) => {\n        this.logs = data.data.records;\n        this.total = data.data.total;\n        this.loading = false;\n      });\n    },\n\n    deleteLog(id) {\n      var param = {};\n\n      if (id != null) {\n        param = {\n          data: [id]\n        };\n      } else {\n        param = {\n          data: this.logIds\n        };\n      }\n\n      this.axios.delete('/api/admin/exception/logs', param).then(({\n        data\n      }) => {\n        if (data.code === 0) {\n          this.$notify.success({\n            title: '成功',\n            message: data.message\n          });\n          this.listLogs();\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: data.message\n          });\n        }\n\n        this.isDelete = false;\n      });\n    },\n\n    check(exceptionLog) {\n      this.exceptionLog = exceptionLog;\n      this.exceptionInfo = '\\n' + this.exceptionLog.exceptionInfo;\n      this.isCheck = true;\n      this.$nextTick(() => {\n        Prism.highlightAll();\n      });\n    }\n\n  },\n  computed: {\n    tagType() {\n      return function (type) {\n        switch (type) {\n          case 'GET':\n            return '';\n\n          case 'POST':\n            return 'success';\n\n          case 'PUT':\n            return 'warning';\n\n          case 'DELETE':\n            return 'danger';\n        }\n      };\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAqGA;EACAA;IACA;IACA;EACA,CAJA;;EAKAC;IACA;MACAC,QADA;MAEAC,UAFA;MAGAC,eAHA;MAIAC,aAJA;MAKAC,YALA;MAMAC,UANA;MAOAC,QAPA;MAQAC,QARA;MASAC,gBATA;MAUAC,cAVA;MAWAC;IAXA;EAaA,CAnBA;;EAoBAC;IACAC;MACA;MACAZ;QACA;MACA,CAFA;IAGA,CANA;;IAOAa;MACA;MACA;IACA,CAVA;;IAWAC;MACA;MACA;MACA;IACA,CAfA;;IAgBAC;MACA;MACA;MACA;IACA,CApBA;;IAqBAC;MACA,WACAC,GADA,CACA,2BADA,EACA;QACAC;UACAb,qBADA;UAEAC,eAFA;UAGAF;QAHA;MADA,CADA,EAQAe,IARA,CAQA;QAAApB;MAAA;QACA;QACA;QACA;MACA,CAZA;IAaA,CAnCA;;IAoCAqB;MACA;;MACA;QACAC;UAAAtB;QAAA;MACA,CAFA,MAEA;QACAsB;UAAAtB;QAAA;MACA;;MACA;QAAAA;MAAA;QACA;UACA;YACAuB,WADA;YAEAC;UAFA;UAIA;QACA,CANA,MAMA;UACA;YACAD,WADA;YAEAC;UAFA;QAIA;;QACA;MACA,CAdA;IAeA,CA1DA;;IA2DAC;MACA;MACA;MACA;MACA;QACAC;MACA,CAFA;IAGA;;EAlEA,CApBA;EAwFAC;IACAC;MACA;QACA;UACA;YACA;;UACA;YACA;;UACA;YACA;;UACA;YACA;QARA;MAUA,CAXA;IAYA;;EAdA;AAxFA","names":["created","data","logs","logIds","isDelete","loading","keywords","current","size","total","exceptionLog","isCheck","exceptionInfo","methods","selectionChange","sizeChange","currentChange","searchLogs","listLogs","get","params","then","deleteLog","param","title","message","check","Prism","computed","tagType"],"sourceRoot":"src/views/log","sources":["ExceptionLog.vue"],"sourcesContent":["<template>\n  <el-card class=\"main-card\">\n    <div class=\"title\">{{ this.$route.name }}</div>\n    <div class=\"operation-container\">\n      <el-button\n        type=\"danger\"\n        size=\"small\"\n        icon=\"el-icon-delete\"\n        :disabled=\"logIds.length === 0\"\n        @click=\"isDelete = true\">\n        批量删除\n      </el-button>\n      <div style=\"margin-left: auto\">\n        <el-input\n          v-model=\"keywords\"\n          prefix-icon=\"el-icon-search\"\n          size=\"small\"\n          placeholder=\"请输入操作描述\"\n          style=\"width: 200px\"\n          @keyup.enter.native=\"searchLogs\" />\n        <el-button type=\"primary\" size=\"small\" icon=\"el-icon-search\" style=\"margin-left: 1rem\" @click=\"searchLogs\">\n          搜索\n        </el-button>\n      </div>\n    </div>\n    <el-table @selection-change=\"selectionChange\" v-loading=\"loading\" :data=\"logs\">\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n      <el-table-column prop=\"optUri\" label=\"请求接口\" align=\"center\" />\n      <el-table-column prop=\"optDesc\" label=\"操作描述\" align=\"center\"  />\n      <el-table-column prop=\"requetMethod\" label=\"请求方式\" align=\"center\" >\n        <template slot-scope=\"scope\" v-if=\"scope.row.requestMethod\">\n          <el-tag :type=\"tagType(scope.row.requestMethod)\">\n            {{ scope.row.requestMethod }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"ipAddress\" label=\"登录ip\" align=\"center\"  />\n      <el-table-column prop=\"ipSource\" label=\"登录地址\" align=\"center\"  />\n      <el-table-column prop=\"createTime\" label=\"操作日期\" align=\"center\" \">\n        <template slot-scope=\"scope\">\n          <i class=\"el-icon-time\" style=\"margin-right: 5px\" />\n          {{ scope.row.createTime | dateTime }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" align=\"center\" width=\"150\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" type=\"text\" slot=\"reference\" @click=\"check(scope.row)\">\n            <i class=\"el-icon-view\" /> 查看\n          </el-button>\n          <el-popconfirm title=\"确定删除吗？\" style=\"margin-left: 10px\" @confirm=\"deleteLog(scope.row.id)\">\n            <el-button size=\"mini\" type=\"text\" slot=\"reference\"> <i class=\"el-icon-delete\" /> 删除 </el-button>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      class=\"pagination-container\"\n      background\n      @size-change=\"sizeChange\"\n      @current-change=\"currentChange\"\n      :current-page=\"current\"\n      :page-size=\"size\"\n      :total=\"total\"\n      :page-sizes=\"[10, 20]\"\n      layout=\"total, sizes, prev, pager, next, jumper\" />\n    <el-dialog :visible.sync=\"isCheck\" append-to-body top=\"20px\" width=\"80%\" destroy-on-close>\n      <div class=\"dialog-title-container\" slot=\"title\"><i class=\"el-icon-more\" />详细信息</div>\n      <el-form ref=\"form\" :model=\"exceptionLog\" label-width=\"100px\" size=\"mini\">\n        <el-form-item label=\"操作接口：\">\n          {{ exceptionLog.optUri }}\n        </el-form-item>\n        <el-form-item label=\"操作方法：\">\n          {{ exceptionLog.optMethod }}\n        </el-form-item>\n        <el-form-item label=\"请求方式：\">\n          <el-tag :type=\"tagType(exceptionLog.requestMethod)\">\n            {{ exceptionLog.requestMethod }}\n          </el-tag>\n        </el-form-item>\n        <el-form-item label=\"请求参数：\">\n          {{ exceptionLog.requestParam }}\n        </el-form-item>\n        <div>\n          <pre>\n\t    <code class=\"language-java\">{{ exceptionInfo }}</code>\n\t  </pre>\n        </div>\n      </el-form>\n    </el-dialog>\n    <el-dialog :visible.sync=\"isDelete\" width=\"30%\">\n      <div class=\"dialog-title-container\" slot=\"title\"><i class=\"el-icon-warning\" style=\"color: #ff9900\" />提示</div>\n      <div style=\"font-size: 1rem\">是否删除选中项？</div>\n      <div slot=\"footer\">\n        <el-button @click=\"isDelete = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"deleteLog(null)\"> 确 定 </el-button>\n      </div>\n    </el-dialog>\n  </el-card>\n</template>\n\n<script>\nexport default {\n  created() {\n    this.current = this.$store.state.pageState.exceptionLog\n    this.listLogs()\n  },\n  data() {\n    return {\n      logs: [],\n      logIds: [],\n      isDelete: false,\n      loading: true,\n      keywords: '',\n      current: 1,\n      size: 10,\n      total: 0,\n      exceptionLog: '',\n      isCheck: false,\n      exceptionInfo: ''\n    }\n  },\n  methods: {\n    selectionChange(logs) {\n      this.logIds = []\n      logs.forEach((item) => {\n        this.logIds.push(item.id)\n      })\n    },\n    sizeChange(size) {\n      this.size = size\n      this.listLogs()\n    },\n    currentChange(current) {\n      this.current = current\n      this.$store.commit('updateExceptionLogPageState', current)\n      this.listLogs()\n    },\n    searchLogs() {\n      this.current = 1\n      this.$store.commit('updateExceptionLogPageState', this.current)\n      this.listLogs()\n    },\n    listLogs() {\n      this.axios\n        .get('/api/admin/exception/logs', {\n          params: {\n            current: this.current,\n            size: this.size,\n            keywords: this.keywords\n          }\n        })\n        .then(({ data }) => {\n          this.logs = data.data.records\n          this.total = data.data.total\n          this.loading = false\n        })\n    },\n    deleteLog(id) {\n      var param = {}\n      if (id != null) {\n        param = { data: [id] }\n      } else {\n        param = { data: this.logIds }\n      }\n      this.axios.delete('/api/admin/exception/logs', param).then(({ data }) => {\n        if (data.code === 0) {\n          this.$notify.success({\n            title: '成功',\n            message: data.message\n          })\n          this.listLogs()\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: data.message\n          })\n        }\n        this.isDelete = false\n      })\n    },\n    check(exceptionLog) {\n      this.exceptionLog = exceptionLog\n      this.exceptionInfo = '\\n' + this.exceptionLog.exceptionInfo\n      this.isCheck = true\n      this.$nextTick(() => {\n        Prism.highlightAll()\n      })\n    }\n  },\n  computed: {\n    tagType() {\n      return function (type) {\n        switch (type) {\n          case 'GET':\n            return ''\n          case 'POST':\n            return 'success'\n          case 'PUT':\n            return 'warning'\n          case 'DELETE':\n            return 'danger'\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}