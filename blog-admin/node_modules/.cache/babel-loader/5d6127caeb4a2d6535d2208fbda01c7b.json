{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar ParallelAxis = require(\"./ParallelAxis\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../../component/helper/sliderMove\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\n\n\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function (parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function () {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function (parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, data.mapDimension(dim));\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function (parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function () {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function () {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function (dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function (value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {number} [start=0] the start dataIndex that travel from.\n   * @param {number} [end=data.count()] the next dataIndex of the last dataIndex will be travel.\n   */\n  eachActiveState: function (data, callback, start, end) {\n    start == null && (start = 0);\n    end == null && (end = data.count());\n    var axesMap = this._axesMap;\n    var dimensions = this.dimensions;\n    var dataDimensions = [];\n    var axisModels = [];\n    zrUtil.each(dimensions, function (axisDim) {\n      dataDimensions.push(data.mapDimension(axisDim));\n      axisModels.push(axesMap.get(axisDim).model);\n    });\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var dataIndex = start; dataIndex < end; dataIndex++) {\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n        var values = data.getValues(dataDimensions, dataIndex);\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var state = axisModels[j].getActiveState(values[j]);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback(activeState, dataIndex);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function () {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function (coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function (dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n      var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n      var pos = extent[1] * pointCoord / winSize;\n      axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n      axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n      axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n    }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;","map":{"version":3,"names":["zrUtil","require","matrix","layoutUtil","axisHelper","ParallelAxis","graphic","numberUtil","sliderMove","each","mathMin","Math","min","mathMax","max","mathFloor","floor","mathCeil","ceil","round","PI","Parallel","parallelModel","ecModel","api","_axesMap","createHashMap","_axesLayout","dimensions","_rect","_model","_init","prototype","type","constructor","parallelAxisIndex","dim","idx","axisIndex","axisModel","getComponent","axis","set","createScaleByModel","get","isCategory","onBand","inverse","model","coordinateSystem","update","_updateAxesFromSeries","containPoint","point","layoutInfo","_makeLayoutInfo","axisBase","layoutBase","pixelDimIndex","pAxis","pLayout","axisLength","layoutLength","getModel","eachSeries","seriesModel","contains","data","getData","scale","unionExtentFromData","mapDimension","niceScaleExtent","resize","getLayoutRect","getBoxLayoutParams","width","getWidth","height","getHeight","_layoutAxes","getRect","rect","xy","wh","layout","layoutExtent","axisCount","length","axisExpandWidth","restrict","axisExpandCount","axisExpandable","axisExpandWindow","winSize","axisExpandCenter","axisCollapseWidth","winInnerIndices","axisExpandWindow0Pos","axes","axisExtent","setExtent","posInfo","layoutAxisWithExpand","layoutAxisWithoutExpand","positionTable","horizontal","x","position","y","vertical","rotationTable","rotation","transform","create","rotate","translate","axisNameAvailableWidth","axisLabelShow","nameTruncateMaxWidth","tickDirection","labelDirection","getAxis","dataToPoint","value","axisCoordToPoint","dataToCoord","eachActiveState","callback","start","end","count","axesMap","dataDimensions","axisModels","axisDim","push","hasActiveSet","hasAxisBrushed","dataIndex","activeState","values","getValues","j","lenj","state","getActiveState","coord","axisLayout","applyTransform","getAxisLayout","clone","getSlidedAxisExpandWindow","slice","extent","behavior","pointCoord","delta","triggerArea","useJump","pos","len","step","_default","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-admin/node_modules/echarts/lib/coord/parallel/Parallel.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar ParallelAxis = require(\"./ParallelAxis\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../../component/helper/sliderMove\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function (parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function () {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function (parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, data.mapDimension(dim));\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function (parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function () {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function () {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function (dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function (value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {number} [start=0] the start dataIndex that travel from.\n   * @param {number} [end=data.count()] the next dataIndex of the last dataIndex will be travel.\n   */\n  eachActiveState: function (data, callback, start, end) {\n    start == null && (start = 0);\n    end == null && (end = data.count());\n    var axesMap = this._axesMap;\n    var dimensions = this.dimensions;\n    var dataDimensions = [];\n    var axisModels = [];\n    zrUtil.each(dimensions, function (axisDim) {\n      dataDimensions.push(data.mapDimension(axisDim));\n      axisModels.push(axesMap.get(axisDim).model);\n    });\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var dataIndex = start; dataIndex < end; dataIndex++) {\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n        var values = data.getValues(dataDimensions, dataIndex);\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var state = axisModels[j].getActiveState(values[j]);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback(activeState, dataIndex);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function () {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function (coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function (dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize;\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}