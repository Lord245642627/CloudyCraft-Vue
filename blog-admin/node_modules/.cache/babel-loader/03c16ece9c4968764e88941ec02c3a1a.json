{"ast":null,"code":"/* IMPORT */\n\n/* MAIN */\nconst Channel = {\n  /* CLAMP */\n  min: {\n    r: 0,\n    g: 0,\n    b: 0,\n    s: 0,\n    l: 0,\n    a: 0\n  },\n  max: {\n    r: 255,\n    g: 255,\n    b: 255,\n    h: 360,\n    s: 100,\n    l: 100,\n    a: 1\n  },\n  clamp: {\n    r: r => r >= 255 ? 255 : r < 0 ? 0 : r,\n    g: g => g >= 255 ? 255 : g < 0 ? 0 : g,\n    b: b => b >= 255 ? 255 : b < 0 ? 0 : b,\n    h: h => h % 360,\n    s: s => s >= 100 ? 100 : s < 0 ? 0 : s,\n    l: l => l >= 100 ? 100 : l < 0 ? 0 : l,\n    a: a => a >= 1 ? 1 : a < 0 ? 0 : a\n  },\n\n  /* CONVERSION */\n  //SOURCE: https://planetcalc.com/7779\n  toLinear: c => {\n    const n = c / 255;\n    return c > .03928 ? Math.pow((n + .055) / 1.055, 2.4) : n / 12.92;\n  },\n  //SOURCE: https://gist.github.com/mjackson/5311256\n  hue2rgb: (p, q, t) => {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n  },\n  hsl2rgb: ({\n    h,\n    s,\n    l\n  }, channel) => {\n    if (!s) return l * 2.55; // Achromatic\n\n    h /= 360;\n    s /= 100;\n    l /= 100;\n    const q = l < .5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n\n    switch (channel) {\n      case 'r':\n        return Channel.hue2rgb(p, q, h + 1 / 3) * 255;\n\n      case 'g':\n        return Channel.hue2rgb(p, q, h) * 255;\n\n      case 'b':\n        return Channel.hue2rgb(p, q, h - 1 / 3) * 255;\n    }\n  },\n  rgb2hsl: ({\n    r,\n    g,\n    b\n  }, channel) => {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    const l = (max + min) / 2;\n    if (channel === 'l') return l * 100;\n    if (max === min) return 0; // Achromatic\n\n    const d = max - min;\n    const s = l > .5 ? d / (2 - max - min) : d / (max + min);\n    if (channel === 's') return s * 100;\n\n    switch (max) {\n      case r:\n        return ((g - b) / d + (g < b ? 6 : 0)) * 60;\n\n      case g:\n        return ((b - r) / d + 2) * 60;\n\n      case b:\n        return ((r - g) / d + 4) * 60;\n\n      default:\n        return -1;\n      //TSC: TypeScript is stupid and complains if there isn't this useless default statement\n    }\n  }\n};\n/* EXPORT */\n\nexport default Channel;","map":null,"metadata":{},"sourceType":"module"}