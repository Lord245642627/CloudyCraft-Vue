{"ast":null,"code":"export default {\n  created() {\n    if (this.$route.params.quartzId == 'all') {\n      this.jobId = 0;\n    } else if (this.$route.params.quartzId !== null) {\n      this.jobId = this.$route.params.quartzId;\n    }\n\n    if (this.jobId == this.$store.state.pageState.quartzLog.jobId) {\n      this.current = this.$store.state.pageState.quartzLog.current;\n    } else {\n      this.current = 1;\n      this.$store.commit('updateQuartzLogPageState', {\n        jobId: this.jobId,\n        current: this.current\n      });\n    }\n\n    this.listJobLogs();\n    this.listJobGroups();\n  },\n\n  data() {\n    return {\n      loading: true,\n      current: 1,\n      size: 10,\n      total: 0,\n      open: false,\n      jobId: 0,\n      jobLog: {},\n      searchParams: {},\n      jobGroups: [],\n      jobLogIds: [],\n      jobLogs: [],\n      dateRange: []\n    };\n  },\n\n  methods: {\n    selectionChange(jobLogs) {\n      this.jobLogIds = [];\n      jobLogs.forEach(item => {\n        this.jobLogIds.push(item.id);\n      });\n    },\n\n    listJobGroups() {\n      this.axios.get('/api/admin/jobLogs/jobGroups').then(({\n        data\n      }) => {\n        this.jobGroups = data.data;\n      });\n    },\n\n    listJobLogs() {\n      if (this.jobId === 0) {\n        this.searchParams.jobId = null;\n      } else {\n        this.searchParams.jobId = this.jobId;\n      }\n\n      this.searchParams.current = this.current;\n      this.searchParams.size = this.size;\n      this.searchParams.startTime = this.dateRange[0];\n      this.searchParams.endTime = this.dateRange[1];\n      this.axios.get('/api/admin/jobLogs', {\n        params: this.searchParams\n      }).then(({\n        data\n      }) => {\n        this.jobLogs = data.data.records;\n        this.total = data.data.total;\n        this.loading = false;\n      });\n    },\n\n    searchLogs() {\n      this.current = 1;\n      this.$store.commit('updateQuartzLogPageState', {\n        jobId: this.jobId,\n        current: this.current\n      });\n      this.listJobLogs();\n    },\n\n    clearSearch() {\n      this.searchParams = {};\n      this.dateRange = [];\n      this.listJobLogs();\n    },\n\n    sizeChange(size) {\n      this.size = size;\n      this.listJobLogs();\n    },\n\n    currentChange(current) {\n      this.current = current;\n      this.$store.commit('updateQuartzLogPageState', {\n        jobId: this.jobId,\n        current: this.current\n      });\n      this.listJobLogs();\n    },\n\n    deleteJobLogs() {\n      let param = {};\n      param = {\n        data: this.jobLogIds\n      };\n      this.axios.delete('/api/admin/jobLogs', param).then(({\n        data\n      }) => {\n        if (data.code === 0) {\n          this.$notify.success({\n            title: '成功',\n            message: '删除成功'\n          });\n          this.listJobLogs();\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: '删除失败'\n          });\n        }\n      });\n    },\n\n    clean() {\n      this.axios.delete('/api/admin/jobLogs/clean').then(({\n        data\n      }) => {\n        if (data.code === 0) {\n          this.$notify.success({\n            title: '成功',\n            message: '清空成功'\n          });\n          this.listJobLogs();\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: '清空失败'\n          });\n        }\n      });\n    },\n\n    changeOpen(jobLog) {\n      this.jobLog = jobLog;\n      this.jobLog.exceptionInfo = '\\n' + this.jobLog.exceptionInfo;\n      this.open = true;\n      this.$nextTick(() => {\n        Prism.highlightAll();\n      });\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}