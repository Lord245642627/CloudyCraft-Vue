{"ast":null,"code":"export default {\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    disable: {\n      type: Boolean,\n      default: true\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    }\n  },\n\n  data() {\n    return {\n      innerText: this.value,\n      isLocked: false,\n      range: null\n    };\n  },\n\n  watch: {\n    value() {\n      if (!this.isLocked) {\n        this.innerText = this.value;\n      }\n    }\n\n  },\n  methods: {\n    clear() {\n      this.$el.innerHTML = '';\n      this.$emit('input', this.$el.innerHTML);\n    },\n\n    onInput() {\n      this.$emit('input', this.$el.innerHTML);\n    },\n\n    onFocus() {\n      this.$emit('focus', this.$el.innerHTML);\n      this.isLocked = true;\n    },\n\n    onBlur() {\n      // 记录光标\n      if (window.getSelection) {\n        var selection = window.getSelection();\n        this.range = selection.getRangeAt(0);\n      }\n\n      this.$emit('blur', this.$el.innerHTML);\n      this.isLocked = false;\n    },\n\n    addText(value) {\n      // 还原光标\n      if (window.getSelection) {\n        var selection = window.getSelection();\n        selection.removeAllRanges(); // 为空初始化光标\n\n        if (this.range == null) {\n          this.$refs.editor.focus();\n          this.range = selection.getRangeAt(0);\n        } // 删除选中内容\n\n\n        this.range.deleteContents(); // 添加内容\n\n        this.range.insertNode(this.range.createContextualFragment(value));\n        this.range.collapse(false);\n        selection.addRange(this.range);\n        this.$emit('input', this.$el.innerHTML);\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAaA;EACAA;IACAC;MACAC,YADA;MAEAC;IAFA,CADA;IAKAC;MACAF,aADA;MAEAC;IAFA,CALA;IASAE;MACAH,YADA;MAEAC;IAFA;EATA,CADA;;EAeAG;IACA;MACAC,qBADA;MAEAC,eAFA;MAGAC;IAHA;EAKA,CArBA;;EAsBAC;IACAT;MACA;QACA;MACA;IACA;;EALA,CAtBA;EA6BAU;IACAC;MACA;MACA;IACA,CAJA;;IAKAC;MACA;IACA,CAPA;;IAQAC;MACA;MACA;IACA,CAXA;;IAYAC;MACA;MACA;QACA;QACA;MACA;;MACA;MACA;IACA,CApBA;;IAqBAC;MACA;MACA;QACA;QACAC,4BAFA,CAGA;;QACA;UACA;UACA;QACA,CAPA,CAQA;;;QACA,4BATA,CAUA;;QACA;QACA;QACAA;QACA;MACA;IACA;;EAvCA;AA7BA","names":["props","value","type","default","disable","placeholder","data","innerText","isLocked","range","watch","methods","clear","onInput","onFocus","onBlur","addText","selection"],"sourceRoot":"src/components","sources":["Editor.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"editor\"\n    class=\"edit-container\"\n    v-html=\"innerText\"\n    :placeholder=\"placeholder\"\n    :contenteditable=\"disable\"\n    @focus=\"onFocus\"\n    @blur=\"onBlur\"\n    @input=\"onInput\" />\n</template>\n\n<script>\nexport default {\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    disable: {\n      type: Boolean,\n      default: true\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      innerText: this.value,\n      isLocked: false,\n      range: null\n    }\n  },\n  watch: {\n    value() {\n      if (!this.isLocked) {\n        this.innerText = this.value\n      }\n    }\n  },\n  methods: {\n    clear() {\n      this.$el.innerHTML = ''\n      this.$emit('input', this.$el.innerHTML)\n    },\n    onInput() {\n      this.$emit('input', this.$el.innerHTML)\n    },\n    onFocus() {\n      this.$emit('focus', this.$el.innerHTML)\n      this.isLocked = true\n    },\n    onBlur() {\n      // 记录光标\n      if (window.getSelection) {\n        var selection = window.getSelection()\n        this.range = selection.getRangeAt(0)\n      }\n      this.$emit('blur', this.$el.innerHTML)\n      this.isLocked = false\n    },\n    addText(value) {\n      // 还原光标\n      if (window.getSelection) {\n        var selection = window.getSelection()\n        selection.removeAllRanges()\n        // 为空初始化光标\n        if (this.range == null) {\n          this.$refs.editor.focus()\n          this.range = selection.getRangeAt(0)\n        }\n        // 删除选中内容\n        this.range.deleteContents()\n        // 添加内容\n        this.range.insertNode(this.range.createContextualFragment(value))\n        this.range.collapse(false)\n        selection.addRange(this.range)\n        this.$emit('input', this.$el.innerHTML)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.edit-container {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border-radius: 8px;\n  background: #f0f1f4;\n  font-size: 14px;\n  line-height: 1.5;\n  padding: 6px 12px;\n  box-sizing: border-box;\n  overflow: auto;\n  word-break: break-all;\n  outline: none;\n  user-select: text;\n  white-space: pre-wrap;\n  text-align: left;\n  -webkit-user-modify: read-write-plaintext-only;\n}\n.edit-container:empty::before {\n  cursor: text;\n  content: attr(placeholder);\n  color: #999;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}