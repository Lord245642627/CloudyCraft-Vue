{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar _throttle = require(\"../../util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\n\nvar createClipPath = _createClipPathFromCoordSys.createClipPath;\n\nvar Sausage = require(\"../../util/shape/sausage\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth'];\nvar _eventPos = [0, 0]; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nfunction getClipArea(coord, data) {\n  var coordSysClipArea = coord.getArea && coord.getArea();\n\n  if (coord.type === 'cartesian2d') {\n    var baseAxis = coord.getBaseAxis(); // When boundaryGap is false or using time axis. bar may exceed the grid.\n    // We should not clip this part.\n    // See test/bar2.html\n\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\n      var expandWidth = data.getLayout('bandWidth');\n\n      if (baseAxis.isHorizontal()) {\n        coordSysClipArea.x -= expandWidth;\n        coordSysClipArea.width += expandWidth * 2;\n      } else {\n        coordSysClipArea.y -= expandWidth;\n        coordSysClipArea.height += expandWidth * 2;\n      }\n    }\n  }\n\n  return coordSysClipArea;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    var needsClip = seriesModel.get('clip', true);\n    var coordSysClipArea = getClipArea(coord, data); // If there is clipPath created in large mode. Remove it.\n\n    group.removeClipPath(); // We don't use clipPath in normal mode because we needs a perfect animation\n    // And don't want the label are clipped.\n\n    var roundCap = seriesModel.get('roundCap', true);\n    var drawBackground = seriesModel.get('showBackground', true);\n    var backgroundModel = seriesModel.getModel('backgroundStyle');\n    var barBorderRadius = backgroundModel.get('barBorderRadius') || 0;\n    var bgEls = [];\n    var oldBgEls = this._backgroundEls || [];\n\n    var createBackground = function (dataIndex) {\n      var bgLayout = getLayout[coord.type](data, dataIndex);\n      var bgEl = createBackgroundEl(coord, isHorizontalOrRadial, bgLayout);\n      bgEl.useStyle(backgroundModel.getBarItemStyle()); // Only cartesian2d support borderRadius.\n\n      if (coord.type === 'cartesian2d') {\n        bgEl.setShape('r', barBorderRadius);\n      }\n\n      bgEls[dataIndex] = bgEl;\n      return bgEl;\n    };\n\n    data.diff(oldData).add(function (dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n\n      if (drawBackground) {\n        createBackground(dataIndex);\n      } // If dataZoom in filteMode: 'empty', the baseValue can be set as NaN in \"axisProxy\".\n\n\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      if (needsClip) {\n        // Clip will modify the layout params.\n        // And return a boolean to determine if the shape are fully clipped.\n        var isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n          return;\n        }\n      }\n\n      var el = elementCreator[coord.type](dataIndex, layout, isHorizontalOrRadial, animationModel, false, roundCap);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (drawBackground) {\n        var bgEl;\n\n        if (oldBgEls.length === 0) {\n          bgEl = createBackground(oldIndex);\n        } else {\n          bgEl = oldBgEls[oldIndex];\n          bgEl.useStyle(backgroundModel.getBarItemStyle()); // Only cartesian2d support borderRadius.\n\n          if (coord.type === 'cartesian2d') {\n            bgEl.setShape('r', barBorderRadius);\n          }\n\n          bgEls[newIndex] = bgEl;\n        }\n\n        var bgLayout = getLayout[coord.type](data, newIndex);\n        var shape = createBackgroundShape(isHorizontalOrRadial, bgLayout, coord);\n        graphic.updateProps(bgEl, {\n          shape: shape\n        }, animationModel, newIndex);\n      }\n\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      if (needsClip) {\n        var isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n          return;\n        }\n      }\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](newIndex, layout, isHorizontalOrRadial, animationModel, true, roundCap);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    var bgGroup = this._backgroundGroup || (this._backgroundGroup = new Group());\n    bgGroup.removeAll();\n\n    for (var i = 0; i < bgEls.length; ++i) {\n      bgGroup.add(bgEls[i]);\n    }\n\n    group.add(bgGroup);\n    this._backgroundEls = bgEls;\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group); // Use clipPath in large mode.\n\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    this._removeBackground();\n\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      this._removeBackground();\n\n      this._backgroundEls = [];\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  },\n  _removeBackground: function () {\n    this.group.remove(this._backgroundGroup);\n    this._backgroundGroup = null;\n  }\n});\n\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar clip = {\n  cartesian2d: function (coordSysBoundingRect, layout) {\n    var signWidth = layout.width < 0 ? -1 : 1;\n    var signHeight = layout.height < 0 ? -1 : 1; // Needs positive width and height\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\n    var x2 = mathMin(layout.x + layout.width, coordSysBoundingRect.x + coordSysBoundingRect.width);\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\n    var y2 = mathMin(layout.y + layout.height, coordSysBoundingRect.y + coordSysBoundingRect.height);\n    layout.x = x;\n    layout.y = y;\n    layout.width = x2 - x;\n    layout.height = y2 - y;\n    var clipped = layout.width < 0 || layout.height < 0; // Reverse back\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    return clipped;\n  },\n  polar: function (coordSysClipArea, layout) {\n    var signR = layout.r0 <= layout.r ? 1 : -1; // Make sure r is larger than r0\n\n    if (signR < 0) {\n      var r = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = r;\n    }\n\n    var r = mathMin(layout.r, coordSysClipArea.r);\n    var r0 = mathMax(layout.r0, coordSysClipArea.r0);\n    layout.r = r;\n    layout.r0 = r0;\n    var clipped = r - r0 < 0; // Reverse back\n\n    if (signR < 0) {\n      var r = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = r;\n    }\n\n    return clipped;\n  }\n};\nvar elementCreator = {\n  cartesian2d: function (dataIndex, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout),\n      z2: 1\n    });\n    rect.name = 'item'; // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (dataIndex, layout, isRadial, animationModel, isUpdate, roundCap) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var ShapeClass = !isRadial && roundCap ? Sausage : graphic.Sector;\n    var sector = new ShapeClass({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout),\n      z2: 1\n    });\n    sector.name = 'item'; // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  // itemModel is only used to get borderWidth, which is not needed\n  // when calculating bar background layout.\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = itemModel ? getLineWidth(itemModel, layout) : 0; // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction isZeroOnPolar(layout) {\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\n}\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var stroke = data.getVisual('borderColor');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    stroke: isZeroOnPolar(layout) ? 'none' : stroke,\n    fill: isZeroOnPolar(layout) ? 'none' : color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  if (isZeroOnPolar(layout)) {\n    hoverStyle.fill = hoverStyle.stroke = 'none';\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0; // width or height may be NaN for empty data\n\n  var width = isNaN(rawLayout.width) ? Number.MAX_VALUE : Math.abs(rawLayout.width);\n  var height = isNaN(rawLayout.height) ? Number.MAX_VALUE : Math.abs(rawLayout.height);\n  return Math.min(lineWidth, width, height);\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var baseDimIdx = this.__baseDimIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - baseDimIdx] = data.getLayout('valueAxisStart');\n  var largeDataIndices = data.getLayout('largeDataIndices');\n  var barWidth = data.getLayout('barWidth');\n  var backgroundModel = seriesModel.getModel('backgroundStyle');\n  var drawBackground = seriesModel.get('showBackground', true);\n\n  if (drawBackground) {\n    var points = data.getLayout('largeBackgroundPoints');\n    var backgroundStartPoint = [];\n    backgroundStartPoint[1 - baseDimIdx] = data.getLayout('backgroundStart');\n    var bgEl = new LargePath({\n      shape: {\n        points: points\n      },\n      incremental: !!incremental,\n      __startPoint: backgroundStartPoint,\n      __baseDimIdx: baseDimIdx,\n      __largeDataIndices: largeDataIndices,\n      __barWidth: barWidth,\n      silent: true,\n      z2: 0\n    });\n    setLargeBackgroundStyle(bgEl, backgroundModel, data);\n    group.add(bgEl);\n  }\n\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __baseDimIdx: baseDimIdx,\n    __largeDataIndices: largeDataIndices,\n    __barWidth: barWidth\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data); // Enable tooltip and user mouse/touch event handlers.\n\n  el.seriesIndex = seriesModel.seriesIndex;\n\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n} // Use throttle to avoid frequently traverse to find dataIndex.\n\n\nvar largePathUpdateDataIndex = throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  largePath.dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\n\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.__baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.__largeDataIndices;\n  var barWidthHalf = Math.abs(largePath.__barWidth / 2);\n  var startValueVal = largePath.__startPoint[valueDimIdx];\n  _eventPos[0] = x;\n  _eventPos[1] = y;\n  var pointerBaseVal = _eventPos[baseDimIdx];\n  var pointerValueVal = _eventPos[1 - baseDimIdx];\n  var baseLowerBound = pointerBaseVal - barWidthHalf;\n  var baseUpperBound = pointerBaseVal + barWidthHalf;\n\n  for (var i = 0, len = points.length / 2; i < len; i++) {\n    var ii = i * 2;\n    var barBaseVal = points[ii + baseDimIdx];\n    var barValueVal = points[ii + valueDimIdx];\n\n    if (barBaseVal >= baseLowerBound && barBaseVal <= baseUpperBound && (startValueVal <= barValueVal ? pointerValueVal >= startValueVal && pointerValueVal <= barValueVal : pointerValueVal >= barValueVal && pointerValueVal <= startValueVal)) {\n      return largeDataIndices[i];\n    }\n  }\n\n  return -1;\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction setLargeBackgroundStyle(el, backgroundModel, data) {\n  var borderColor = backgroundModel.get('borderColor') || backgroundModel.get('color');\n  var itemStyle = backgroundModel.getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction createBackgroundShape(isHorizontalOrRadial, layout, coord) {\n  var coordLayout;\n  var isPolar = coord.type === 'polar';\n\n  if (isPolar) {\n    coordLayout = coord.getArea();\n  } else {\n    coordLayout = coord.grid.getRect();\n  }\n\n  if (isPolar) {\n    return {\n      cx: coordLayout.cx,\n      cy: coordLayout.cy,\n      r0: isHorizontalOrRadial ? coordLayout.r0 : layout.r0,\n      r: isHorizontalOrRadial ? coordLayout.r : layout.r,\n      startAngle: isHorizontalOrRadial ? layout.startAngle : 0,\n      endAngle: isHorizontalOrRadial ? layout.endAngle : Math.PI * 2\n    };\n  } else {\n    return {\n      x: isHorizontalOrRadial ? layout.x : coordLayout.x,\n      y: isHorizontalOrRadial ? coordLayout.y : layout.y,\n      width: isHorizontalOrRadial ? layout.width : coordLayout.width,\n      height: isHorizontalOrRadial ? coordLayout.height : layout.height\n    };\n  }\n}\n\nfunction createBackgroundEl(coord, isHorizontalOrRadial, layout) {\n  var ElementClz = coord.type === 'polar' ? graphic.Sector : graphic.Rect;\n  return new ElementClz({\n    shape: createBackgroundShape(isHorizontalOrRadial, layout, coord),\n    silent: true,\n    z2: 0\n  });\n}\n\nmodule.exports = _default;","map":{"version":3,"names":["_config","require","__DEV__","echarts","zrUtil","graphic","_helper","setLabel","Model","barItemStyle","Path","Group","_throttle","throttle","_createClipPathFromCoordSys","createClipPath","Sausage","BAR_BORDER_WIDTH_QUERY","_eventPos","extend","prototype","getClipArea","coord","data","coordSysClipArea","getArea","type","baseAxis","getBaseAxis","onBand","expandWidth","getLayout","isHorizontal","x","width","y","height","_default","extendChartView","render","seriesModel","ecModel","api","_updateDrawMode","coordinateSystemType","get","_isLargeDraw","_renderLarge","_renderNormal","group","incrementalPrepareRender","_clear","incrementalRender","params","_incrementalRenderLarge","isLargeDraw","pipelineContext","large","getData","oldData","_data","coordinateSystem","isHorizontalOrRadial","dim","animationModel","isAnimationEnabled","needsClip","removeClipPath","roundCap","drawBackground","backgroundModel","getModel","barBorderRadius","bgEls","oldBgEls","_backgroundEls","createBackground","dataIndex","bgLayout","bgEl","createBackgroundEl","useStyle","getBarItemStyle","setShape","diff","add","itemModel","getItemModel","layout","hasValue","isClipped","clip","remove","el","elementCreator","setItemGraphicEl","updateStyle","update","newIndex","oldIndex","length","shape","createBackgroundShape","updateProps","getItemGraphicEl","removeRect","removeSector","execute","bgGroup","_backgroundGroup","removeAll","i","createLarge","clipPath","setClipPath","_removeBackground","dispose","noop","eachItemGraphicEl","mathMax","Math","max","mathMin","min","cartesian2d","coordSysBoundingRect","signWidth","signHeight","x2","y2","clipped","polar","signR","r0","r","isUpdate","rect","Rect","z2","name","rectShape","animateProperty","animateTarget","isRadial","clockwise","startAngle","endAngle","ShapeClass","Sector","sector","defaults","sectorShape","style","text","parent","getItemLayout","fixedLineWidth","getLineWidth","signX","signY","cx","cy","isZeroOnPolar","isPolar","color","getItemVisual","opacity","stroke","getVisual","itemStyleModel","hoverStyle","fill","cursorStyle","getShallow","attr","labelPositionOutside","setHoverStyle","rawLayout","lineWidth","isNaN","Number","MAX_VALUE","abs","LargePath","points","buildPath","ctx","startPoint","__startPoint","baseDimIdx","__baseDimIdx","moveTo","lineTo","incremental","largeDataIndices","barWidth","backgroundStartPoint","__largeDataIndices","__barWidth","silent","setLargeBackgroundStyle","setLargeStyle","seriesIndex","on","largePathUpdateDataIndex","event","largePath","largePathFindDataIndex","offsetX","offsetY","valueDimIdx","barWidthHalf","startValueVal","pointerBaseVal","pointerValueVal","baseLowerBound","baseUpperBound","len","ii","barBaseVal","barValueVal","borderColor","itemStyle","getItemStyle","coordLayout","grid","getRect","PI","ElementClz","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-admin/node_modules/echarts/lib/chart/bar/BarView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar _throttle = require(\"../../util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\n\nvar createClipPath = _createClipPathFromCoordSys.createClipPath;\n\nvar Sausage = require(\"../../util/shape/sausage\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth'];\nvar _eventPos = [0, 0]; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nfunction getClipArea(coord, data) {\n  var coordSysClipArea = coord.getArea && coord.getArea();\n\n  if (coord.type === 'cartesian2d') {\n    var baseAxis = coord.getBaseAxis(); // When boundaryGap is false or using time axis. bar may exceed the grid.\n    // We should not clip this part.\n    // See test/bar2.html\n\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\n      var expandWidth = data.getLayout('bandWidth');\n\n      if (baseAxis.isHorizontal()) {\n        coordSysClipArea.x -= expandWidth;\n        coordSysClipArea.width += expandWidth * 2;\n      } else {\n        coordSysClipArea.y -= expandWidth;\n        coordSysClipArea.height += expandWidth * 2;\n      }\n    }\n  }\n\n  return coordSysClipArea;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    var needsClip = seriesModel.get('clip', true);\n    var coordSysClipArea = getClipArea(coord, data); // If there is clipPath created in large mode. Remove it.\n\n    group.removeClipPath(); // We don't use clipPath in normal mode because we needs a perfect animation\n    // And don't want the label are clipped.\n\n    var roundCap = seriesModel.get('roundCap', true);\n    var drawBackground = seriesModel.get('showBackground', true);\n    var backgroundModel = seriesModel.getModel('backgroundStyle');\n    var barBorderRadius = backgroundModel.get('barBorderRadius') || 0;\n    var bgEls = [];\n    var oldBgEls = this._backgroundEls || [];\n\n    var createBackground = function (dataIndex) {\n      var bgLayout = getLayout[coord.type](data, dataIndex);\n      var bgEl = createBackgroundEl(coord, isHorizontalOrRadial, bgLayout);\n      bgEl.useStyle(backgroundModel.getBarItemStyle()); // Only cartesian2d support borderRadius.\n\n      if (coord.type === 'cartesian2d') {\n        bgEl.setShape('r', barBorderRadius);\n      }\n\n      bgEls[dataIndex] = bgEl;\n      return bgEl;\n    };\n\n    data.diff(oldData).add(function (dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n\n      if (drawBackground) {\n        createBackground(dataIndex);\n      } // If dataZoom in filteMode: 'empty', the baseValue can be set as NaN in \"axisProxy\".\n\n\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      if (needsClip) {\n        // Clip will modify the layout params.\n        // And return a boolean to determine if the shape are fully clipped.\n        var isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n          return;\n        }\n      }\n\n      var el = elementCreator[coord.type](dataIndex, layout, isHorizontalOrRadial, animationModel, false, roundCap);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (drawBackground) {\n        var bgEl;\n\n        if (oldBgEls.length === 0) {\n          bgEl = createBackground(oldIndex);\n        } else {\n          bgEl = oldBgEls[oldIndex];\n          bgEl.useStyle(backgroundModel.getBarItemStyle()); // Only cartesian2d support borderRadius.\n\n          if (coord.type === 'cartesian2d') {\n            bgEl.setShape('r', barBorderRadius);\n          }\n\n          bgEls[newIndex] = bgEl;\n        }\n\n        var bgLayout = getLayout[coord.type](data, newIndex);\n        var shape = createBackgroundShape(isHorizontalOrRadial, bgLayout, coord);\n        graphic.updateProps(bgEl, {\n          shape: shape\n        }, animationModel, newIndex);\n      }\n\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      if (needsClip) {\n        var isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n          return;\n        }\n      }\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](newIndex, layout, isHorizontalOrRadial, animationModel, true, roundCap);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    var bgGroup = this._backgroundGroup || (this._backgroundGroup = new Group());\n    bgGroup.removeAll();\n\n    for (var i = 0; i < bgEls.length; ++i) {\n      bgGroup.add(bgEls[i]);\n    }\n\n    group.add(bgGroup);\n    this._backgroundEls = bgEls;\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group); // Use clipPath in large mode.\n\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    this._removeBackground();\n\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      this._removeBackground();\n\n      this._backgroundEls = [];\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  },\n  _removeBackground: function () {\n    this.group.remove(this._backgroundGroup);\n    this._backgroundGroup = null;\n  }\n});\n\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar clip = {\n  cartesian2d: function (coordSysBoundingRect, layout) {\n    var signWidth = layout.width < 0 ? -1 : 1;\n    var signHeight = layout.height < 0 ? -1 : 1; // Needs positive width and height\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\n    var x2 = mathMin(layout.x + layout.width, coordSysBoundingRect.x + coordSysBoundingRect.width);\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\n    var y2 = mathMin(layout.y + layout.height, coordSysBoundingRect.y + coordSysBoundingRect.height);\n    layout.x = x;\n    layout.y = y;\n    layout.width = x2 - x;\n    layout.height = y2 - y;\n    var clipped = layout.width < 0 || layout.height < 0; // Reverse back\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    return clipped;\n  },\n  polar: function (coordSysClipArea, layout) {\n    var signR = layout.r0 <= layout.r ? 1 : -1; // Make sure r is larger than r0\n\n    if (signR < 0) {\n      var r = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = r;\n    }\n\n    var r = mathMin(layout.r, coordSysClipArea.r);\n    var r0 = mathMax(layout.r0, coordSysClipArea.r0);\n    layout.r = r;\n    layout.r0 = r0;\n    var clipped = r - r0 < 0; // Reverse back\n\n    if (signR < 0) {\n      var r = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = r;\n    }\n\n    return clipped;\n  }\n};\nvar elementCreator = {\n  cartesian2d: function (dataIndex, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout),\n      z2: 1\n    });\n    rect.name = 'item'; // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (dataIndex, layout, isRadial, animationModel, isUpdate, roundCap) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var ShapeClass = !isRadial && roundCap ? Sausage : graphic.Sector;\n    var sector = new ShapeClass({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout),\n      z2: 1\n    });\n    sector.name = 'item'; // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  // itemModel is only used to get borderWidth, which is not needed\n  // when calculating bar background layout.\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = itemModel ? getLineWidth(itemModel, layout) : 0; // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction isZeroOnPolar(layout) {\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\n}\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var stroke = data.getVisual('borderColor');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    stroke: isZeroOnPolar(layout) ? 'none' : stroke,\n    fill: isZeroOnPolar(layout) ? 'none' : color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  if (isZeroOnPolar(layout)) {\n    hoverStyle.fill = hoverStyle.stroke = 'none';\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0; // width or height may be NaN for empty data\n\n  var width = isNaN(rawLayout.width) ? Number.MAX_VALUE : Math.abs(rawLayout.width);\n  var height = isNaN(rawLayout.height) ? Number.MAX_VALUE : Math.abs(rawLayout.height);\n  return Math.min(lineWidth, width, height);\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var baseDimIdx = this.__baseDimIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - baseDimIdx] = data.getLayout('valueAxisStart');\n  var largeDataIndices = data.getLayout('largeDataIndices');\n  var barWidth = data.getLayout('barWidth');\n  var backgroundModel = seriesModel.getModel('backgroundStyle');\n  var drawBackground = seriesModel.get('showBackground', true);\n\n  if (drawBackground) {\n    var points = data.getLayout('largeBackgroundPoints');\n    var backgroundStartPoint = [];\n    backgroundStartPoint[1 - baseDimIdx] = data.getLayout('backgroundStart');\n    var bgEl = new LargePath({\n      shape: {\n        points: points\n      },\n      incremental: !!incremental,\n      __startPoint: backgroundStartPoint,\n      __baseDimIdx: baseDimIdx,\n      __largeDataIndices: largeDataIndices,\n      __barWidth: barWidth,\n      silent: true,\n      z2: 0\n    });\n    setLargeBackgroundStyle(bgEl, backgroundModel, data);\n    group.add(bgEl);\n  }\n\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __baseDimIdx: baseDimIdx,\n    __largeDataIndices: largeDataIndices,\n    __barWidth: barWidth\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data); // Enable tooltip and user mouse/touch event handlers.\n\n  el.seriesIndex = seriesModel.seriesIndex;\n\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n} // Use throttle to avoid frequently traverse to find dataIndex.\n\n\nvar largePathUpdateDataIndex = throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  largePath.dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\n\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.__baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.__largeDataIndices;\n  var barWidthHalf = Math.abs(largePath.__barWidth / 2);\n  var startValueVal = largePath.__startPoint[valueDimIdx];\n  _eventPos[0] = x;\n  _eventPos[1] = y;\n  var pointerBaseVal = _eventPos[baseDimIdx];\n  var pointerValueVal = _eventPos[1 - baseDimIdx];\n  var baseLowerBound = pointerBaseVal - barWidthHalf;\n  var baseUpperBound = pointerBaseVal + barWidthHalf;\n\n  for (var i = 0, len = points.length / 2; i < len; i++) {\n    var ii = i * 2;\n    var barBaseVal = points[ii + baseDimIdx];\n    var barValueVal = points[ii + valueDimIdx];\n\n    if (barBaseVal >= baseLowerBound && barBaseVal <= baseUpperBound && (startValueVal <= barValueVal ? pointerValueVal >= startValueVal && pointerValueVal <= barValueVal : pointerValueVal >= barValueVal && pointerValueVal <= startValueVal)) {\n      return largeDataIndices[i];\n    }\n  }\n\n  return -1;\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction setLargeBackgroundStyle(el, backgroundModel, data) {\n  var borderColor = backgroundModel.get('borderColor') || backgroundModel.get('color');\n  var itemStyle = backgroundModel.getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction createBackgroundShape(isHorizontalOrRadial, layout, coord) {\n  var coordLayout;\n  var isPolar = coord.type === 'polar';\n\n  if (isPolar) {\n    coordLayout = coord.getArea();\n  } else {\n    coordLayout = coord.grid.getRect();\n  }\n\n  if (isPolar) {\n    return {\n      cx: coordLayout.cx,\n      cy: coordLayout.cy,\n      r0: isHorizontalOrRadial ? coordLayout.r0 : layout.r0,\n      r: isHorizontalOrRadial ? coordLayout.r : layout.r,\n      startAngle: isHorizontalOrRadial ? layout.startAngle : 0,\n      endAngle: isHorizontalOrRadial ? layout.endAngle : Math.PI * 2\n    };\n  } else {\n    return {\n      x: isHorizontalOrRadial ? layout.x : coordLayout.x,\n      y: isHorizontalOrRadial ? coordLayout.y : layout.y,\n      width: isHorizontalOrRadial ? layout.width : coordLayout.width,\n      height: isHorizontalOrRadial ? coordLayout.height : layout.height\n    };\n  }\n}\n\nfunction createBackgroundEl(coord, isHorizontalOrRadial, layout) {\n  var ElementClz = coord.type === 'polar' ? graphic.Sector : graphic.Rect;\n  return new ElementClz({\n    shape: createBackgroundShape(isHorizontalOrRadial, layout, coord),\n    silent: true,\n    z2: 0\n  });\n}\n\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}