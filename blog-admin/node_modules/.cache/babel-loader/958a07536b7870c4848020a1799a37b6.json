{"ast":null,"code":"require(\"core-js/modules/esnext.typed-array.find-last.js\");\n\nrequire(\"core-js/modules/esnext.typed-array.find-last-index.js\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\n// TODO Batch by color\n\n\nvar BOOST_SIZE_THRESHOLD = 4;\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null\n  },\n  symbolProxy: null,\n  softClipShape: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      return;\n    }\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  },\n  afterBrush: function (ctx) {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var canBoost = size[0] < BOOST_SIZE_THRESHOLD;\n\n    if (!canBoost) {\n      return;\n    }\n\n    this.setTransform(ctx); // PENDING If style or other canvas status changed?\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    this.restoreTransform(ctx);\n  },\n  findDataIndex: function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n\nlargeSymbolProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {Object} [opt.clipShape]\n */\n\n\nlargeSymbolProto.updateData = function (data, opt) {\n  this.group.removeAll();\n  var symbolEl = new LargeSymbolPath({\n    rectHover: true,\n    cursor: 'default'\n  });\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, false, opt);\n\n  this.group.add(symbolEl);\n  this._incremental = null;\n};\n\nlargeSymbolProto.updateLayout = function (data) {\n  if (this._incremental) {\n    return;\n  }\n\n  var points = data.getLayout('symbolPoints');\n  this.group.eachChild(function (child) {\n    if (child.startIndex != null) {\n      var len = (child.endIndex - child.startIndex) * 2;\n      var byteOffset = child.startIndex * 4 * 2;\n      points = new Float32Array(points.buffer, byteOffset, len);\n    }\n\n    child.setShape('points', points);\n  });\n};\n\nlargeSymbolProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n  // PENDING Incremental data?\n\n\n  if (data.count() > 2e6) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n\nlargeSymbolProto.incrementalUpdate = function (taskParams, data, opt) {\n  var symbolEl;\n\n  if (this._incremental) {\n    symbolEl = new LargeSymbolPath();\n\n    this._incremental.addDisplayable(symbolEl, true);\n  } else {\n    symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default',\n      startIndex: taskParams.start,\n      endIndex: taskParams.end\n    });\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, !!this._incremental, opt);\n};\n\nlargeSymbolProto._setCommon = function (symbolEl, data, isIncremental, opt) {\n  var hostModel = data.hostModel;\n  opt = opt || {}; // TODO\n  // if (data.hasItemVisual.symbolSize) {\n  //     // TODO typed array?\n  //     symbolEl.setShape('sizes', data.mapArray(\n  //         function (idx) {\n  //             var size = data.getItemVisual(idx, 'symbolSize');\n  //             return (size instanceof Array) ? size : [size, size];\n  //         }\n  //     ));\n  // }\n  // else {\n\n  var size = data.getVisual('symbolSize');\n  symbolEl.setShape('size', size instanceof Array ? size : [size, size]); // }\n\n  symbolEl.softClipShape = opt.clipShape || null; // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n  symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n  hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  }\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    symbolEl.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      symbolEl.dataIndex = null;\n      var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        symbolEl.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  }\n};\n\nlargeSymbolProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeSymbolProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;","map":{"version":3,"names":["graphic","require","_symbol","createSymbol","IncrementalDisplayable","BOOST_SIZE_THRESHOLD","LargeSymbolPath","extendShape","shape","points","symbolProxy","softClipShape","buildPath","path","size","symbolProxyShape","ctx","getContext","canBoost","i","length","x","y","isNaN","contain","width","height","afterBrush","setTransform","fillRect","restoreTransform","findDataIndex","w","Math","max","h","idx","x0","y0","LargeSymbolDraw","group","Group","largeSymbolProto","prototype","isPersistent","_incremental","updateData","data","opt","removeAll","symbolEl","rectHover","cursor","setShape","getLayout","_setCommon","add","updateLayout","eachChild","child","startIndex","len","endIndex","byteOffset","Float32Array","buffer","incrementalPrepareUpdate","_clearIncremental","count","silent","incrementalUpdate","taskParams","addDisplayable","start","end","incremental","isIncremental","hostModel","getVisual","Array","clipShape","setColor","extrudeShadow","useStyle","getModel","getItemStyle","visualColor","seriesIndex","on","e","dataIndex","offsetX","offsetY","remove","clearDisplaybles","_default","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-admin/node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\n// TODO Batch by color\nvar BOOST_SIZE_THRESHOLD = 4;\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null\n  },\n  symbolProxy: null,\n  softClipShape: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      return;\n    }\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  },\n  afterBrush: function (ctx) {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var canBoost = size[0] < BOOST_SIZE_THRESHOLD;\n\n    if (!canBoost) {\n      return;\n    }\n\n    this.setTransform(ctx); // PENDING If style or other canvas status changed?\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    this.restoreTransform(ctx);\n  },\n  findDataIndex: function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n\nlargeSymbolProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {Object} [opt.clipShape]\n */\n\n\nlargeSymbolProto.updateData = function (data, opt) {\n  this.group.removeAll();\n  var symbolEl = new LargeSymbolPath({\n    rectHover: true,\n    cursor: 'default'\n  });\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, false, opt);\n\n  this.group.add(symbolEl);\n  this._incremental = null;\n};\n\nlargeSymbolProto.updateLayout = function (data) {\n  if (this._incremental) {\n    return;\n  }\n\n  var points = data.getLayout('symbolPoints');\n  this.group.eachChild(function (child) {\n    if (child.startIndex != null) {\n      var len = (child.endIndex - child.startIndex) * 2;\n      var byteOffset = child.startIndex * 4 * 2;\n      points = new Float32Array(points.buffer, byteOffset, len);\n    }\n\n    child.setShape('points', points);\n  });\n};\n\nlargeSymbolProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n  // PENDING Incremental data?\n\n\n  if (data.count() > 2e6) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n\nlargeSymbolProto.incrementalUpdate = function (taskParams, data, opt) {\n  var symbolEl;\n\n  if (this._incremental) {\n    symbolEl = new LargeSymbolPath();\n\n    this._incremental.addDisplayable(symbolEl, true);\n  } else {\n    symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default',\n      startIndex: taskParams.start,\n      endIndex: taskParams.end\n    });\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, !!this._incremental, opt);\n};\n\nlargeSymbolProto._setCommon = function (symbolEl, data, isIncremental, opt) {\n  var hostModel = data.hostModel;\n  opt = opt || {}; // TODO\n  // if (data.hasItemVisual.symbolSize) {\n  //     // TODO typed array?\n  //     symbolEl.setShape('sizes', data.mapArray(\n  //         function (idx) {\n  //             var size = data.getItemVisual(idx, 'symbolSize');\n  //             return (size instanceof Array) ? size : [size, size];\n  //         }\n  //     ));\n  // }\n  // else {\n\n  var size = data.getVisual('symbolSize');\n  symbolEl.setShape('size', size instanceof Array ? size : [size, size]); // }\n\n  symbolEl.softClipShape = opt.clipShape || null; // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n  symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n  hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  }\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    symbolEl.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      symbolEl.dataIndex = null;\n      var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        symbolEl.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  }\n};\n\nlargeSymbolProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeSymbolProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}