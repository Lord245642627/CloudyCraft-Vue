{"ast":null,"code":"import { intersectCircle } from './intersect/intersect-circle.js';\nimport { intersectEllipse } from './intersect/intersect-ellipse.js';\nimport { intersectPolygon } from './intersect/intersect-polygon.js';\nimport { intersectRect } from './intersect/intersect-rect.js';\nexport { shapes, setShapes };\nvar shapes = {\n  rect,\n  ellipse,\n  circle,\n  diamond\n};\n\nfunction setShapes(value) {\n  shapes = value;\n}\n\nfunction rect(parent, bbox, node) {\n  var shapeSvg = parent.insert('rect', ':first-child').attr('rx', node.rx).attr('ry', node.ry).attr('x', -bbox.width / 2).attr('y', -bbox.height / 2).attr('width', bbox.width).attr('height', bbox.height);\n\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction ellipse(parent, bbox, node) {\n  var rx = bbox.width / 2;\n  var ry = bbox.height / 2;\n  var shapeSvg = parent.insert('ellipse', ':first-child').attr('x', -bbox.width / 2).attr('y', -bbox.height / 2).attr('rx', rx).attr('ry', ry);\n\n  node.intersect = function (point) {\n    return intersectEllipse(node, rx, ry, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction circle(parent, bbox, node) {\n  var r = Math.max(bbox.width, bbox.height) / 2;\n  var shapeSvg = parent.insert('circle', ':first-child').attr('x', -bbox.width / 2).attr('y', -bbox.height / 2).attr('r', r);\n\n  node.intersect = function (point) {\n    return intersectCircle(node, r, point);\n  };\n\n  return shapeSvg;\n} // Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\n\n\nfunction diamond(parent, bbox, node) {\n  var w = bbox.width * Math.SQRT2 / 2;\n  var h = bbox.height * Math.SQRT2 / 2;\n  var points = [{\n    x: 0,\n    y: -h\n  }, {\n    x: -w,\n    y: 0\n  }, {\n    x: 0,\n    y: h\n  }, {\n    x: w,\n    y: 0\n  }];\n  var shapeSvg = parent.insert('polygon', ':first-child').attr('points', points.map(function (p) {\n    return p.x + ',' + p.y;\n  }).join(' '));\n\n  node.intersect = function (p) {\n    return intersectPolygon(node, points, p);\n  };\n\n  return shapeSvg;\n}","map":{"version":3,"names":["intersectCircle","intersectEllipse","intersectPolygon","intersectRect","shapes","setShapes","rect","ellipse","circle","diamond","value","parent","bbox","node","shapeSvg","insert","attr","rx","ry","width","height","intersect","point","r","Math","max","w","SQRT2","h","points","x","y","map","p","join"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-admin/node_modules/dagre-d3-es/src/dagre-js/shapes.js"],"sourcesContent":["import { intersectCircle } from './intersect/intersect-circle.js';\nimport { intersectEllipse } from './intersect/intersect-ellipse.js';\nimport { intersectPolygon } from './intersect/intersect-polygon.js';\nimport { intersectRect } from './intersect/intersect-rect.js';\n\nexport { shapes, setShapes };\n\nvar shapes = {\n  rect,\n  ellipse,\n  circle,\n  diamond,\n};\n\nfunction setShapes(value) {\n  shapes = value;\n}\n\nfunction rect(parent, bbox, node) {\n  var shapeSvg = parent\n    .insert('rect', ':first-child')\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('width', bbox.width)\n    .attr('height', bbox.height);\n\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction ellipse(parent, bbox, node) {\n  var rx = bbox.width / 2;\n  var ry = bbox.height / 2;\n  var shapeSvg = parent\n    .insert('ellipse', ':first-child')\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('rx', rx)\n    .attr('ry', ry);\n\n  node.intersect = function (point) {\n    return intersectEllipse(node, rx, ry, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction circle(parent, bbox, node) {\n  var r = Math.max(bbox.width, bbox.height) / 2;\n  var shapeSvg = parent\n    .insert('circle', ':first-child')\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('r', r);\n\n  node.intersect = function (point) {\n    return intersectCircle(node, r, point);\n  };\n\n  return shapeSvg;\n}\n\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\nfunction diamond(parent, bbox, node) {\n  var w = (bbox.width * Math.SQRT2) / 2;\n  var h = (bbox.height * Math.SQRT2) / 2;\n  var points = [\n    { x: 0, y: -h },\n    { x: -w, y: 0 },\n    { x: 0, y: h },\n    { x: w, y: 0 },\n  ];\n  var shapeSvg = parent.insert('polygon', ':first-child').attr(\n    'points',\n    points\n      .map(function (p) {\n        return p.x + ',' + p.y;\n      })\n      .join(' ')\n  );\n\n  node.intersect = function (p) {\n    return intersectPolygon(node, points, p);\n  };\n\n  return shapeSvg;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}