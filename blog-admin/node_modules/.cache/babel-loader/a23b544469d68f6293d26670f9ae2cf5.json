{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar selector = require(\"./selector\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n  });\n  layoutCovers(ecModel);\n});\n\nfunction layoutCovers(ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n}\n/**\n * Register the visual encoding if this modules required.\n */\n\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}\n\nexports.layoutCovers = layoutCovers;","map":{"version":3,"names":["echarts","require","zrUtil","BoundingRect","visualSolution","selector","throttleUtil","BrushTargetManager","STATE_LIST","DISPATCH_METHOD","DISPATCH_FLAG","PRIORITY_BRUSH","PRIORITY","VISUAL","BRUSH","registerLayout","ecModel","api","payload","eachComponent","mainType","brushModel","type","setBrushOption","key","brushOption","brushType","layoutCovers","brushTargetManager","option","setInputRanges","areas","registerVisual","brushSelected","throttleType","throttleDelay","brushIndex","thisBrushSelected","brushId","id","brushName","name","clone","selected","push","brushLink","linkedSeriesMap","selectedDataIndexForLink","rangeInfoBySeries","hasBrushExists","map","area","bindSelector","defaults","boundingRect","boundingRectBuilders","visualMappings","createVisualMappings","mappingOption","mappingMethod","isArray","each","seriesIndex","linkOthers","brushed","rangeInfoList","length","eachSeries","seriesModel","subType","stepAParallel","stepAOthers","coordSys","coordinateSystem","hasAxisBrushed","eachActiveState","getData","activeState","dataIndex","selectorsByBrushType","getSelectorsByBrushType","brushModelNotControll","controlSeries","data","checkInRange","seriesBrushSelected","seriesId","seriesName","getValueState","getRawIndex","applyVisual","dispatchAction","zr","getZr","doDispatch","fn","createOrUpdate","isDisposed","batch","i","len","selectors","brushSelector","isString","sels","selectorsByElementType","itemLayout","getItemLayout","isFunction","bSelector","sel","seriesIndices","indexOf","selFn","elType","lineX","noop","lineY","rect","getBoundingRectFromMinMax","range","polygon","minMax","Infinity","rg","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/cloudycraft-vue/blog-admin/node_modules/echarts/lib/component/brush/visualEncoding.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar selector = require(\"./selector\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n  });\n  layoutCovers(ecModel);\n});\n\nfunction layoutCovers(ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n}\n/**\n * Register the visual encoding if this modules required.\n */\n\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}\n\nexports.layoutCovers = layoutCovers;"],"mappings":"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"},"metadata":{},"sourceType":"script"}