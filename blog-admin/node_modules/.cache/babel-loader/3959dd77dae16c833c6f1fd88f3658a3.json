{"ast":null,"code":"import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\nimport { addBorderSegments } from './add-border-segments.js';\nimport * as coordinateSystem from './coordinate-system.js';\nimport * as acyclic from './acyclic.js';\nimport * as normalize from './normalize.js';\nimport { rank } from './rank/index.js';\nimport * as nestingGraph from './nesting-graph.js';\nimport { order } from './order/index.js';\nimport { parentDummyChains } from './parent-dummy-chains.js';\nimport { position } from './position/index.js';\nimport * as util from './util.js';\nexport { layout };\n\nfunction layout(g, opts) {\n  var time = opts && opts.debugTiming ? util.time : util.notime;\n  time('layout', function () {\n    var layoutGraph = time('  buildLayoutGraph', function () {\n      return buildLayoutGraph(g);\n    });\n    time('  runLayout', function () {\n      runLayout(layoutGraph, time);\n    });\n    time('  updateInputGraph', function () {\n      updateInputGraph(g, layoutGraph);\n    });\n  });\n}\n\nfunction runLayout(g, time) {\n  time('    makeSpaceForEdgeLabels', function () {\n    makeSpaceForEdgeLabels(g);\n  });\n  time('    removeSelfEdges', function () {\n    removeSelfEdges(g);\n  });\n  time('    acyclic', function () {\n    acyclic.run(g);\n  });\n  time('    nestingGraph.run', function () {\n    nestingGraph.run(g);\n  });\n  time('    rank', function () {\n    rank(util.asNonCompoundGraph(g));\n  });\n  time('    injectEdgeLabelProxies', function () {\n    injectEdgeLabelProxies(g);\n  });\n  time('    removeEmptyRanks', function () {\n    util.removeEmptyRanks(g);\n  });\n  time('    nestingGraph.cleanup', function () {\n    nestingGraph.cleanup(g);\n  });\n  time('    normalizeRanks', function () {\n    util.normalizeRanks(g);\n  });\n  time('    assignRankMinMax', function () {\n    assignRankMinMax(g);\n  });\n  time('    removeEdgeLabelProxies', function () {\n    removeEdgeLabelProxies(g);\n  });\n  time('    normalize.run', function () {\n    normalize.run(g);\n  });\n  time('    parentDummyChains', function () {\n    parentDummyChains(g);\n  });\n  time('    addBorderSegments', function () {\n    addBorderSegments(g);\n  });\n  time('    order', function () {\n    order(g);\n  });\n  time('    insertSelfEdges', function () {\n    insertSelfEdges(g);\n  });\n  time('    adjustCoordinateSystem', function () {\n    coordinateSystem.adjust(g);\n  });\n  time('    position', function () {\n    position(g);\n  });\n  time('    positionSelfEdges', function () {\n    positionSelfEdges(g);\n  });\n  time('    removeBorderNodes', function () {\n    removeBorderNodes(g);\n  });\n  time('    normalize.undo', function () {\n    normalize.undo(g);\n  });\n  time('    fixupEdgeLabelCoords', function () {\n    fixupEdgeLabelCoords(g);\n  });\n  time('    undoCoordinateSystem', function () {\n    coordinateSystem.undo(g);\n  });\n  time('    translateGraph', function () {\n    translateGraph(g);\n  });\n  time('    assignNodeIntersects', function () {\n    assignNodeIntersects(g);\n  });\n  time('    reversePoints', function () {\n    reversePointsForReversedEdges(g);\n  });\n  time('    acyclic.undo', function () {\n    acyclic.undo(g);\n  });\n}\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\n\n\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _.forEach(inputGraph.nodes(), function (v) {\n    var inputLabel = inputGraph.node(v);\n    var layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var inputLabel = inputGraph.edge(e);\n    var layoutLabel = layoutGraph.edge(e);\n    inputLabel.points = layoutLabel.points;\n\n    if (_.has(layoutLabel, 'x')) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = ['nodesep', 'edgesep', 'ranksep', 'marginx', 'marginy'];\nvar graphDefaults = {\n  ranksep: 50,\n  edgesep: 20,\n  nodesep: 50,\n  rankdir: 'tb'\n};\nvar graphAttrs = ['acyclicer', 'ranker', 'rankdir', 'align'];\nvar nodeNumAttrs = ['width', 'height'];\nvar nodeDefaults = {\n  width: 0,\n  height: 0\n};\nvar edgeNumAttrs = ['minlen', 'weight', 'width', 'height', 'labeloffset'];\nvar edgeDefaults = {\n  minlen: 1,\n  weight: 1,\n  width: 0,\n  height: 0,\n  labeloffset: 10,\n  labelpos: 'r'\n};\nvar edgeAttrs = ['labelpos'];\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\n\nfunction buildLayoutGraph(inputGraph) {\n  var g = new Graph({\n    multigraph: true,\n    compound: true\n  });\n  var graph = canonicalize(inputGraph.graph());\n  g.setGraph(_.merge({}, graphDefaults, selectNumberAttrs(graph, graphNumAttrs), _.pick(graph, graphAttrs)));\n\n  _.forEach(inputGraph.nodes(), function (v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(e, _.merge({}, edgeDefaults, selectNumberAttrs(edge, edgeNumAttrs), _.pick(edge, edgeAttrs)));\n  });\n\n  return g;\n}\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\n\n\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n\n    if (edge.labelpos.toLowerCase() !== 'c') {\n      if (graph.rankdir === 'TB' || graph.rankdir === 'BT') {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\n\n\nfunction injectEdgeLabelProxies(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n\n    if (edge.width && edge.height) {\n      var v = g.node(e.v);\n      var w = g.node(e.w);\n      var label = {\n        rank: (w.rank - v.rank) / 2 + v.rank,\n        e: e\n      };\n      util.addDummyNode(g, 'edge-proxy', label, '_ep');\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank; // @ts-expect-error\n\n      maxRank = _.max(maxRank, node.maxRank);\n    }\n  });\n\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n\n    if (node.dummy === 'edge-proxy') {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY;\n  var maxX = 0;\n  var minY = Number.POSITIVE_INFINITY;\n  var maxY = 0;\n  var graphLabel = g.graph();\n  var marginX = graphLabel.marginx || 0;\n  var marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x;\n    var y = attrs.y;\n    var w = attrs.width;\n    var h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _.forEach(g.nodes(), function (v) {\n    getExtremes(g.node(v));\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n\n    if (_.has(edge, 'x')) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n\n    _.forEach(edge.points, function (p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n\n    if (_.has(edge, 'x')) {\n      edge.x -= minX;\n    }\n\n    if (_.has(edge, 'y')) {\n      edge.y -= minY;\n    }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    var nodeV = g.node(e.v);\n    var nodeW = g.node(e.w);\n    var p1, p2;\n\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n\n    edge.points.unshift(util.intersectRect(nodeV, p1));\n    edge.points.push(util.intersectRect(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n\n    if (_.has(edge, 'x')) {\n      if (edge.labelpos === 'l' || edge.labelpos === 'r') {\n        edge.width -= edge.labeloffset;\n      }\n\n      switch (edge.labelpos) {\n        case 'l':\n          edge.x -= edge.width / 2 + edge.labeloffset;\n          break;\n\n        case 'r':\n          edge.x += edge.width / 2 + edge.labeloffset;\n          break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _.forEach(g.nodes(), function (v) {\n    if (g.children(v).length) {\n      var node = g.node(v);\n      var t = g.node(node.borderTop);\n      var b = g.node(node.borderBottom);\n      var l = g.node(_.last(node.borderLeft));\n      var r = g.node(_.last(node.borderRight));\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _.forEach(g.nodes(), function (v) {\n    if (g.node(v).dummy === 'border') {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n\n      node.selfEdges.push({\n        e: e,\n        label: g.edge(e)\n      });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = util.buildLayerMatrix(g);\n\n  _.forEach(layers, function (layer) {\n    var orderShift = 0;\n\n    _.forEach(layer, function (v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n\n      _.forEach(node.selfEdges, function (selfEdge) {\n        util.addDummyNode(g, 'selfedge', {\n          width: selfEdge.label.width,\n          height: selfEdge.label.height,\n          rank: node.rank,\n          order: i + ++orderShift,\n          e: selfEdge.e,\n          label: selfEdge.label\n        }, '_se');\n      });\n\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n\n    if (node.dummy === 'selfedge') {\n      var selfNode = g.node(node.e.v);\n      var x = selfNode.x + selfNode.width / 2;\n      var y = selfNode.y;\n      var dx = node.x - x;\n      var dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [{\n        x: x + 2 * dx / 3,\n        y: y - dy\n      }, {\n        x: x + 5 * dx / 6,\n        y: y - dy\n      }, {\n        x: x + dx,\n        y: y\n      }, {\n        x: x + 5 * dx / 6,\n        y: y + dy\n      }, {\n        x: x + 2 * dx / 3,\n        y: y + dy\n      }];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _.mapValues(_.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n\n  _.forEach(attrs, function (v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n\n  return newAttrs;\n}","map":{"version":3,"names":["_","Graph","addBorderSegments","coordinateSystem","acyclic","normalize","rank","nestingGraph","order","parentDummyChains","position","util","layout","g","opts","time","debugTiming","notime","layoutGraph","buildLayoutGraph","runLayout","updateInputGraph","makeSpaceForEdgeLabels","removeSelfEdges","run","asNonCompoundGraph","injectEdgeLabelProxies","removeEmptyRanks","cleanup","normalizeRanks","assignRankMinMax","removeEdgeLabelProxies","insertSelfEdges","adjust","positionSelfEdges","removeBorderNodes","undo","fixupEdgeLabelCoords","translateGraph","assignNodeIntersects","reversePointsForReversedEdges","inputGraph","forEach","nodes","v","inputLabel","node","layoutLabel","x","y","children","length","width","height","edges","e","edge","points","has","graph","graphNumAttrs","graphDefaults","ranksep","edgesep","nodesep","rankdir","graphAttrs","nodeNumAttrs","nodeDefaults","edgeNumAttrs","edgeDefaults","minlen","weight","labeloffset","labelpos","edgeAttrs","multigraph","compound","canonicalize","setGraph","merge","selectNumberAttrs","pick","setNode","defaults","setParent","parent","setEdge","toLowerCase","w","label","addDummyNode","maxRank","borderTop","minRank","borderBottom","max","dummy","labelRank","removeNode","minX","Number","POSITIVE_INFINITY","maxX","minY","maxY","graphLabel","marginX","marginx","marginY","marginy","getExtremes","attrs","h","Math","min","p","nodeV","nodeW","p1","p2","unshift","intersectRect","push","reversed","reverse","t","b","l","last","borderLeft","r","borderRight","abs","selfEdges","removeEdge","layers","buildLayerMatrix","layer","orderShift","i","selfEdge","selfNode","dx","dy","obj","mapValues","newAttrs","k"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-admin/node_modules/dagre-d3-es/src/dagre/layout.js"],"sourcesContent":["import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\nimport { addBorderSegments } from './add-border-segments.js';\nimport * as coordinateSystem from './coordinate-system.js';\nimport * as acyclic from './acyclic.js';\nimport * as normalize from './normalize.js';\nimport { rank } from './rank/index.js';\nimport * as nestingGraph from './nesting-graph.js';\nimport { order } from './order/index.js';\nimport { parentDummyChains } from './parent-dummy-chains.js';\nimport { position } from './position/index.js';\nimport * as util from './util.js';\n\nexport { layout };\n\nfunction layout(g, opts) {\n  var time = opts && opts.debugTiming ? util.time : util.notime;\n  time('layout', function () {\n    var layoutGraph = time('  buildLayoutGraph', function () {\n      return buildLayoutGraph(g);\n    });\n    time('  runLayout', function () {\n      runLayout(layoutGraph, time);\n    });\n    time('  updateInputGraph', function () {\n      updateInputGraph(g, layoutGraph);\n    });\n  });\n}\n\nfunction runLayout(g, time) {\n  time('    makeSpaceForEdgeLabels', function () {\n    makeSpaceForEdgeLabels(g);\n  });\n  time('    removeSelfEdges', function () {\n    removeSelfEdges(g);\n  });\n  time('    acyclic', function () {\n    acyclic.run(g);\n  });\n  time('    nestingGraph.run', function () {\n    nestingGraph.run(g);\n  });\n  time('    rank', function () {\n    rank(util.asNonCompoundGraph(g));\n  });\n  time('    injectEdgeLabelProxies', function () {\n    injectEdgeLabelProxies(g);\n  });\n  time('    removeEmptyRanks', function () {\n    util.removeEmptyRanks(g);\n  });\n  time('    nestingGraph.cleanup', function () {\n    nestingGraph.cleanup(g);\n  });\n  time('    normalizeRanks', function () {\n    util.normalizeRanks(g);\n  });\n  time('    assignRankMinMax', function () {\n    assignRankMinMax(g);\n  });\n  time('    removeEdgeLabelProxies', function () {\n    removeEdgeLabelProxies(g);\n  });\n  time('    normalize.run', function () {\n    normalize.run(g);\n  });\n  time('    parentDummyChains', function () {\n    parentDummyChains(g);\n  });\n  time('    addBorderSegments', function () {\n    addBorderSegments(g);\n  });\n  time('    order', function () {\n    order(g);\n  });\n  time('    insertSelfEdges', function () {\n    insertSelfEdges(g);\n  });\n  time('    adjustCoordinateSystem', function () {\n    coordinateSystem.adjust(g);\n  });\n  time('    position', function () {\n    position(g);\n  });\n  time('    positionSelfEdges', function () {\n    positionSelfEdges(g);\n  });\n  time('    removeBorderNodes', function () {\n    removeBorderNodes(g);\n  });\n  time('    normalize.undo', function () {\n    normalize.undo(g);\n  });\n  time('    fixupEdgeLabelCoords', function () {\n    fixupEdgeLabelCoords(g);\n  });\n  time('    undoCoordinateSystem', function () {\n    coordinateSystem.undo(g);\n  });\n  time('    translateGraph', function () {\n    translateGraph(g);\n  });\n  time('    assignNodeIntersects', function () {\n    assignNodeIntersects(g);\n  });\n  time('    reversePoints', function () {\n    reversePointsForReversedEdges(g);\n  });\n  time('    acyclic.undo', function () {\n    acyclic.undo(g);\n  });\n}\n\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _.forEach(inputGraph.nodes(), function (v) {\n    var inputLabel = inputGraph.node(v);\n    var layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var inputLabel = inputGraph.edge(e);\n    var layoutLabel = layoutGraph.edge(e);\n\n    inputLabel.points = layoutLabel.points;\n    if (_.has(layoutLabel, 'x')) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = ['nodesep', 'edgesep', 'ranksep', 'marginx', 'marginy'];\nvar graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: 'tb' };\nvar graphAttrs = ['acyclicer', 'ranker', 'rankdir', 'align'];\nvar nodeNumAttrs = ['width', 'height'];\nvar nodeDefaults = { width: 0, height: 0 };\nvar edgeNumAttrs = ['minlen', 'weight', 'width', 'height', 'labeloffset'];\nvar edgeDefaults = {\n  minlen: 1,\n  weight: 1,\n  width: 0,\n  height: 0,\n  labeloffset: 10,\n  labelpos: 'r',\n};\nvar edgeAttrs = ['labelpos'];\n\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction buildLayoutGraph(inputGraph) {\n  var g = new Graph({ multigraph: true, compound: true });\n  var graph = canonicalize(inputGraph.graph());\n\n  g.setGraph(\n    _.merge({}, graphDefaults, selectNumberAttrs(graph, graphNumAttrs), _.pick(graph, graphAttrs))\n  );\n\n  _.forEach(inputGraph.nodes(), function (v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(\n      e,\n      _.merge({}, edgeDefaults, selectNumberAttrs(edge, edgeNumAttrs), _.pick(edge, edgeAttrs))\n    );\n  });\n\n  return g;\n}\n\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n    if (edge.labelpos.toLowerCase() !== 'c') {\n      if (graph.rankdir === 'TB' || graph.rankdir === 'BT') {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\nfunction injectEdgeLabelProxies(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.width && edge.height) {\n      var v = g.node(e.v);\n      var w = g.node(e.w);\n      var label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n      util.addDummyNode(g, 'edge-proxy', label, '_ep');\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      // @ts-expect-error\n      maxRank = _.max(maxRank, node.maxRank);\n    }\n  });\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'edge-proxy') {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY;\n  var maxX = 0;\n  var minY = Number.POSITIVE_INFINITY;\n  var maxY = 0;\n  var graphLabel = g.graph();\n  var marginX = graphLabel.marginx || 0;\n  var marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x;\n    var y = attrs.y;\n    var w = attrs.width;\n    var h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _.forEach(g.nodes(), function (v) {\n    getExtremes(g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (_.has(edge, 'x')) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, function (p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n    if (_.has(edge, 'x')) {\n      edge.x -= minX;\n    }\n    if (_.has(edge, 'y')) {\n      edge.y -= minY;\n    }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    var nodeV = g.node(e.v);\n    var nodeW = g.node(e.w);\n    var p1, p2;\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n    edge.points.unshift(util.intersectRect(nodeV, p1));\n    edge.points.push(util.intersectRect(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (_.has(edge, 'x')) {\n      if (edge.labelpos === 'l' || edge.labelpos === 'r') {\n        edge.width -= edge.labeloffset;\n      }\n      switch (edge.labelpos) {\n        case 'l':\n          edge.x -= edge.width / 2 + edge.labeloffset;\n          break;\n        case 'r':\n          edge.x += edge.width / 2 + edge.labeloffset;\n          break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _.forEach(g.nodes(), function (v) {\n    if (g.children(v).length) {\n      var node = g.node(v);\n      var t = g.node(node.borderTop);\n      var b = g.node(node.borderBottom);\n      var l = g.node(_.last(node.borderLeft));\n      var r = g.node(_.last(node.borderRight));\n\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _.forEach(g.nodes(), function (v) {\n    if (g.node(v).dummy === 'border') {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n      node.selfEdges.push({ e: e, label: g.edge(e) });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = util.buildLayerMatrix(g);\n  _.forEach(layers, function (layer) {\n    var orderShift = 0;\n    _.forEach(layer, function (v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n      _.forEach(node.selfEdges, function (selfEdge) {\n        util.addDummyNode(\n          g,\n          'selfedge',\n          {\n            width: selfEdge.label.width,\n            height: selfEdge.label.height,\n            rank: node.rank,\n            order: i + ++orderShift,\n            e: selfEdge.e,\n            label: selfEdge.label,\n          },\n          '_se'\n        );\n      });\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'selfedge') {\n      var selfNode = g.node(node.e.v);\n      var x = selfNode.x + selfNode.width / 2;\n      var y = selfNode.y;\n      var dx = node.x - x;\n      var dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [\n        { x: x + (2 * dx) / 3, y: y - dy },\n        { x: x + (5 * dx) / 6, y: y - dy },\n        { x: x + dx, y: y },\n        { x: x + (5 * dx) / 6, y: y + dy },\n        { x: x + (2 * dx) / 3, y: y + dy },\n      ];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _.mapValues(_.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n  _.forEach(attrs, function (v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n  return newAttrs;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}