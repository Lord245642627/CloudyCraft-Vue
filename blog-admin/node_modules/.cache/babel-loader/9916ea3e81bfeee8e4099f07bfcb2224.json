{"ast":null,"code":"var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\n\n\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.3.2';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} [opts]\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot(), painter.root) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Set background color\n   * @param {string} backgroundColor\n   */\n  setBackgroundColor: function (backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = this._needsRefreshHover = false;\n    this.painter.refresh(); // Avoid trigger zr.refresh in Element#beforeUpdate hook\n\n    this._needsRefresh = this._needsRefreshHover = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    var triggerRendered;\n\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n\n    triggerRendered && this.trigger('rendered');\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      var elMirror = this.painter.addHover(el, style);\n      this.refreshHover();\n      return elMirror;\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;","map":{"version":3,"names":["guid","require","env","zrUtil","Handler","Storage","Painter","Animation","HandlerProxy","useVML","canvasSupported","painterCtors","canvas","instances","version","init","dom","opts","zr","ZRender","id","dispose","key","hasOwnProperty","getInstance","registerPainter","name","Ctor","delInstance","self","storage","rendererType","renderer","vml","Error","painter","handerProxy","node","worker","getViewportRoot","root","handler","animation","stage","update","bind","flush","start","_needsRefresh","oldDelFromStorage","delFromStorage","oldAddToStorage","addToStorage","el","call","removeSelfFromZr","addSelfToZr","prototype","constructor","getId","add","addRoot","remove","delRoot","configLayer","zLevel","config","setBackgroundColor","backgroundColor","refreshImmediately","_needsRefreshHover","refresh","triggerRendered","refreshHoverImmediately","trigger","addHover","style","elMirror","refreshHover","removeHover","clearHover","resize","width","height","clearAnimation","clear","getWidth","getHeight","pathToImage","e","dpr","setCursorStyle","cursorStyle","findHover","x","y","on","eventName","eventHandler","context","off","event","stop","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-admin/node_modules/zrender/lib/zrender.js"],"sourcesContent":["var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.3.2';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} [opts]\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot(), painter.root) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Set background color\n   * @param {string} backgroundColor\n   */\n  setBackgroundColor: function (backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = this._needsRefreshHover = false;\n    this.painter.refresh(); // Avoid trigger zr.refresh in Element#beforeUpdate hook\n\n    this._needsRefresh = this._needsRefreshHover = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    var triggerRendered;\n\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n\n    triggerRendered && this.trigger('rendered');\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      var elMirror = this.painter.addHover(el, style);\n      this.refreshHover();\n      return elMirror;\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;"],"mappings":"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"},"metadata":{},"sourceType":"script"}