{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function (value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null || isNaN(value)) {\n      return 'inactive';\n    } // Simple optimization\n\n\n    if (activeIntervals.length === 1) {\n      var interval = activeIntervals[0];\n\n      if (interval[0] <= value && value <= interval[1]) {\n        return 'active';\n      }\n    } else {\n      for (var i = 0, len = activeIntervals.length; i < len; i++) {\n        if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n          return 'active';\n        }\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","map":{"version":3,"names":["zrUtil","require","ComponentModel","makeStyleMapper","axisModelCreator","numberUtil","axisModelCommonMixin","AxisModel","extend","type","axis","activeIntervals","getAreaSelectStyle","getModel","setActiveIntervals","intervals","clone","i","length","asc","getActiveState","value","isNaN","interval","len","defaultOption","dim","areaSelectStyle","width","borderWidth","borderColor","color","opacity","realtime","z","merge","prototype","getAxisType","axisName","option","data","_default","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-admin/node_modules/echarts/lib/coord/parallel/AxisModel.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function (value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null || isNaN(value)) {\n      return 'inactive';\n    } // Simple optimization\n\n\n    if (activeIntervals.length === 1) {\n      var interval = activeIntervals[0];\n\n      if (interval[0] <= value && value <= interval[1]) {\n        return 'active';\n      }\n    } else {\n      for (var i = 0, len = activeIntervals.length; i < len; i++) {\n        if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n          return 'active';\n        }\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}