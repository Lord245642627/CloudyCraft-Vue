{"ast":null,"code":"import * as imageConversion from 'image-conversion';\nexport default {\n  created() {\n    this.albumId = this.$route.params.albumId;\n\n    if (this.albumId == this.$store.state.pageState.photo.albumId) {\n      this.current = this.$store.state.pageState.photo.current;\n    } else {\n      this.current = 1;\n      this.$store.commit('updatePhotoPageState', {\n        albumId: this.$route.params.albumId,\n        current: this.current\n      });\n    }\n\n    this.getAlbum();\n    this.listAlbums();\n    this.listPhotos();\n  },\n\n  data: function () {\n    return {\n      loading: true,\n      checkAll: false,\n      isIndeterminate: false,\n      uploadPhoto: false,\n      editPhoto: false,\n      movePhoto: false,\n      batchDeletePhoto: false,\n      uploads: [],\n      photos: [],\n      photoIds: [],\n      selectphotoIds: [],\n      albumList: [],\n      album: {\n        id: null,\n        albumName: '',\n        albumInfo: '',\n        albumCover: '',\n        photoCount: 0\n      },\n      photoForm: {\n        id: null,\n        photoName: '',\n        photoInfo: ''\n      },\n      albumId: null,\n      current: 1,\n      size: 18,\n      total: 0,\n      headers: {\n        Authorization: 'Bearer ' + sessionStorage.getItem('token')\n      }\n    };\n  },\n  methods: {\n    getAlbum() {\n      this.axios.get('/api/admin/photos/albums/' + this.$route.params.albumId + '/info').then(({\n        data\n      }) => {\n        this.album = data.data;\n      });\n    },\n\n    listAlbums() {\n      this.axios.get('/api/admin/photos/albums/info').then(({\n        data\n      }) => {\n        this.albumList = data.data;\n      });\n    },\n\n    listPhotos() {\n      this.axios.get('/api/admin/photos', {\n        params: {\n          current: this.current,\n          size: this.size,\n          albumId: this.$route.params.albumId,\n          isDelete: 0\n        }\n      }).then(({\n        data\n      }) => {\n        this.photos = data.data.records;\n        this.total = data.data.total;\n        this.loading = false;\n      });\n    },\n\n    currentChange(current) {\n      this.current = current;\n      this.$store.commit('updatePhotoPageState', {\n        albumId: this.$route.params.albumId,\n        current: this.current\n      });\n      this.listPhotos();\n    },\n\n    savePhotos() {\n      var photoUrls = [];\n      this.uploads.forEach(item => {\n        photoUrls.push(item.url);\n      });\n      this.axios.post('/api/admin/photos', {\n        albumId: this.$route.params.albumId,\n        photoUrls: photoUrls\n      }).then(({\n        data\n      }) => {\n        if (data.code === 0) {\n          this.$notify.success({\n            title: '成功',\n            message: data.message\n          });\n          this.uploads = [];\n          this.listPhotos();\n          this.getAlbum();\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: data.message\n          });\n        }\n      });\n      this.uploadPhoto = false;\n    },\n\n    updatePhoto() {\n      if (this.photoForm.photoName.trim() == '') {\n        this.$message.error('照片名称不能为空');\n        return false;\n      }\n\n      this.axios.put('/api/admin/photos', this.photoForm).then(({\n        data\n      }) => {\n        if (data.code === 0) {\n          this.$notify.success({\n            title: '成功',\n            message: data.message\n          });\n          this.listPhotos();\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: data.message\n          });\n        }\n\n        this.editPhoto = false;\n      });\n    },\n\n    updatePhotoAlbum() {\n      this.axios.put('/api/admin/photos/album', {\n        albumId: this.albumId,\n        photoIds: this.selectphotoIds\n      }).then(({\n        data\n      }) => {\n        if (data.code === 0) {\n          this.$notify.success({\n            title: '成功',\n            message: data.message\n          });\n          this.getAlbum();\n          this.listPhotos();\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: data.message\n          });\n        }\n\n        this.movePhoto = false;\n      });\n    },\n\n    handleRemove(file) {\n      this.uploads.forEach((item, index) => {\n        if (item.url == file.url) {\n          this.uploads.splice(index, 1);\n        }\n      });\n    },\n\n    upload(response) {\n      this.uploads.push({\n        url: response.data\n      });\n    },\n\n    beforeUpload(file) {\n      return new Promise(resolve => {\n        if (file.size / 1024 < this.config.UPLOAD_SIZE) {\n          resolve(file);\n        }\n\n        imageConversion.compressAccurately(file, this.config.UPLOAD_SIZE).then(res => {\n          resolve(res);\n        });\n      });\n    },\n\n    handleCheckAllChange(val) {\n      this.selectphotoIds = val ? this.photoIds : [];\n      this.isIndeterminate = false;\n    },\n\n    handleCheckedPhotoChange(value) {\n      let checkedCount = value.length;\n      this.checkAll = checkedCount === this.photoIds.length;\n      this.isIndeterminate = checkedCount > 0 && checkedCount < this.photoIds.length;\n    },\n\n    handleCommand(command) {\n      this.photoForm = JSON.parse(command);\n      this.editPhoto = true;\n    },\n\n    updatePhotoDelete(id) {\n      var param = {};\n\n      if (id == null) {\n        param = {\n          ids: this.selectphotoIds,\n          isDelete: 1\n        };\n      } else {\n        param = {\n          ids: [id],\n          isDelete: 1\n        };\n      }\n\n      this.axios.put('/api/admin/photos/delete', param).then(({\n        data\n      }) => {\n        if (data.code === 0) {\n          this.$notify.success({\n            title: '成功',\n            message: data.message\n          });\n          this.listPhotos();\n          this.getAlbum();\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: data.message\n          });\n        }\n      });\n      this.batchDeletePhoto = false;\n    }\n\n  },\n  watch: {\n    photos() {\n      this.photoIds = [];\n      this.photos.forEach(item => {\n        this.photoIds.push(item.id);\n      });\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}