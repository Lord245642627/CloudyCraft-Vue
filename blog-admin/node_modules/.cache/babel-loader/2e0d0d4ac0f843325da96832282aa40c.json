{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\n\nvar lang = require(\"../../lang\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar langSelector = lang.legend.selector;\nvar defaultSelectorOption = {\n  all: {\n    type: 'all',\n    title: zrUtil.clone(langSelector.all)\n  },\n  inverse: {\n    type: 'inverse',\n    title: zrUtil.clone(langSelector.inverse)\n  }\n};\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n\n    this._updateSelector(option);\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n\n    this._updateSelector(option);\n  },\n  _updateSelector: function (option) {\n    var selector = option.selector;\n\n    if (selector === true) {\n      selector = option.selector = ['all', 'inverse'];\n    }\n\n    if (zrUtil.isArray(selector)) {\n      zrUtil.each(selector, function (item, index) {\n        zrUtil.isString(item) && (item = {\n          type: item\n        });\n        selector[index] = zrUtil.merge(item, defaultSelectorOption[item.type]);\n      });\n    }\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendVisualProvider) {\n        var provider = seriesModel.legendVisualProvider;\n        var names = provider.getAllNames();\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n  allSelect: function () {\n    var data = this._data;\n    var selected = this.option.selected;\n    zrUtil.each(data, function (dataItem) {\n      selected[dataItem.get('name', true)] = true;\n    });\n  },\n  inverseSelect: function () {\n    var data = this._data;\n    var selected = this.option.selected;\n    zrUtil.each(data, function (dataItem) {\n      var name = dataItem.get('name', true); // Initially, default value is true\n\n      if (!selected.hasOwnProperty(name)) {\n        selected[name] = true;\n      }\n\n      selected[name] = !selected[name];\n    });\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // the width of legend symbol\n    itemWidth: 25,\n    // the height of legend symbol\n    itemHeight: 14,\n    // the color of unselected legend symbol\n    inactiveColor: '#ccc',\n    // the borderColor of unselected legend symbol\n    inactiveBorderColor: '#ccc',\n    itemStyle: {\n      // the default borderWidth of legend symbol\n      borderWidth: 0\n    },\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Usage:\n    // selector: [{type: 'all or inverse', title: xxx}]\n    // or\n    // selector: true\n    // or\n    // selector: ['all', 'inverse']\n    selector: false,\n    selectorLabel: {\n      show: true,\n      borderRadius: 10,\n      padding: [3, 5, 3, 5],\n      fontSize: 12,\n      fontFamily: ' sans-serif',\n      color: '#666',\n      borderWidth: 1,\n      borderColor: '#666'\n    },\n    emphasis: {\n      selectorLabel: {\n        show: true,\n        color: '#eee',\n        backgroundColor: '#666'\n      }\n    },\n    // Value can be 'start' or 'end'\n    selectorPosition: 'auto',\n    selectorItemGap: 7,\n    selectorButtonGap: 10,\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;","map":{"version":3,"names":["echarts","require","zrUtil","Model","_model","isNameSpecified","lang","langSelector","legend","selector","defaultSelectorOption","all","type","title","clone","inverse","LegendModel","extendComponentModel","dependencies","layoutMode","ignoreSize","init","option","parentModel","ecModel","mergeDefaultAndTheme","selected","_updateSelector","mergeOption","superCall","isArray","each","item","index","isString","merge","optionUpdated","_updateData","legendData","_data","get","hasSelected","i","length","name","isSelected","select","potentialData","availableNames","eachRawSeries","seriesModel","seriesName","push","isPotential","legendVisualProvider","provider","names","getAllNames","isSeriesFiltered","concat","_availableNames","rawData","map","dataItem","getData","selectedMode","data","unSelect","toggleSelected","hasOwnProperty","allSelect","inverseSelect","indexOf","getOrient","defaultOption","zlevel","z","show","orient","left","top","align","backgroundColor","borderColor","borderRadius","borderWidth","padding","itemGap","itemWidth","itemHeight","inactiveColor","inactiveBorderColor","itemStyle","textStyle","color","selectorLabel","fontSize","fontFamily","emphasis","selectorPosition","selectorItemGap","selectorButtonGap","tooltip","_default","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-admin/node_modules/echarts/lib/component/legend/LegendModel.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\n\nvar lang = require(\"../../lang\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar langSelector = lang.legend.selector;\nvar defaultSelectorOption = {\n  all: {\n    type: 'all',\n    title: zrUtil.clone(langSelector.all)\n  },\n  inverse: {\n    type: 'inverse',\n    title: zrUtil.clone(langSelector.inverse)\n  }\n};\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n\n    this._updateSelector(option);\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n\n    this._updateSelector(option);\n  },\n  _updateSelector: function (option) {\n    var selector = option.selector;\n\n    if (selector === true) {\n      selector = option.selector = ['all', 'inverse'];\n    }\n\n    if (zrUtil.isArray(selector)) {\n      zrUtil.each(selector, function (item, index) {\n        zrUtil.isString(item) && (item = {\n          type: item\n        });\n        selector[index] = zrUtil.merge(item, defaultSelectorOption[item.type]);\n      });\n    }\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendVisualProvider) {\n        var provider = seriesModel.legendVisualProvider;\n        var names = provider.getAllNames();\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n  allSelect: function () {\n    var data = this._data;\n    var selected = this.option.selected;\n    zrUtil.each(data, function (dataItem) {\n      selected[dataItem.get('name', true)] = true;\n    });\n  },\n  inverseSelect: function () {\n    var data = this._data;\n    var selected = this.option.selected;\n    zrUtil.each(data, function (dataItem) {\n      var name = dataItem.get('name', true); // Initially, default value is true\n\n      if (!selected.hasOwnProperty(name)) {\n        selected[name] = true;\n      }\n\n      selected[name] = !selected[name];\n    });\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // the width of legend symbol\n    itemWidth: 25,\n    // the height of legend symbol\n    itemHeight: 14,\n    // the color of unselected legend symbol\n    inactiveColor: '#ccc',\n    // the borderColor of unselected legend symbol\n    inactiveBorderColor: '#ccc',\n    itemStyle: {\n      // the default borderWidth of legend symbol\n      borderWidth: 0\n    },\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Usage:\n    // selector: [{type: 'all or inverse', title: xxx}]\n    // or\n    // selector: true\n    // or\n    // selector: ['all', 'inverse']\n    selector: false,\n    selectorLabel: {\n      show: true,\n      borderRadius: 10,\n      padding: [3, 5, 3, 5],\n      fontSize: 12,\n      fontFamily: ' sans-serif',\n      color: '#666',\n      borderWidth: 1,\n      borderColor: '#666'\n    },\n    emphasis: {\n      selectorLabel: {\n        show: true,\n        color: '#eee',\n        backgroundColor: '#666'\n      }\n    },\n    // Value can be 'start' or 'end'\n    selectorPosition: 'auto',\n    selectorItemGap: 7,\n    selectorButtonGap: 10,\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}