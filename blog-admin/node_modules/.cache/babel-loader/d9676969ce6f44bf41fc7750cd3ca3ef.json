{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\n\n\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @param {boolean} [expandToNicedExtent=false] If expand the ticks to niced extent.\n   * @return {Array.<number>}\n   */\n  getTicks: function (expandToNicedExtent) {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this, expandToNicedExtent), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} splitNumber\n   * @return {Array.<Array.<number>>}\n   */\n  getMinorTicks: intervalScaleProto.getMinorTicks,\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;","map":{"version":3,"names":["zrUtil","require","Scale","numberUtil","IntervalScale","scaleProto","prototype","intervalScaleProto","getPrecisionSafe","roundingErrorFix","round","mathFloor","Math","floor","mathCeil","ceil","mathPow","pow","mathLog","log","LogScale","extend","type","base","$constructor","apply","arguments","_originalScale","getTicks","expandToNicedExtent","originalScale","extent","_extent","originalExtent","getExtent","map","call","val","powVal","__fixMin","fixRoundingError","__fixMax","getMinorTicks","getLabel","scale","setExtent","start","end","unionExtent","unionExtentFromData","data","dim","getApproximateExtent","niceTicks","approxTickNum","span","Infinity","interval","quantity","err","isNaN","abs","niceExtent","_interval","_niceExtent","opt","fixMin","fixMax","each","methodName","create","originalVal","_default","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/cloudycraft-vue/blog-admin/node_modules/echarts/lib/scale/Log.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @param {boolean} [expandToNicedExtent=false] If expand the ticks to niced extent.\n   * @return {Array.<number>}\n   */\n  getTicks: function (expandToNicedExtent) {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this, expandToNicedExtent), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} splitNumber\n   * @return {Array.<Array.<number>>}\n   */\n  getMinorTicks: intervalScaleProto.getMinorTicks,\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}