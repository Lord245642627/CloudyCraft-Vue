{"ast":null,"code":"/* IMPORT */\nimport _ from '../utils/index.js';\nimport ChannelsReusable from '../channels/reusable.js';\n/* MAIN */\n\nconst HSL = {\n  /* VARIABLES */\n  re: /^hsla?\\(\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e-?\\d+)?(?:deg|grad|rad|turn)?)\\s*?(?:,|\\s)\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e-?\\d+)?%)\\s*?(?:,|\\s)\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e-?\\d+)?%)(?:\\s*?(?:,|\\/)\\s*?\\+?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e-?\\d+)?(%)?))?\\s*?\\)$/i,\n  hueRe: /^(.+?)(deg|grad|rad|turn)$/i,\n\n  /* HELPERS */\n  _hue2deg: hue => {\n    const match = hue.match(HSL.hueRe);\n\n    if (match) {\n      const [, number, unit] = match;\n\n      switch (unit) {\n        case 'grad':\n          return _.channel.clamp.h(parseFloat(number) * .9);\n\n        case 'rad':\n          return _.channel.clamp.h(parseFloat(number) * 180 / Math.PI);\n\n        case 'turn':\n          return _.channel.clamp.h(parseFloat(number) * 360);\n      }\n    }\n\n    return _.channel.clamp.h(parseFloat(hue));\n  },\n\n  /* API */\n  parse: color => {\n    const charCode = color.charCodeAt(0);\n    if (charCode !== 104 && charCode !== 72) return; // 'h'/'H'\n\n    const match = color.match(HSL.re);\n    if (!match) return;\n    const [, h, s, l, a, isAlphaPercentage] = match;\n    return ChannelsReusable.set({\n      h: HSL._hue2deg(h),\n      s: _.channel.clamp.s(parseFloat(s)),\n      l: _.channel.clamp.l(parseFloat(l)),\n      a: a ? _.channel.clamp.a(isAlphaPercentage ? parseFloat(a) / 100 : parseFloat(a)) : 1\n    }, color);\n  },\n  stringify: channels => {\n    const {\n      h,\n      s,\n      l,\n      a\n    } = channels;\n\n    if (a < 1) {\n      // HSLA\n      return `hsla(${_.lang.round(h)}, ${_.lang.round(s)}%, ${_.lang.round(l)}%, ${a})`;\n    } else {\n      // HSL\n      return `hsl(${_.lang.round(h)}, ${_.lang.round(s)}%, ${_.lang.round(l)}%)`;\n    }\n  }\n};\n/* EXPORT */\n\nexport default HSL;","map":{"version":3,"names":["_","ChannelsReusable","HSL","re","hueRe","_hue2deg","hue","match","number","unit","channel","clamp","h","parseFloat","Math","PI","parse","color","charCode","charCodeAt","s","l","a","isAlphaPercentage","set","stringify","channels","lang","round"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/cloudycraft-vue/blog-admin/node_modules/khroma/dist/color/hsl.js"],"sourcesContent":["/* IMPORT */\nimport _ from '../utils/index.js';\nimport ChannelsReusable from '../channels/reusable.js';\n/* MAIN */\nconst HSL = {\n    /* VARIABLES */\n    re: /^hsla?\\(\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e-?\\d+)?(?:deg|grad|rad|turn)?)\\s*?(?:,|\\s)\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e-?\\d+)?%)\\s*?(?:,|\\s)\\s*?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e-?\\d+)?%)(?:\\s*?(?:,|\\/)\\s*?\\+?(-?(?:\\d+(?:\\.\\d+)?|(?:\\.\\d+))(?:e-?\\d+)?(%)?))?\\s*?\\)$/i,\n    hueRe: /^(.+?)(deg|grad|rad|turn)$/i,\n    /* HELPERS */\n    _hue2deg: (hue) => {\n        const match = hue.match(HSL.hueRe);\n        if (match) {\n            const [, number, unit] = match;\n            switch (unit) {\n                case 'grad': return _.channel.clamp.h(parseFloat(number) * .9);\n                case 'rad': return _.channel.clamp.h(parseFloat(number) * 180 / Math.PI);\n                case 'turn': return _.channel.clamp.h(parseFloat(number) * 360);\n            }\n        }\n        return _.channel.clamp.h(parseFloat(hue));\n    },\n    /* API */\n    parse: (color) => {\n        const charCode = color.charCodeAt(0);\n        if (charCode !== 104 && charCode !== 72)\n            return; // 'h'/'H'\n        const match = color.match(HSL.re);\n        if (!match)\n            return;\n        const [, h, s, l, a, isAlphaPercentage] = match;\n        return ChannelsReusable.set({\n            h: HSL._hue2deg(h),\n            s: _.channel.clamp.s(parseFloat(s)),\n            l: _.channel.clamp.l(parseFloat(l)),\n            a: a ? _.channel.clamp.a(isAlphaPercentage ? parseFloat(a) / 100 : parseFloat(a)) : 1\n        }, color);\n    },\n    stringify: (channels) => {\n        const { h, s, l, a } = channels;\n        if (a < 1) { // HSLA\n            return `hsla(${_.lang.round(h)}, ${_.lang.round(s)}%, ${_.lang.round(l)}%, ${a})`;\n        }\n        else { // HSL\n            return `hsl(${_.lang.round(h)}, ${_.lang.round(s)}%, ${_.lang.round(l)}%)`;\n        }\n    }\n};\n/* EXPORT */\nexport default HSL;\n"],"mappings":"AAAA;AACA,OAAOA,CAAP,MAAc,mBAAd;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA;;AACA,MAAMC,GAAG,GAAG;EACR;EACAC,EAAE,EAAE,kRAFI;EAGRC,KAAK,EAAE,6BAHC;;EAIR;EACAC,QAAQ,EAAGC,GAAD,IAAS;IACf,MAAMC,KAAK,GAAGD,GAAG,CAACC,KAAJ,CAAUL,GAAG,CAACE,KAAd,CAAd;;IACA,IAAIG,KAAJ,EAAW;MACP,MAAM,GAAGC,MAAH,EAAWC,IAAX,IAAmBF,KAAzB;;MACA,QAAQE,IAAR;QACI,KAAK,MAAL;UAAa,OAAOT,CAAC,CAACU,OAAF,CAAUC,KAAV,CAAgBC,CAAhB,CAAkBC,UAAU,CAACL,MAAD,CAAV,GAAqB,EAAvC,CAAP;;QACb,KAAK,KAAL;UAAY,OAAOR,CAAC,CAACU,OAAF,CAAUC,KAAV,CAAgBC,CAAhB,CAAkBC,UAAU,CAACL,MAAD,CAAV,GAAqB,GAArB,GAA2BM,IAAI,CAACC,EAAlD,CAAP;;QACZ,KAAK,MAAL;UAAa,OAAOf,CAAC,CAACU,OAAF,CAAUC,KAAV,CAAgBC,CAAhB,CAAkBC,UAAU,CAACL,MAAD,CAAV,GAAqB,GAAvC,CAAP;MAHjB;IAKH;;IACD,OAAOR,CAAC,CAACU,OAAF,CAAUC,KAAV,CAAgBC,CAAhB,CAAkBC,UAAU,CAACP,GAAD,CAA5B,CAAP;EACH,CAhBO;;EAiBR;EACAU,KAAK,EAAGC,KAAD,IAAW;IACd,MAAMC,QAAQ,GAAGD,KAAK,CAACE,UAAN,CAAiB,CAAjB,CAAjB;IACA,IAAID,QAAQ,KAAK,GAAb,IAAoBA,QAAQ,KAAK,EAArC,EACI,OAHU,CAGF;;IACZ,MAAMX,KAAK,GAAGU,KAAK,CAACV,KAAN,CAAYL,GAAG,CAACC,EAAhB,CAAd;IACA,IAAI,CAACI,KAAL,EACI;IACJ,MAAM,GAAGK,CAAH,EAAMQ,CAAN,EAASC,CAAT,EAAYC,CAAZ,EAAeC,iBAAf,IAAoChB,KAA1C;IACA,OAAON,gBAAgB,CAACuB,GAAjB,CAAqB;MACxBZ,CAAC,EAAEV,GAAG,CAACG,QAAJ,CAAaO,CAAb,CADqB;MAExBQ,CAAC,EAAEpB,CAAC,CAACU,OAAF,CAAUC,KAAV,CAAgBS,CAAhB,CAAkBP,UAAU,CAACO,CAAD,CAA5B,CAFqB;MAGxBC,CAAC,EAAErB,CAAC,CAACU,OAAF,CAAUC,KAAV,CAAgBU,CAAhB,CAAkBR,UAAU,CAACQ,CAAD,CAA5B,CAHqB;MAIxBC,CAAC,EAAEA,CAAC,GAAGtB,CAAC,CAACU,OAAF,CAAUC,KAAV,CAAgBW,CAAhB,CAAkBC,iBAAiB,GAAGV,UAAU,CAACS,CAAD,CAAV,GAAgB,GAAnB,GAAyBT,UAAU,CAACS,CAAD,CAAtE,CAAH,GAAgF;IAJ5D,CAArB,EAKJL,KALI,CAAP;EAMH,CAhCO;EAiCRQ,SAAS,EAAGC,QAAD,IAAc;IACrB,MAAM;MAAEd,CAAF;MAAKQ,CAAL;MAAQC,CAAR;MAAWC;IAAX,IAAiBI,QAAvB;;IACA,IAAIJ,CAAC,GAAG,CAAR,EAAW;MAAE;MACT,OAAQ,QAAOtB,CAAC,CAAC2B,IAAF,CAAOC,KAAP,CAAahB,CAAb,CAAgB,KAAIZ,CAAC,CAAC2B,IAAF,CAAOC,KAAP,CAAaR,CAAb,CAAgB,MAAKpB,CAAC,CAAC2B,IAAF,CAAOC,KAAP,CAAaP,CAAb,CAAgB,MAAKC,CAAE,GAA/E;IACH,CAFD,MAGK;MAAE;MACH,OAAQ,OAAMtB,CAAC,CAAC2B,IAAF,CAAOC,KAAP,CAAahB,CAAb,CAAgB,KAAIZ,CAAC,CAAC2B,IAAF,CAAOC,KAAP,CAAaR,CAAb,CAAgB,MAAKpB,CAAC,CAAC2B,IAAF,CAAOC,KAAP,CAAaP,CAAb,CAAgB,IAAvE;IACH;EACJ;AAzCO,CAAZ;AA2CA;;AACA,eAAenB,GAAf"},"metadata":{},"sourceType":"module"}