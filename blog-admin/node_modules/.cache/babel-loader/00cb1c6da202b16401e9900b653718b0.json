{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar TooltipRichContent = require(\"./TooltipRichContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar _model = require(\"../../util/model\");\n\nvar getTooltipRenderMode = _model.getTooltipRenderMode;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = tooltipModel.get('renderMode');\n    this._renderMode = getTooltipRenderMode(renderMode);\n    var tooltipContent;\n\n    if (this._renderMode === 'html') {\n      tooltipContent = new TooltipContent(api.getDom(), api, {\n        appendToBody: tooltipModel.get('appendToBody', true)\n      });\n      this._newLine = '<br/>';\n    } else {\n      tooltipContent = new TooltipRichContent(api);\n      this._newLine = '\\n';\n    }\n\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update(tooltipModel);\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        !api.isDisposed() && self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n      this._lastDataByCoordSys = null;\n\n      this._showSeriesItemTooltip(e, el, dispatchAction);\n    } // Tooltip provided directly. Like legend.\n    else if (el && el.tooltip) {\n      this._lastDataByCoordSys = null;\n\n      this._showComponentItemTooltip(e, el, dispatchAction);\n    } else {\n      this._lastDataByCoordSys = null;\n\n      this._hide(dispatchAction);\n    }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easier to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    var renderMode = this._renderMode;\n    var newLine = this._newLine;\n    var markers = {};\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            var seriesTooltip = series.formatTooltip(dataIndex, true, null, renderMode);\n            var html;\n\n            if (zrUtil.isObject(seriesTooltip)) {\n              html = seriesTooltip.html;\n              var newMarkers = seriesTooltip.markers;\n              zrUtil.merge(markers, newMarkers);\n            } else {\n              html = seriesTooltip;\n            }\n\n            seriesDefaultHTML.push(html);\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) should be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n\n        if (renderMode !== 'html') {\n          singleDefaultHTML.push(seriesDefaultHTML.join(newLine));\n        } else {\n          singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + newLine : '') + seriesDefaultHTML.join(newLine));\n        }\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join(this._newLine + this._newLine);\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr, undefined, markers);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData(dataType);\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var seriesTooltip = dataModel.formatTooltip(dataIndex, false, dataType, this._renderMode);\n    var defaultHtml;\n    var markers;\n\n    if (zrUtil.isObject(seriesTooltip)) {\n      defaultHtml = seriesTooltip.html;\n      markers = seriesTooltip.markers;\n    } else {\n      defaultHtml = seriesTooltip;\n      markers = null;\n    }\n\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markers);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on coordinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markers) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html, markers, tooltipModel);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html, markers, tooltipModel);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n      var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n      x = pos[0];\n      y = pos[1];\n    } else {\n      var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.dispose();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;","map":{"version":3,"names":["echarts","require","zrUtil","env","TooltipContent","TooltipRichContent","formatUtil","numberUtil","graphic","findPointFromSeries","layoutUtil","Model","globalListener","axisHelper","axisPointerViewHelper","_model","getTooltipRenderMode","bind","each","parsePercent","proxyRect","Rect","shape","x","y","width","height","_default","extendComponentView","type","init","ecModel","api","node","tooltipModel","getComponent","renderMode","get","_renderMode","tooltipContent","getDom","appendToBody","_newLine","_tooltipContent","render","group","removeAll","_tooltipModel","_ecModel","_api","_lastDataByCoordSys","_alwaysShowContent","update","setEnterable","_initGlobalListener","_keepShow","triggerOn","register","currTrigger","e","dispatchAction","indexOf","_tryShow","_hide","_lastX","_lastY","self","clearTimeout","_refreshUpdateTimeout","setTimeout","isDisposed","manuallyShowTip","payload","from","uid","makeDispatchAction","_ticket","dataByCoordSys","tooltip","el","position","offsetX","offsetY","target","tooltipOption","seriesIndex","_manuallyAxisShowTip","pointInfo","cx","point","cy","getZr","findHover","manuallyHideTip","hideLater","dataIndex","coordSysAxesInfo","seriesModel","getSeriesByIndex","data","getData","buildTooltipModel","getItemModel","coordinateSystem","model","length","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","cb","delay","_showTimout","globalTooltipModel","singleDefaultHTML","singleParamsList","singleTooltipModel","newLine","markers","itemCoordSys","dataByAxis","item","axisModel","axisDim","axisIndex","axisValue","value","seriesDefaultHTML","valueLabel","getValueLabel","axis","seriesDataIndices","valueLabelOpt","idxItem","series","dataIndexInside","dataParams","getDataParams","axisType","axisId","getAxisRawValue","axisValueLabel","push","seriesTooltip","formatTooltip","html","isObject","newMarkers","merge","firstLine","join","encodeHTML","reverse","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","Math","random","undefined","dataModel","dataType","tooltipTrigger","params","defaultHtml","asyncTicket","name","getRawIndex","tooltipOpt","content","formatter","subTooltipModel","formatTpl","callback","cbTicket","setContent","show","viewWidth","getWidth","viewHeight","getHeight","contentSize","getSize","align","vAlign","rect","getBoundingRect","clone","applyTransform","transform","viewSize","slice","isArray","layoutRect","getLayoutRect","pos","calcTooltipPosition","refixTooltipPosition","isCenterAlign","confineTooltipPosition","moveTo","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","j","newIdxItem","dispose","unregister","modelCascade","resultModel","pop","isInstance","gapH","gapV","size","getOuterSize","min","max","domWidth","domHeight","gap","rectWidth","rectHeight","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/cloudycraft-vue/blog-admin/node_modules/echarts/lib/component/tooltip/TooltipView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar TooltipRichContent = require(\"./TooltipRichContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar _model = require(\"../../util/model\");\n\nvar getTooltipRenderMode = _model.getTooltipRenderMode;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = tooltipModel.get('renderMode');\n    this._renderMode = getTooltipRenderMode(renderMode);\n    var tooltipContent;\n\n    if (this._renderMode === 'html') {\n      tooltipContent = new TooltipContent(api.getDom(), api, {\n        appendToBody: tooltipModel.get('appendToBody', true)\n      });\n      this._newLine = '<br/>';\n    } else {\n      tooltipContent = new TooltipRichContent(api);\n      this._newLine = '\\n';\n    }\n\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update(tooltipModel);\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        !api.isDisposed() && self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easier to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    var renderMode = this._renderMode;\n    var newLine = this._newLine;\n    var markers = {};\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            var seriesTooltip = series.formatTooltip(dataIndex, true, null, renderMode);\n            var html;\n\n            if (zrUtil.isObject(seriesTooltip)) {\n              html = seriesTooltip.html;\n              var newMarkers = seriesTooltip.markers;\n              zrUtil.merge(markers, newMarkers);\n            } else {\n              html = seriesTooltip;\n            }\n\n            seriesDefaultHTML.push(html);\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) should be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n\n        if (renderMode !== 'html') {\n          singleDefaultHTML.push(seriesDefaultHTML.join(newLine));\n        } else {\n          singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + newLine : '') + seriesDefaultHTML.join(newLine));\n        }\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join(this._newLine + this._newLine);\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr, undefined, markers);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData(dataType);\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var seriesTooltip = dataModel.formatTooltip(dataIndex, false, dataType, this._renderMode);\n    var defaultHtml;\n    var markers;\n\n    if (zrUtil.isObject(seriesTooltip)) {\n      defaultHtml = seriesTooltip.html;\n      markers = seriesTooltip.markers;\n    } else {\n      defaultHtml = seriesTooltip;\n      markers = null;\n    }\n\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markers);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on coordinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markers) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html, markers, tooltipModel);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html, markers, tooltipModel);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.dispose();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}