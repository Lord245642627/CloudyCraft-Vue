{"ast":null,"code":"var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n/**\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\n\n\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n  // Can only be `null`/`undefined` or an non-empty array, MUST NOT be an empty array.\n  // because it is easy to only using null to check whether clipPaths changed.\n\n  this.__clipPaths = null; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Dirty flag. From which painter will determine if this displayable object needs brush.\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * Whether the displayable object is visible. when it is true, the displayable object\n   * is not drawn, but the mouse event can still trigger the object.\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * The z level determines the displayable object can be drawn in which layer canvas.\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * Whether it can be dragged.\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * Whether is it dragging.\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * Whether to respond to mouse events.\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n\n  /**\n   * Scale ratio for global scale.\n   * @type {boolean}\n   */\n  globalScaleRatio: 1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * Graphic drawing method.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * Get the minimum bounding box.\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = this.__dirtyText = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, events bound by bind\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * The string value of `textPosition` needs to be calculated to a real postion.\n   * For example, `'inside'` is calculated to `[rect.width/2, rect.height/2]`\n   * by default. See `contain/text.js#calculateTextPosition` for more details.\n   * But some coutom shapes like \"pin\", \"flag\" have center that is not exactly\n   * `[width/2, height/2]`. So we provide this hook to customize the calculation\n   * for those shapes. It will be called if the `style.textPosition` is a string.\n   * @param {Obejct} [out] Prepared out object. If not provided, this method should\n   *        be responsible for creating one.\n   * @param {module:zrender/graphic/Style} style\n   * @param {Object} rect {x, y, width, height}\n   * @return {Obejct} out The same as the input out.\n   *         {\n   *             x: number. mandatory.\n   *             y: number. mandatory.\n   *             textAlign: string. optional. use style.textAlign by default.\n   *             textVerticalAlign: string. optional. use style.textVerticalAlign by default.\n   *         }\n   */\n  calculateTextPosition: null\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;","map":{"version":3,"names":["zrUtil","require","Style","Element","RectText","Displayable","opts","call","name","hasOwnProperty","style","_rect","__clipPaths","prototype","constructor","type","__dirty","invisible","z","z2","zlevel","draggable","dragging","silent","culling","cursor","rectHover","progressive","incremental","globalScaleRatio","beforeBrush","ctx","afterBrush","brush","prevEl","getBoundingRect","contain","x","y","rectContain","traverse","cb","context","coord","transformCoordToLocal","rect","dirty","__dirtyText","__zr","refresh","animateStyle","loop","animate","attrKV","key","value","set","setStyle","useStyle","obj","calculateTextPosition","inherits","mixin","_default","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-admin/node_modules/zrender/lib/graphic/Displayable.js"],"sourcesContent":["var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n  // Can only be `null`/`undefined` or an non-empty array, MUST NOT be an empty array.\n  // because it is easy to only using null to check whether clipPaths changed.\n\n  this.__clipPaths = null; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Dirty flag. From which painter will determine if this displayable object needs brush.\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * Whether the displayable object is visible. when it is true, the displayable object\n   * is not drawn, but the mouse event can still trigger the object.\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * The z level determines the displayable object can be drawn in which layer canvas.\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * Whether it can be dragged.\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * Whether is it dragging.\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * Whether to respond to mouse events.\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n\n  /**\n   * Scale ratio for global scale.\n   * @type {boolean}\n   */\n  globalScaleRatio: 1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * Graphic drawing method.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * Get the minimum bounding box.\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = this.__dirtyText = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, events bound by bind\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * The string value of `textPosition` needs to be calculated to a real postion.\n   * For example, `'inside'` is calculated to `[rect.width/2, rect.height/2]`\n   * by default. See `contain/text.js#calculateTextPosition` for more details.\n   * But some coutom shapes like \"pin\", \"flag\" have center that is not exactly\n   * `[width/2, height/2]`. So we provide this hook to customize the calculation\n   * for those shapes. It will be called if the `style.textPosition` is a string.\n   * @param {Obejct} [out] Prepared out object. If not provided, this method should\n   *        be responsible for creating one.\n   * @param {module:zrender/graphic/Style} style\n   * @param {Object} rect {x, y, width, height}\n   * @return {Obejct} out The same as the input out.\n   *         {\n   *             x: number. mandatory.\n   *             y: number. mandatory.\n   *             textAlign: string. optional. use style.textAlign by default.\n   *             textVerticalAlign: string. optional. use style.textVerticalAlign by default.\n   *         }\n   */\n  calculateTextPosition: null\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}