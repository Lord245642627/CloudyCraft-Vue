{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar shouldShowAllLabels = _axisHelper.shouldShowAllLabels;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar PI = Math.PI;\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line({\n      // Id for animation\n      anid: 'line',\n      subPixelOptimize: true,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    }));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true,\n            z2: 11\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var ticksEls = buildAxisMajorTicks(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, ticksEls);\n    buildAxisMinorTicks(this, axisModel, opt);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isLabelSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: textStyleModel.get('align') || labelLayout.textAlign,\n      textVerticalAlign: textStyleModel.get('verticalAlign') || labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n\nvar makeAxisEventDataBase = AxisBuilder.makeAxisEventDataBase = function (axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType,\n    componentIndex: axisModel.componentIndex\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nvar isLabelSilent = AxisBuilder.isLabelSilent = function (axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n};\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  if (shouldShowAllLabels(axisModel.axis)) {\n    return;\n  } // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n\n\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction createTicks(ticksCoords, tickTransform, tickEndCoord, tickLineStyle, aniid) {\n  var tickEls = [];\n  var pt1 = [];\n  var pt2 = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = tickEndCoord;\n\n    if (tickTransform) {\n      v2ApplyTransform(pt1, pt1, tickTransform);\n      v2ApplyTransform(pt2, pt2, tickTransform);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line({\n      // Id for animation\n      anid: aniid + '_' + ticksCoords[i].tickValue,\n      subPixelOptimize: true,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: tickLineStyle,\n      z2: 2,\n      silent: true\n    });\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisMajorTicks(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var tickModel = axisModel.getModel('axisTick');\n\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickEndCoord = opt.tickDirection * tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var ticksEls = createTicks(ticksCoords, axisBuilder._transform, tickEndCoord, defaults(lineStyleModel.getLineStyle(), {\n    stroke: axisModel.get('axisLine.lineStyle.color')\n  }), 'ticks');\n\n  for (var i = 0; i < ticksEls.length; i++) {\n    axisBuilder.group.add(ticksEls[i]);\n  }\n\n  return ticksEls;\n}\n\nfunction buildAxisMinorTicks(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var minorTickModel = axisModel.getModel('minorTick');\n\n  if (!minorTickModel.get('show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var minorTicksCoords = axis.getMinorTicksCoords();\n\n  if (!minorTicksCoords.length) {\n    return;\n  }\n\n  var lineStyleModel = minorTickModel.getModel('lineStyle');\n  var tickEndCoord = opt.tickDirection * minorTickModel.get('length');\n  var minorTickLineStyle = defaults(lineStyleModel.getLineStyle(), defaults(axisModel.getModel('axisTick').getLineStyle(), {\n    stroke: axisModel.get('axisLine.lineStyle.color')\n  }));\n\n  for (var i = 0; i < minorTicksCoords.length; i++) {\n    var minorTicksEls = createTicks(minorTicksCoords[i], axisBuilder._transform, tickEndCoord, minorTickLineStyle, 'minorticks_' + i);\n\n    for (var k = 0; k < minorTicksEls.length; k++) {\n      axisBuilder.group.add(minorTicksEls[k]);\n    }\n  }\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories && axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isLabelSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;","map":{"version":3,"names":["_util","require","retrieve","defaults","extend","each","formatUtil","graphic","Model","_number","isRadianAroundZero","remRadian","_symbol","createSymbol","matrixUtil","_vector","v2ApplyTransform","applyTransform","_axisHelper","shouldShowAllLabels","PI","Math","AxisBuilder","axisModel","opt","labelOffset","nameDirection","tickDirection","labelDirection","silent","group","Group","dumbGroup","position","slice","rotation","updateTransform","_transform","transform","_dumbGroup","prototype","constructor","hasBuilder","name","builders","add","call","getGroup","axisLine","get","extent","axis","getExtent","matrix","pt1","pt2","lineStyle","lineCap","getModel","getLineStyle","Line","anid","subPixelOptimize","shape","x1","y1","x2","y2","style","strokeContainThreshold","z2","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","rotate","offset","r","sqrt","point","index","symbol","stroke","pos","cos","sin","attr","axisTickLabel","ticksEls","buildAxisMajorTicks","labelEls","buildAxisLabel","fixMinMaxLabelShow","buildAxisMinorTicks","axisName","nameLocation","textStyleModel","gap","gapSignal","isNameLocationCenter","labelLayout","nameRotation","axisNameAvailableWidth","innerTextLayout","endTextLayout","abs","isFinite","textFont","getFont","truncateOpt","ellipsis","maxWidth","nameTruncateMaxWidth","truncatedText","truncateText","minChar","placeholder","tooltipOpt","mainType","formatterParams","componentType","$vars","componentIndex","textEl","Text","__fullText","__truncatedText","isLabelSilent","tooltip","show","content","formatter","setTextStyle","text","textFill","getTextColor","textAlign","textVerticalAlign","eventData","makeAxisEventDataBase","targetType","decomposeTransform","axisRotation","textRotation","direction","rotationDiff","textPosition","textRotate","inverse","onLeft","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","length","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","el","ignore","current","next","firstRect","getBoundingRect","clone","nextRect","mRotationBack","identity","mul","getLocalTransform","intersect","createTicks","ticksCoords","tickTransform","tickEndCoord","tickLineStyle","aniid","i","tickCoord","coord","tickEl","tickValue","push","axisBuilder","tickModel","scale","isBlank","lineStyleModel","getTicksCoords","minorTickModel","minorTicksCoords","getMinorTicksCoords","minorTickLineStyle","minorTicksEls","k","axisLabelShow","labelModel","labelMargin","labels","getViewLabels","labelRotation","labelRotate","rawCategoryData","getCategories","triggerEvent","labelItem","formattedLabel","rawLabel","itemLabelModel","textStyle","ecModel","textColor","dataToCoord","getShallow","type","value","_default","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-admin/node_modules/echarts/lib/component/axis/AxisBuilder.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar shouldShowAllLabels = _axisHelper.shouldShowAllLabels;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line({\n      // Id for animation\n      anid: 'line',\n      subPixelOptimize: true,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    }));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true,\n            z2: 11\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var ticksEls = buildAxisMajorTicks(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, ticksEls);\n    buildAxisMinorTicks(this, axisModel, opt);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isLabelSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: textStyleModel.get('align') || labelLayout.textAlign,\n      textVerticalAlign: textStyleModel.get('verticalAlign') || labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n\nvar makeAxisEventDataBase = AxisBuilder.makeAxisEventDataBase = function (axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType,\n    componentIndex: axisModel.componentIndex\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nvar isLabelSilent = AxisBuilder.isLabelSilent = function (axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n};\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  if (shouldShowAllLabels(axisModel.axis)) {\n    return;\n  } // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n\n\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction createTicks(ticksCoords, tickTransform, tickEndCoord, tickLineStyle, aniid) {\n  var tickEls = [];\n  var pt1 = [];\n  var pt2 = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = tickEndCoord;\n\n    if (tickTransform) {\n      v2ApplyTransform(pt1, pt1, tickTransform);\n      v2ApplyTransform(pt2, pt2, tickTransform);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line({\n      // Id for animation\n      anid: aniid + '_' + ticksCoords[i].tickValue,\n      subPixelOptimize: true,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: tickLineStyle,\n      z2: 2,\n      silent: true\n    });\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisMajorTicks(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var tickModel = axisModel.getModel('axisTick');\n\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickEndCoord = opt.tickDirection * tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var ticksEls = createTicks(ticksCoords, axisBuilder._transform, tickEndCoord, defaults(lineStyleModel.getLineStyle(), {\n    stroke: axisModel.get('axisLine.lineStyle.color')\n  }), 'ticks');\n\n  for (var i = 0; i < ticksEls.length; i++) {\n    axisBuilder.group.add(ticksEls[i]);\n  }\n\n  return ticksEls;\n}\n\nfunction buildAxisMinorTicks(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var minorTickModel = axisModel.getModel('minorTick');\n\n  if (!minorTickModel.get('show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var minorTicksCoords = axis.getMinorTicksCoords();\n\n  if (!minorTicksCoords.length) {\n    return;\n  }\n\n  var lineStyleModel = minorTickModel.getModel('lineStyle');\n  var tickEndCoord = opt.tickDirection * minorTickModel.get('length');\n  var minorTickLineStyle = defaults(lineStyleModel.getLineStyle(), defaults(axisModel.getModel('axisTick').getLineStyle(), {\n    stroke: axisModel.get('axisLine.lineStyle.color')\n  }));\n\n  for (var i = 0; i < minorTicksCoords.length; i++) {\n    var minorTicksEls = createTicks(minorTicksCoords[i], axisBuilder._transform, tickEndCoord, minorTickLineStyle, 'minorticks_' + i);\n\n    for (var k = 0; k < minorTicksEls.length; k++) {\n      axisBuilder.group.add(minorTicksEls[k]);\n    }\n  }\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories && axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isLabelSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}