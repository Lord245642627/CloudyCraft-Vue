{"ast":null,"code":"export default {\n  created() {\n    this.current = this.$store.state.pageState.exceptionLog;\n    this.listLogs();\n  },\n\n  data() {\n    return {\n      logs: [],\n      logIds: [],\n      isDelete: false,\n      loading: true,\n      keywords: '',\n      current: 1,\n      size: 10,\n      total: 0,\n      exceptionLog: '',\n      isCheck: false,\n      exceptionInfo: ''\n    };\n  },\n\n  methods: {\n    selectionChange(logs) {\n      this.logIds = [];\n      logs.forEach(item => {\n        this.logIds.push(item.id);\n      });\n    },\n\n    sizeChange(size) {\n      this.size = size;\n      this.listLogs();\n    },\n\n    currentChange(current) {\n      this.current = current;\n      this.$store.commit('updateExceptionLogPageState', current);\n      this.listLogs();\n    },\n\n    searchLogs() {\n      this.current = 1;\n      this.$store.commit('updateExceptionLogPageState', this.current);\n      this.listLogs();\n    },\n\n    listLogs() {\n      this.axios.get('/api/admin/exception/logs', {\n        params: {\n          current: this.current,\n          size: this.size,\n          keywords: this.keywords\n        }\n      }).then(({\n        data\n      }) => {\n        this.logs = data.data.records;\n        this.total = data.data.total;\n        this.loading = false;\n      });\n    },\n\n    deleteLog(id) {\n      var param = {};\n\n      if (id != null) {\n        param = {\n          data: [id]\n        };\n      } else {\n        param = {\n          data: this.logIds\n        };\n      }\n\n      this.axios.delete('/api/admin/exception/logs', param).then(({\n        data\n      }) => {\n        if (data.code === 0) {\n          this.$notify.success({\n            title: '成功',\n            message: data.message\n          });\n          this.listLogs();\n        } else {\n          this.$notify.error({\n            title: '失败',\n            message: data.message\n          });\n        }\n\n        this.isDelete = false;\n      });\n    },\n\n    check(exceptionLog) {\n      this.exceptionLog = exceptionLog;\n      this.exceptionInfo = '\\n' + this.exceptionLog.exceptionInfo;\n      this.isCheck = true;\n      this.$nextTick(() => {\n        Prism.highlightAll();\n      });\n    }\n\n  },\n  computed: {\n    tagType() {\n      return function (type) {\n        switch (type) {\n          case 'GET':\n            return '';\n\n          case 'POST':\n            return 'success';\n\n          case 'PUT':\n            return 'warning';\n\n          case 'DELETE':\n            return 'danger';\n        }\n      };\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}