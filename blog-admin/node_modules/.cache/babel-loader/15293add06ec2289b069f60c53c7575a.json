{"ast":null,"code":"export function dedent(templ) {\n  var values = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    values[_i - 1] = arguments[_i];\n  }\n\n  var strings = Array.from(typeof templ === 'string' ? [templ] : templ);\n  strings[strings.length - 1] = strings[strings.length - 1].replace(/\\r?\\n([\\t ]*)$/, '');\n  var indentLengths = strings.reduce(function (arr, str) {\n    var matches = str.match(/\\n([\\t ]+|(?!\\s).)/g);\n\n    if (matches) {\n      return arr.concat(matches.map(function (match) {\n        var _a, _b;\n\n        return (_b = (_a = match.match(/[\\t ]/g)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\n      }));\n    }\n\n    return arr;\n  }, []);\n\n  if (indentLengths.length) {\n    var pattern_1 = new RegExp(\"\\n[\\t ]{\" + Math.min.apply(Math, indentLengths) + \"}\", 'g');\n    strings = strings.map(function (str) {\n      return str.replace(pattern_1, '\\n');\n    });\n  }\n\n  strings[0] = strings[0].replace(/^\\r?\\n/, '');\n  var string = strings[0];\n  values.forEach(function (value, i) {\n    var endentations = string.match(/(?:^|\\n)( *)$/);\n    var endentation = endentations ? endentations[1] : '';\n    var indentedValue = value;\n\n    if (typeof value === 'string' && value.includes('\\n')) {\n      indentedValue = String(value).split('\\n').map(function (str, i) {\n        return i === 0 ? str : \"\" + endentation + str;\n      }).join('\\n');\n    }\n\n    string += indentedValue + strings[i + 1];\n  });\n  return string;\n}\nexport default dedent;","map":{"version":3,"mappings":"AAAA,OAAM,SAAUA,MAAV,CACJC,KADI,EACgC;EACpC;;OAAA,yCAAoB;IAApBC;;;EAEA,IAAIC,OAAO,GAAGC,KAAK,CAACC,IAAN,CAAW,OAAOJ,KAAP,KAAiB,QAAjB,GAA4B,CAACA,KAAD,CAA5B,GAAsCA,KAAjD,CAAd;EAGAE,OAAO,CAACA,OAAO,CAACG,MAAR,GAAiB,CAAlB,CAAP,GAA8BH,OAAO,CAACA,OAAO,CAACG,MAAR,GAAiB,CAAlB,CAAP,CAA4BC,OAA5B,CAC5B,gBAD4B,EAE5B,EAF4B,CAA9B;EAMA,IAAMC,aAAa,GAAGL,OAAO,CAACM,MAAR,CAAe,UAACC,GAAD,EAAMC,GAAN,EAAS;IAC5C,IAAMC,OAAO,GAAGD,GAAG,CAACE,KAAJ,CAAU,qBAAV,CAAhB;;IACA,IAAID,OAAJ,EAAa;MACX,OAAOF,GAAG,CAACI,MAAJ,CACLF,OAAO,CAACG,GAAR,CAAY,UAACF,KAAD,EAAM;QAAA;;QAAK,wBAAK,CAACA,KAAN,CAAY,QAAZ,OAAqB,IAArB,IAAqBG,aAArB,GAAqB,MAArB,GAAqBA,GAAEV,MAAvB,MAA6B,IAA7B,IAA6BW,aAA7B,GAA6BA,EAA7B,GAAiC,CAAjC;MAAkC,CAAzD,CADK,CAAP;IAGD;;IACD,OAAOP,GAAP;EACD,CARqB,EAQT,EARS,CAAtB;;EAWA,IAAIF,aAAa,CAACF,MAAlB,EAA0B;IACxB,IAAMY,SAAO,GAAG,IAAIC,MAAJ,CAAW,aAAWC,IAAI,CAACC,GAAL,CAAQC,KAAR,OAAYd,aAAZ,CAAX,GAAoC,GAA/C,EAAqD,GAArD,CAAhB;IAEAL,OAAO,GAAGA,OAAO,CAACY,GAAR,CAAY,UAACJ,GAAD,EAAI;MAAK,UAAG,CAACJ,OAAJ,CAAYW,SAAZ,EAAqB,IAArB;IAA0B,CAA/C,CAAV;EACD;;EAGDf,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAAP,CAAWI,OAAX,CAAmB,QAAnB,EAA6B,EAA7B,CAAb;EAGA,IAAIgB,MAAM,GAAGpB,OAAO,CAAC,CAAD,CAApB;EAEAD,MAAM,CAACsB,OAAP,CAAe,UAACC,KAAD,EAAQC,CAAR,EAAS;IAEtB,IAAMC,YAAY,GAAGJ,MAAM,CAACV,KAAP,CAAa,eAAb,CAArB;IACA,IAAMe,WAAW,GAAGD,YAAY,GAAGA,YAAY,CAAC,CAAD,CAAf,GAAqB,EAArD;IACA,IAAIE,aAAa,GAAGJ,KAApB;;IAEA,IAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACK,QAAN,CAAe,IAAf,CAAjC,EAAuD;MACrDD,aAAa,GAAGE,MAAM,CAACN,KAAD,CAAN,CACbO,KADa,CACP,IADO,EAEbjB,GAFa,CAET,UAACJ,GAAD,EAAMe,CAAN,EAAO;QACV,OAAOA,CAAC,KAAK,CAAN,GAAUf,GAAV,GAAgB,KAAGiB,WAAH,GAAiBjB,GAAxC;MACD,CAJa,EAKbsB,IALa,CAKR,IALQ,CAAhB;IAMD;;IAEDV,MAAM,IAAIM,aAAa,GAAG1B,OAAO,CAACuB,CAAC,GAAG,CAAL,CAAjC;EACD,CAhBD;EAkBA,OAAOH,MAAP;AACD;AAED,eAAevB,MAAf","names":["dedent","templ","values","strings","Array","from","length","replace","indentLengths","reduce","arr","str","matches","match","concat","map","_a","_b","pattern_1","RegExp","Math","min","apply","string","forEach","value","i","endentations","endentation","indentedValue","includes","String","split","join"],"sourceRoot":"","sources":["../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}