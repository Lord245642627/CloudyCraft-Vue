{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\nvar pointsLayout = require(\"../../layout/points\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.extendChartView({\n  type: 'scatter',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.updateData(data, {\n      // TODO\n      // If this parameter should be a shape or a bounding volume\n      // shape will be more general.\n      // But bounding volume like bounding rect will be much faster in the contain calculation\n      clipShape: this._getClipShape(seriesModel)\n    });\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData(), {\n      clipShape: this._getClipShape(seriesModel)\n    });\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout().reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._symbolDraw.updateLayout(data);\n    }\n  },\n  _getClipShape: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var clipArea = coordSys && coordSys.getArea && coordSys.getArea();\n    return seriesModel.get('clip', true) ? clipArea : null;\n  },\n  _updateSymbolDraw: function (data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  },\n  dispose: function () {}\n});","map":{"version":3,"names":["echarts","require","SymbolDraw","LargeSymbolDraw","pointsLayout","extendChartView","type","render","seriesModel","ecModel","api","data","getData","symbolDraw","_updateSymbolDraw","updateData","clipShape","_getClipShape","_finished","incrementalPrepareRender","incrementalPrepareUpdate","incrementalRender","taskParams","_symbolDraw","incrementalUpdate","end","count","updateTransform","group","dirty","isPersistent","update","res","reset","progress","start","updateLayout","coordSys","coordinateSystem","clipArea","getArea","get","pipelineContext","isLargeDraw","large","_isLargeDraw","remove","removeAll","add","dispose"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/cloudycraft-vue/blog-admin/node_modules/echarts/lib/chart/scatter/ScatterView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\nvar pointsLayout = require(\"../../layout/points\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.extendChartView({\n  type: 'scatter',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.updateData(data, {\n      // TODO\n      // If this parameter should be a shape or a bounding volume\n      // shape will be more general.\n      // But bounding volume like bounding rect will be much faster in the contain calculation\n      clipShape: this._getClipShape(seriesModel)\n    });\n    this._finished = true;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData(), {\n      clipShape: this._getClipShape(seriesModel)\n    });\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout().reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._symbolDraw.updateLayout(data);\n    }\n  },\n  _getClipShape: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var clipArea = coordSys && coordSys.getArea && coordSys.getArea();\n    return seriesModel.get('clip', true) ? clipArea : null;\n  },\n  _updateSymbolDraw: function (data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  },\n  dispose: function () {}\n});"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,eAAD,CAArB;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,sBAAD,CAAxB;;AAEA,IAAIE,eAAe,GAAGF,OAAO,CAAC,2BAAD,CAA7B;;AAEA,IAAIG,YAAY,GAAGH,OAAO,CAAC,qBAAD,CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAD,OAAO,CAACK,eAAR,CAAwB;EACtBC,IAAI,EAAE,SADgB;EAEtBC,MAAM,EAAE,UAAUC,WAAV,EAAuBC,OAAvB,EAAgCC,GAAhC,EAAqC;IAC3C,IAAIC,IAAI,GAAGH,WAAW,CAACI,OAAZ,EAAX;;IAEA,IAAIC,UAAU,GAAG,KAAKC,iBAAL,CAAuBH,IAAvB,EAA6BH,WAA7B,CAAjB;;IAEAK,UAAU,CAACE,UAAX,CAAsBJ,IAAtB,EAA4B;MAC1B;MACA;MACA;MACA;MACAK,SAAS,EAAE,KAAKC,aAAL,CAAmBT,WAAnB;IALe,CAA5B;IAOA,KAAKU,SAAL,GAAiB,IAAjB;EACD,CAfqB;EAgBtBC,wBAAwB,EAAE,UAAUX,WAAV,EAAuBC,OAAvB,EAAgCC,GAAhC,EAAqC;IAC7D,IAAIC,IAAI,GAAGH,WAAW,CAACI,OAAZ,EAAX;;IAEA,IAAIC,UAAU,GAAG,KAAKC,iBAAL,CAAuBH,IAAvB,EAA6BH,WAA7B,CAAjB;;IAEAK,UAAU,CAACO,wBAAX,CAAoCT,IAApC;IACA,KAAKO,SAAL,GAAiB,KAAjB;EACD,CAvBqB;EAwBtBG,iBAAiB,EAAE,UAAUC,UAAV,EAAsBd,WAAtB,EAAmCC,OAAnC,EAA4C;IAC7D,KAAKc,WAAL,CAAiBC,iBAAjB,CAAmCF,UAAnC,EAA+Cd,WAAW,CAACI,OAAZ,EAA/C,EAAsE;MACpEI,SAAS,EAAE,KAAKC,aAAL,CAAmBT,WAAnB;IADyD,CAAtE;;IAIA,KAAKU,SAAL,GAAiBI,UAAU,CAACG,GAAX,KAAmBjB,WAAW,CAACI,OAAZ,GAAsBc,KAAtB,EAApC;EACD,CA9BqB;EA+BtBC,eAAe,EAAE,UAAUnB,WAAV,EAAuBC,OAAvB,EAAgCC,GAAhC,EAAqC;IACpD,IAAIC,IAAI,GAAGH,WAAW,CAACI,OAAZ,EAAX,CADoD,CAClB;IAClC;;IAEA,KAAKgB,KAAL,CAAWC,KAAX;;IAEA,IAAI,CAAC,KAAKX,SAAN,IAAmBP,IAAI,CAACe,KAAL,KAAe,GAAlC,IAAyC,CAAC,KAAKH,WAAL,CAAiBO,YAAjB,EAA9C,EAA+E;MAC7E,OAAO;QACLC,MAAM,EAAE;MADH,CAAP;IAGD,CAJD,MAIO;MACL,IAAIC,GAAG,GAAG5B,YAAY,GAAG6B,KAAf,CAAqBzB,WAArB,CAAV;;MAEA,IAAIwB,GAAG,CAACE,QAAR,EAAkB;QAChBF,GAAG,CAACE,QAAJ,CAAa;UACXC,KAAK,EAAE,CADI;UAEXV,GAAG,EAAEd,IAAI,CAACe,KAAL;QAFM,CAAb,EAGGf,IAHH;MAID;;MAED,KAAKY,WAAL,CAAiBa,YAAjB,CAA8BzB,IAA9B;IACD;EACF,CArDqB;EAsDtBM,aAAa,EAAE,UAAUT,WAAV,EAAuB;IACpC,IAAI6B,QAAQ,GAAG7B,WAAW,CAAC8B,gBAA3B;IACA,IAAIC,QAAQ,GAAGF,QAAQ,IAAIA,QAAQ,CAACG,OAArB,IAAgCH,QAAQ,CAACG,OAAT,EAA/C;IACA,OAAOhC,WAAW,CAACiC,GAAZ,CAAgB,MAAhB,EAAwB,IAAxB,IAAgCF,QAAhC,GAA2C,IAAlD;EACD,CA1DqB;EA2DtBzB,iBAAiB,EAAE,UAAUH,IAAV,EAAgBH,WAAhB,EAA6B;IAC9C,IAAIK,UAAU,GAAG,KAAKU,WAAtB;IACA,IAAImB,eAAe,GAAGlC,WAAW,CAACkC,eAAlC;IACA,IAAIC,WAAW,GAAGD,eAAe,CAACE,KAAlC;;IAEA,IAAI,CAAC/B,UAAD,IAAe8B,WAAW,KAAK,KAAKE,YAAxC,EAAsD;MACpDhC,UAAU,IAAIA,UAAU,CAACiC,MAAX,EAAd;MACAjC,UAAU,GAAG,KAAKU,WAAL,GAAmBoB,WAAW,GAAG,IAAIxC,eAAJ,EAAH,GAA2B,IAAID,UAAJ,EAAtE;MACA,KAAK2C,YAAL,GAAoBF,WAApB;MACA,KAAKf,KAAL,CAAWmB,SAAX;IACD;;IAED,KAAKnB,KAAL,CAAWoB,GAAX,CAAenC,UAAU,CAACe,KAA1B;IACA,OAAOf,UAAP;EACD,CAzEqB;EA0EtBiC,MAAM,EAAE,UAAUrC,OAAV,EAAmBC,GAAnB,EAAwB;IAC9B,KAAKa,WAAL,IAAoB,KAAKA,WAAL,CAAiBuB,MAAjB,CAAwB,IAAxB,CAApB;IACA,KAAKvB,WAAL,GAAmB,IAAnB;EACD,CA7EqB;EA8EtB0B,OAAO,EAAE,YAAY,CAAE;AA9ED,CAAxB"},"metadata":{},"sourceType":"script"}