{"ast":null,"code":"var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\nvar scaleTmp = [];\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  var globalScaleRatio = this.globalScaleRatio;\n\n  if (globalScaleRatio != null && globalScaleRatio !== 1) {\n    this.getGlobalScale(scaleTmp);\n    var relX = scaleTmp[0] < 0 ? -1 : 1;\n    var relY = scaleTmp[1] < 0 ? -1 : 1;\n    var sx = ((scaleTmp[0] - relX) * globalScaleRatio + relX) / scaleTmp[0] || 0;\n    var sy = ((scaleTmp[1] - relY) * globalScaleRatio + relY) / scaleTmp[1] || 0;\n    m[0] *= sx;\n    m[1] *= sx;\n    m[2] *= sy;\n    m[3] *= sy;\n  }\n\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\nvar originTransform = matrix.create();\n\ntransformableProto.setLocalTransform = function (m) {\n  if (!m) {\n    // TODO return or set identity?\n    return;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var origin = this.origin;\n\n  if (origin && (origin[0] || origin[1])) {\n    originTransform[4] = origin[0];\n    originTransform[5] = origin[1];\n    matrix.mul(tmpTransform, m, originTransform);\n    tmpTransform[4] -= origin[0];\n    tmpTransform[5] -= origin[1];\n    m = tmpTransform;\n  }\n\n  this.setLocalTransform(m);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function (out) {\n  var m = this.transform;\n  out = out || [];\n\n  if (!m) {\n    out[0] = 1;\n    out[1] = 1;\n    return out;\n  }\n\n  out[0] = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  out[1] = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    out[0] = -out[0];\n  }\n\n  if (m[3] < 0) {\n    out[1] = -out[1];\n  }\n\n  return out;\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;","map":{"version":3,"names":["matrix","require","vector","mIdentity","identity","EPSILON","isNotAroundZero","val","Transformable","opts","position","rotation","scale","origin","transformableProto","prototype","transform","needLocalTransform","scaleTmp","updateTransform","parent","parentHasTransform","m","create","getLocalTransform","mul","copy","globalScaleRatio","getGlobalScale","relX","relY","sx","sy","invTransform","invert","setTransform","ctx","dpr","restoreTransform","tmpTransform","originTransform","setLocalTransform","Math","sqrt","atan2","decomposeTransform","out","transformCoordToLocal","x","y","v2","applyTransform","transformCoordToGlobal","target","rotate","_default","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-admin/node_modules/zrender/lib/mixin/Transformable.js"],"sourcesContent":["var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\nvar scaleTmp = [];\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  var globalScaleRatio = this.globalScaleRatio;\n\n  if (globalScaleRatio != null && globalScaleRatio !== 1) {\n    this.getGlobalScale(scaleTmp);\n    var relX = scaleTmp[0] < 0 ? -1 : 1;\n    var relY = scaleTmp[1] < 0 ? -1 : 1;\n    var sx = ((scaleTmp[0] - relX) * globalScaleRatio + relX) / scaleTmp[0] || 0;\n    var sy = ((scaleTmp[1] - relY) * globalScaleRatio + relY) / scaleTmp[1] || 0;\n    m[0] *= sx;\n    m[1] *= sx;\n    m[2] *= sy;\n    m[3] *= sy;\n  }\n\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\nvar originTransform = matrix.create();\n\ntransformableProto.setLocalTransform = function (m) {\n  if (!m) {\n    // TODO return or set identity?\n    return;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var origin = this.origin;\n\n  if (origin && (origin[0] || origin[1])) {\n    originTransform[4] = origin[0];\n    originTransform[5] = origin[1];\n    matrix.mul(tmpTransform, m, originTransform);\n    tmpTransform[4] -= origin[0];\n    tmpTransform[5] -= origin[1];\n    m = tmpTransform;\n  }\n\n  this.setLocalTransform(m);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function (out) {\n  var m = this.transform;\n  out = out || [];\n\n  if (!m) {\n    out[0] = 1;\n    out[1] = 1;\n    return out;\n  }\n\n  out[0] = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  out[1] = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    out[0] = -out[0];\n  }\n\n  if (m[3] < 0) {\n    out[1] = -out[1];\n  }\n\n  return out;\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}