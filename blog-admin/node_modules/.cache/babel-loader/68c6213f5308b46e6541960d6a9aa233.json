{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\n\n\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n\nlineDrawProto.isPersistent = function () {\n  return true;\n};\n/**\n * @param {module:echarts/data/List} lineData\n */\n\n\nlineDrawProto.updateData = function (lineData) {\n  var lineDraw = this;\n  var group = lineDraw.group;\n  var oldLineData = lineDraw._lineData;\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldLineData) {\n    group.removeAll();\n  }\n\n  var seriesScope = makeSeriesScope(lineData);\n  lineData.diff(oldLineData).add(function (idx) {\n    doAdd(lineDraw, lineData, idx, seriesScope);\n  }).update(function (newIdx, oldIdx) {\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n};\n\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n  var itemLayout = lineData.getItemLayout(idx);\n\n  if (!lineNeedsDraw(itemLayout)) {\n    return;\n  }\n\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n  lineData.setItemGraphicEl(idx, el);\n  lineDraw.group.add(el);\n}\n\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n    lineDraw.group.remove(itemEl);\n    return;\n  }\n\n  if (!itemEl) {\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n  } else {\n    itemEl.updateData(newLineData, newIdx, seriesScope);\n  }\n\n  newLineData.setItemGraphicEl(newIdx, itemEl);\n  lineDraw.group.add(itemEl);\n}\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData; // Do not support update layout in incremental mode.\n\n  if (!lineData) {\n    return;\n  }\n\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n  this._seriesScope = makeSeriesScope(lineData);\n  this._lineData = null;\n  this.group.removeAll();\n};\n\nfunction isEffectObject(el) {\n  return el.animators && el.animators.length > 0;\n}\n\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup && !isEffectObject(el)) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (lineNeedsDraw(itemLayout)) {\n      var el = new this._ctor(lineData, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      this.group.add(el);\n      lineData.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n    labelModel: hostModel.getModel('label'),\n    hoverLabelModel: hostModel.getModel('emphasis.label')\n  };\n}\n\nlineDrawProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlineDrawProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nvar _default = LineDraw;\nmodule.exports = _default;","map":{"version":3,"names":["graphic","require","LineGroup","LineDraw","ctor","_ctor","group","Group","lineDrawProto","prototype","isPersistent","updateData","lineData","lineDraw","oldLineData","_lineData","removeAll","seriesScope","makeSeriesScope","diff","add","idx","doAdd","update","newIdx","oldIdx","doUpdate","remove","getItemGraphicEl","execute","itemLayout","getItemLayout","lineNeedsDraw","el","setItemGraphicEl","newLineData","itemEl","updateLayout","eachItemGraphicEl","incrementalPrepareUpdate","_seriesScope","isEffectObject","animators","length","incrementalUpdate","taskParams","updateIncrementalAndHover","isGroup","incremental","useHoverLayer","start","end","traverse","hostModel","lineStyle","getModel","getLineStyle","hoverLineStyle","labelModel","hoverLabelModel","_clearIncremental","_incremental","clearDisplaybles","isPointNaN","pt","isNaN","pts","_default","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/cloudycraft-vue/blog-admin/node_modules/echarts/lib/chart/helper/LineDraw.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n\nlineDrawProto.isPersistent = function () {\n  return true;\n};\n/**\n * @param {module:echarts/data/List} lineData\n */\n\n\nlineDrawProto.updateData = function (lineData) {\n  var lineDraw = this;\n  var group = lineDraw.group;\n  var oldLineData = lineDraw._lineData;\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldLineData) {\n    group.removeAll();\n  }\n\n  var seriesScope = makeSeriesScope(lineData);\n  lineData.diff(oldLineData).add(function (idx) {\n    doAdd(lineDraw, lineData, idx, seriesScope);\n  }).update(function (newIdx, oldIdx) {\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n};\n\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n  var itemLayout = lineData.getItemLayout(idx);\n\n  if (!lineNeedsDraw(itemLayout)) {\n    return;\n  }\n\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n  lineData.setItemGraphicEl(idx, el);\n  lineDraw.group.add(el);\n}\n\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n    lineDraw.group.remove(itemEl);\n    return;\n  }\n\n  if (!itemEl) {\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n  } else {\n    itemEl.updateData(newLineData, newIdx, seriesScope);\n  }\n\n  newLineData.setItemGraphicEl(newIdx, itemEl);\n  lineDraw.group.add(itemEl);\n}\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData; // Do not support update layout in incremental mode.\n\n  if (!lineData) {\n    return;\n  }\n\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n  this._seriesScope = makeSeriesScope(lineData);\n  this._lineData = null;\n  this.group.removeAll();\n};\n\nfunction isEffectObject(el) {\n  return el.animators && el.animators.length > 0;\n}\n\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup && !isEffectObject(el)) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (lineNeedsDraw(itemLayout)) {\n      var el = new this._ctor(lineData, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      this.group.add(el);\n      lineData.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n    labelModel: hostModel.getModel('label'),\n    hoverLabelModel: hostModel.getModel('emphasis.label')\n  };\n}\n\nlineDrawProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlineDrawProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nvar _default = LineDraw;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}