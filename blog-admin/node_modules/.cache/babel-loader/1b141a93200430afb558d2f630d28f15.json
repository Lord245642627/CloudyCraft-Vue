{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar View = require(\"../../coord/View\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar TreeShape = graphic.extendShape({\n  shape: {\n    parentPoint: [],\n    childPoints: [],\n    orient: '',\n    forkPosition: ''\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var childPoints = shape.childPoints;\n    var childLen = childPoints.length;\n    var parentPoint = shape.parentPoint;\n    var firstChildPos = childPoints[0];\n    var lastChildPos = childPoints[childLen - 1];\n\n    if (childLen === 1) {\n      ctx.moveTo(parentPoint[0], parentPoint[1]);\n      ctx.lineTo(firstChildPos[0], firstChildPos[1]);\n      return;\n    }\n\n    var orient = shape.orient;\n    var forkDim = orient === 'TB' || orient === 'BT' ? 0 : 1;\n    var otherDim = 1 - forkDim;\n    var forkPosition = parsePercent(shape.forkPosition, 1);\n    var tmpPoint = [];\n    tmpPoint[forkDim] = parentPoint[forkDim];\n    tmpPoint[otherDim] = parentPoint[otherDim] + (lastChildPos[otherDim] - parentPoint[otherDim]) * forkPosition;\n    ctx.moveTo(parentPoint[0], parentPoint[1]);\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    ctx.moveTo(firstChildPos[0], firstChildPos[1]);\n    tmpPoint[forkDim] = firstChildPos[forkDim];\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    tmpPoint[forkDim] = lastChildPos[forkDim];\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    ctx.lineTo(lastChildPos[0], lastChildPos[1]);\n\n    for (var i = 1; i < childLen - 1; i++) {\n      var point = childPoints[i];\n      ctx.moveTo(point[0], point[1]);\n      tmpPoint[forkDim] = point[forkDim];\n      ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    }\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    /**\n     * @private\n     * @type {module:echarts/componet/helper/RoamController}\n     */\n\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: this.group\n    };\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    this._updateViewCoordSys(seriesModel, layoutInfo, layout);\n\n    this._updateController(seriesModel, ecModel, api);\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      edgeShape: seriesModel.get('edgeShape'),\n      edgeForkPosition: seriesModel.get('edgeForkPosition'),\n      orient: seriesModel.getOrient(),\n      curvature: seriesModel.get('lineStyle.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // Create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // Update node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\n      // node haven't been initialized with a symbol element,\n      // you can't found it's symbol element through index.\n      // so if we want to remove the symbol element we should insure\n      // that the symbol element is not null.\n\n      if (symbolEl) {\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n      }\n    }).execute();\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n\n    this._updateNodeAndLinkScale(seriesModel);\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  _updateViewCoordSys: function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    data.each(function (idx) {\n      var layout = data.getItemLayout(idx);\n\n      if (layout && !isNaN(layout.x) && !isNaN(layout.y)) {\n        points.push([+layout.x, +layout.y]);\n      }\n    });\n    var min = [];\n    var max = [];\n    bbox.fromPoints(points, min, max); // If don't Store min max when collapse the root node after roam,\n    // the root node will disappear.\n\n    var oldMin = this._min;\n    var oldMax = this._max; // If width or height is 0\n\n    if (max[0] - min[0] === 0) {\n      min[0] = oldMin ? oldMin[0] : min[0] - 1;\n      max[0] = oldMax ? oldMax[0] : max[0] + 1;\n    }\n\n    if (max[1] - min[1] === 0) {\n      min[1] = oldMin ? oldMin[1] : min[1] - 1;\n      max[1] = oldMax ? oldMax[1] : max[1] + 1;\n    }\n\n    var viewCoordSys = seriesModel.coordinateSystem = new View();\n    viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n    viewCoordSys.setBoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n    viewCoordSys.setCenter(seriesModel.get('center'));\n    viewCoordSys.setZoom(seriesModel.get('zoom')); // Here we use viewCoordSys just for computing the 'position' and 'scale' of the group\n\n    this.group.attr({\n      position: viewCoordSys.position,\n      scale: viewCoordSys.scale\n    });\n    this._viewCoordSys = viewCoordSys;\n    this._min = min;\n    this._max = max;\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (e) {\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        dx: e.dx,\n        dy: e.dy\n      });\n    }, this).on('zoom', function (e) {\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      });\n\n      this._updateNodeAndLinkScale(seriesModel);\n    }, this);\n  },\n  _updateNodeAndLinkScale: function (seriesModel) {\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label');\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    var rotate = seriesScope.labelModel.get('rotate');\n    var labelRotateRadian = rotate * (Math.PI / 180);\n    symbolPath.setStyle({\n      textPosition: seriesScope.labelModel.get('position') || textPosition,\n      textRotation: rotate == null ? -rad : labelRotateRadian,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group, seriesScope);\n}\n\nfunction drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group, seriesScope) {\n  var edgeShape = seriesScope.edgeShape;\n  var edge = symbolEl.__edge;\n\n  if (edgeShape === 'curve') {\n    if (node.parentNode && node.parentNode !== virtualRoot) {\n      if (!edge) {\n        edge = symbolEl.__edge = new graphic.BezierCurve({\n          shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n          style: zrUtil.defaults({\n            opacity: 0,\n            strokeNoScale: true\n          }, seriesScope.lineStyle)\n        });\n      }\n\n      graphic.updateProps(edge, {\n        shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n        style: zrUtil.defaults({\n          opacity: 1\n        }, seriesScope.lineStyle)\n      }, seriesModel);\n    }\n  } else if (edgeShape === 'polyline') {\n    if (seriesScope.layout === 'orthogonal') {\n      if (node !== virtualRoot && node.children && node.children.length !== 0 && node.isExpand === true) {\n        var children = node.children;\n        var childPoints = [];\n\n        for (var i = 0; i < children.length; i++) {\n          var childLayout = children[i].getLayout();\n          childPoints.push([childLayout.x, childLayout.y]);\n        }\n\n        if (!edge) {\n          edge = symbolEl.__edge = new TreeShape({\n            shape: {\n              parentPoint: [targetLayout.x, targetLayout.y],\n              childPoints: [[targetLayout.x, targetLayout.y]],\n              orient: seriesScope.orient,\n              forkPosition: seriesScope.edgeForkPosition\n            },\n            style: zrUtil.defaults({\n              opacity: 0,\n              strokeNoScale: true\n            }, seriesScope.lineStyle)\n          });\n        }\n\n        graphic.updateProps(edge, {\n          shape: {\n            parentPoint: [targetLayout.x, targetLayout.y],\n            childPoints: childPoints\n          },\n          style: zrUtil.defaults({\n            opacity: 1\n          }, seriesScope.lineStyle)\n        }, seriesModel);\n      }\n    } else {}\n  }\n\n  group.add(edge);\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var edgeShape = seriesScope.edgeShape;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceEdge = sourceSymbolEl.__edge; // 1. when expand the sub tree, delete the children node should delete the edge of\n  // the source at the same time. because the polyline edge shape is only owned by the source.\n  // 2.when the node is the only children of the source, delete the node should delete the edge of\n  // the source at the same time. the same reason as above.\n\n  var edge = symbolEl.__edge || (source.isExpand === false || source.children.length === 1 ? sourceEdge : undefined);\n  var edgeShape = seriesScope.edgeShape;\n\n  if (edge) {\n    if (edgeShape === 'curve') {\n      graphic.updateProps(edge, {\n        shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n        style: {\n          opacity: 0\n        }\n      }, seriesModel, function () {\n        group.remove(edge);\n      });\n    } else if (edgeShape === 'polyline' && seriesScope.layout === 'orthogonal') {\n      graphic.updateProps(edge, {\n        shape: {\n          parentPoint: [sourceLayout.x, sourceLayout.y],\n          childPoints: [[sourceLayout.x, sourceLayout.y]]\n        },\n        style: {\n          opacity: 0\n        }\n      }, seriesModel, function () {\n        group.remove(edge);\n      });\n    }\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n  var x1;\n  var x2;\n  var y1;\n  var y2;\n\n  if (seriesScope.layout === 'radial') {\n    x1 = sourceLayout.rawX;\n    y1 = sourceLayout.rawY;\n    x2 = targetLayout.rawX;\n    y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    x1 = sourceLayout.x;\n    y1 = sourceLayout.y;\n    x2 = targetLayout.x;\n    y2 = targetLayout.y;\n\n    if (orient === 'LR' || orient === 'RL') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'TB' || orient === 'BT') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n  }\n\n  return {\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2,\n    cpx1: cpx1,\n    cpy1: cpy1,\n    cpx2: cpx2,\n    cpy2: cpy2\n  };\n}\n\nmodule.exports = _default;","map":{"version":3,"names":["zrUtil","require","graphic","SymbolClz","_layoutHelper","radialCoordinate","echarts","bbox","View","roamHelper","RoamController","_cursorHelper","onIrrelevantElement","_config","__DEV__","_number","parsePercent","TreeShape","extendShape","shape","parentPoint","childPoints","orient","forkPosition","style","stroke","fill","buildPath","ctx","childLen","length","firstChildPos","lastChildPos","moveTo","lineTo","forkDim","otherDim","tmpPoint","i","point","_default","extendChartView","type","init","ecModel","api","_oldTree","_mainGroup","Group","_controller","getZr","_controllerHost","target","group","add","render","seriesModel","payload","data","getData","layoutInfo","layout","get","attr","x","width","y","height","_updateViewCoordSys","_updateController","oldData","_data","seriesScope","expandAndCollapse","edgeShape","edgeForkPosition","getOrient","curvature","symbolRotate","symbolOffset","hoverAnimation","useNameLabel","fadeIn","diff","newIdx","symbolNeedsDraw","updateNode","update","oldIdx","symbolEl","getItemGraphicEl","removeNode","remove","execute","_nodeScaleRatio","_updateNodeAndLinkScale","eachItemGraphicEl","el","dataIndex","off","on","dispatchAction","seriesId","id","points","each","idx","getItemLayout","isNaN","push","min","max","fromPoints","oldMin","_min","oldMax","_max","viewCoordSys","coordinateSystem","zoomLimit","setBoundingRect","setCenter","setZoom","position","scale","_viewCoordSys","controller","controllerHost","setPointerChecker","e","rect","getBoundingRect","applyTransform","transform","contain","enable","zoom","getZoom","updateViewOnPan","dx","dy","updateViewOnZoom","originX","originY","nodeScale","_getNodeGlobalScale","invScale","coordSys","nodeScaleRatio","groupScale","groupZoom","roamZoom","dispose","removeAll","getItemVisual","getTreeNodeStyle","node","itemModel","itemStyle","getModel","getItemStyle","hoverItemStyle","lineStyle","getLineStyle","labelModel","hoverLabelModel","isExpand","children","symbolInnerColor","isInit","tree","getNodeByDataIndex","virtualRoot","root","source","parentNode","sourceSymbolEl","sourceLayout","getLayout","sourceOldLayout","rawX","__radialOldRawX","rawY","__radialOldRawY","targetLayout","updateData","__radialRawX","__radialRawY","setItemGraphicEl","updateProps","symbolPath","getSymbolPath","realRoot","rootLayout","rad","isLeft","center","Math","atan2","PI","textPosition","rotate","labelRotateRadian","setStyle","textRotation","textOrigin","verticalAlign","drawEdge","edge","__edge","BezierCurve","getEdgeShape","defaults","opacity","strokeNoScale","childLayout","fadeOut","keepLabel","sourceEdge","undefined","cpx1","cpy1","cpx2","cpy2","x1","x2","y1","y2","radialCoor1","radialCoor2","radialCoor3","radialCoor4","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-admin/node_modules/echarts/lib/chart/tree/TreeView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar View = require(\"../../coord/View\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TreeShape = graphic.extendShape({\n  shape: {\n    parentPoint: [],\n    childPoints: [],\n    orient: '',\n    forkPosition: ''\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var childPoints = shape.childPoints;\n    var childLen = childPoints.length;\n    var parentPoint = shape.parentPoint;\n    var firstChildPos = childPoints[0];\n    var lastChildPos = childPoints[childLen - 1];\n\n    if (childLen === 1) {\n      ctx.moveTo(parentPoint[0], parentPoint[1]);\n      ctx.lineTo(firstChildPos[0], firstChildPos[1]);\n      return;\n    }\n\n    var orient = shape.orient;\n    var forkDim = orient === 'TB' || orient === 'BT' ? 0 : 1;\n    var otherDim = 1 - forkDim;\n    var forkPosition = parsePercent(shape.forkPosition, 1);\n    var tmpPoint = [];\n    tmpPoint[forkDim] = parentPoint[forkDim];\n    tmpPoint[otherDim] = parentPoint[otherDim] + (lastChildPos[otherDim] - parentPoint[otherDim]) * forkPosition;\n    ctx.moveTo(parentPoint[0], parentPoint[1]);\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    ctx.moveTo(firstChildPos[0], firstChildPos[1]);\n    tmpPoint[forkDim] = firstChildPos[forkDim];\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    tmpPoint[forkDim] = lastChildPos[forkDim];\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    ctx.lineTo(lastChildPos[0], lastChildPos[1]);\n\n    for (var i = 1; i < childLen - 1; i++) {\n      var point = childPoints[i];\n      ctx.moveTo(point[0], point[1]);\n      tmpPoint[forkDim] = point[forkDim];\n      ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    }\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    /**\n     * @private\n     * @type {module:echarts/componet/helper/RoamController}\n     */\n\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: this.group\n    };\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    this._updateViewCoordSys(seriesModel, layoutInfo, layout);\n\n    this._updateController(seriesModel, ecModel, api);\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      edgeShape: seriesModel.get('edgeShape'),\n      edgeForkPosition: seriesModel.get('edgeForkPosition'),\n      orient: seriesModel.getOrient(),\n      curvature: seriesModel.get('lineStyle.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // Create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // Update node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\n      // node haven't been initialized with a symbol element,\n      // you can't found it's symbol element through index.\n      // so if we want to remove the symbol element we should insure\n      // that the symbol element is not null.\n\n      if (symbolEl) {\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n      }\n    }).execute();\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n\n    this._updateNodeAndLinkScale(seriesModel);\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  _updateViewCoordSys: function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    data.each(function (idx) {\n      var layout = data.getItemLayout(idx);\n\n      if (layout && !isNaN(layout.x) && !isNaN(layout.y)) {\n        points.push([+layout.x, +layout.y]);\n      }\n    });\n    var min = [];\n    var max = [];\n    bbox.fromPoints(points, min, max); // If don't Store min max when collapse the root node after roam,\n    // the root node will disappear.\n\n    var oldMin = this._min;\n    var oldMax = this._max; // If width or height is 0\n\n    if (max[0] - min[0] === 0) {\n      min[0] = oldMin ? oldMin[0] : min[0] - 1;\n      max[0] = oldMax ? oldMax[0] : max[0] + 1;\n    }\n\n    if (max[1] - min[1] === 0) {\n      min[1] = oldMin ? oldMin[1] : min[1] - 1;\n      max[1] = oldMax ? oldMax[1] : max[1] + 1;\n    }\n\n    var viewCoordSys = seriesModel.coordinateSystem = new View();\n    viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n    viewCoordSys.setBoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n    viewCoordSys.setCenter(seriesModel.get('center'));\n    viewCoordSys.setZoom(seriesModel.get('zoom')); // Here we use viewCoordSys just for computing the 'position' and 'scale' of the group\n\n    this.group.attr({\n      position: viewCoordSys.position,\n      scale: viewCoordSys.scale\n    });\n    this._viewCoordSys = viewCoordSys;\n    this._min = min;\n    this._max = max;\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (e) {\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        dx: e.dx,\n        dy: e.dy\n      });\n    }, this).on('zoom', function (e) {\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      });\n\n      this._updateNodeAndLinkScale(seriesModel);\n    }, this);\n  },\n  _updateNodeAndLinkScale: function (seriesModel) {\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label');\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    var rotate = seriesScope.labelModel.get('rotate');\n    var labelRotateRadian = rotate * (Math.PI / 180);\n    symbolPath.setStyle({\n      textPosition: seriesScope.labelModel.get('position') || textPosition,\n      textRotation: rotate == null ? -rad : labelRotateRadian,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group, seriesScope);\n}\n\nfunction drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group, seriesScope) {\n  var edgeShape = seriesScope.edgeShape;\n  var edge = symbolEl.__edge;\n\n  if (edgeShape === 'curve') {\n    if (node.parentNode && node.parentNode !== virtualRoot) {\n      if (!edge) {\n        edge = symbolEl.__edge = new graphic.BezierCurve({\n          shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n          style: zrUtil.defaults({\n            opacity: 0,\n            strokeNoScale: true\n          }, seriesScope.lineStyle)\n        });\n      }\n\n      graphic.updateProps(edge, {\n        shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n        style: zrUtil.defaults({\n          opacity: 1\n        }, seriesScope.lineStyle)\n      }, seriesModel);\n    }\n  } else if (edgeShape === 'polyline') {\n    if (seriesScope.layout === 'orthogonal') {\n      if (node !== virtualRoot && node.children && node.children.length !== 0 && node.isExpand === true) {\n        var children = node.children;\n        var childPoints = [];\n\n        for (var i = 0; i < children.length; i++) {\n          var childLayout = children[i].getLayout();\n          childPoints.push([childLayout.x, childLayout.y]);\n        }\n\n        if (!edge) {\n          edge = symbolEl.__edge = new TreeShape({\n            shape: {\n              parentPoint: [targetLayout.x, targetLayout.y],\n              childPoints: [[targetLayout.x, targetLayout.y]],\n              orient: seriesScope.orient,\n              forkPosition: seriesScope.edgeForkPosition\n            },\n            style: zrUtil.defaults({\n              opacity: 0,\n              strokeNoScale: true\n            }, seriesScope.lineStyle)\n          });\n        }\n\n        graphic.updateProps(edge, {\n          shape: {\n            parentPoint: [targetLayout.x, targetLayout.y],\n            childPoints: childPoints\n          },\n          style: zrUtil.defaults({\n            opacity: 1\n          }, seriesScope.lineStyle)\n        }, seriesModel);\n      }\n    } else {}\n  }\n\n  group.add(edge);\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var edgeShape = seriesScope.edgeShape;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceEdge = sourceSymbolEl.__edge; // 1. when expand the sub tree, delete the children node should delete the edge of\n  // the source at the same time. because the polyline edge shape is only owned by the source.\n  // 2.when the node is the only children of the source, delete the node should delete the edge of\n  // the source at the same time. the same reason as above.\n\n  var edge = symbolEl.__edge || (source.isExpand === false || source.children.length === 1 ? sourceEdge : undefined);\n  var edgeShape = seriesScope.edgeShape;\n\n  if (edge) {\n    if (edgeShape === 'curve') {\n      graphic.updateProps(edge, {\n        shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n        style: {\n          opacity: 0\n        }\n      }, seriesModel, function () {\n        group.remove(edge);\n      });\n    } else if (edgeShape === 'polyline' && seriesScope.layout === 'orthogonal') {\n      graphic.updateProps(edge, {\n        shape: {\n          parentPoint: [sourceLayout.x, sourceLayout.y],\n          childPoints: [[sourceLayout.x, sourceLayout.y]]\n        },\n        style: {\n          opacity: 0\n        }\n      }, seriesModel, function () {\n        group.remove(edge);\n      });\n    }\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n  var x1;\n  var x2;\n  var y1;\n  var y2;\n\n  if (seriesScope.layout === 'radial') {\n    x1 = sourceLayout.rawX;\n    y1 = sourceLayout.rawY;\n    x2 = targetLayout.rawX;\n    y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    x1 = sourceLayout.x;\n    y1 = sourceLayout.y;\n    x2 = targetLayout.x;\n    y2 = targetLayout.y;\n\n    if (orient === 'LR' || orient === 'RL') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'TB' || orient === 'BT') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n  }\n\n  return {\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2,\n    cpx1: cpx1,\n    cpy1: cpy1,\n    cpx2: cpx2,\n    cpy2: cpy2\n  };\n}\n\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}