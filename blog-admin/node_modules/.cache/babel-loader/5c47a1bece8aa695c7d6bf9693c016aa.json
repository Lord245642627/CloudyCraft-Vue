{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Geo = require(\"./Geo\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar geoSourceManager = require(\"./geoSourceManager\");\n\nvar mapDataStorage = require(\"./mapDataStorage\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspect = rect.width / rect.height * this.aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function (ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var aspectScale = geoModel.get('aspectScale');\n      var invertLongitute = true;\n      var mapRecords = mapDataStorage.retrieveMap(name);\n\n      if (mapRecords && mapRecords[0] && mapRecords[0].type === 'svg') {\n        aspectScale == null && (aspectScale = 1);\n        invertLongitute = false;\n      } else {\n        aspectScale == null && (aspectScale = 0.75);\n      }\n\n      var geo = new Geo(name + idx, name, geoModel.get('nameMap'), invertLongitute);\n      geo.aspectScale = aspectScale;\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.aspectScale = mapSeries[0].get('aspectScale');\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function (originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    var dataNameMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    var source = geoSourceManager.load(mapName, nameMap);\n    zrUtil.each(source.regions, function (region) {\n      var name = region.name;\n      !dataNameMap.get(name) && regionsArr.push({\n        name: name\n      });\n    });\n    return regionsArr;\n  }\n};\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;","map":{"version":3,"names":["_config","require","__DEV__","echarts","zrUtil","Geo","layout","numberUtil","geoSourceManager","mapDataStorage","resizeGeo","geoModel","api","boundingCoords","get","leftTop","rightBottom","isNaN","setBoundingRect","rect","getBoundingRect","boxLayoutOption","center","size","viewWidth","getWidth","viewHeight","getHeight","aspect","width","height","aspectScale","useCenterAndSize","parsePercent","Math","min","viewRect","y","x","getBoxLayoutParams","getLayoutRect","setViewRect","setCenter","setZoom","setGeoCoords","geo","model","each","geoCoord","name","addGeoCoord","geoCreator","dimensions","prototype","create","ecModel","geoList","eachComponent","idx","invertLongitute","mapRecords","retrieveMap","type","zoomLimit","push","coordinateSystem","resize","eachSeries","seriesModel","coordSys","geoIndex","mapModelGroupBySeries","eachSeriesByType","getHostGeoModel","mapType","getMapType","mapSeries","nameMapList","map","singleMapSeries","mergeAll","retrieve","apply","getFilledRegions","originRegionArr","mapName","nameMap","regionsArr","slice","dataNameMap","createHashMap","i","length","set","source","load","regions","region","registerCoordinateSystem","_default","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/cloudycraft-vue/blog-admin/node_modules/echarts/lib/coord/geo/geoCreator.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Geo = require(\"./Geo\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar geoSourceManager = require(\"./geoSourceManager\");\n\nvar mapDataStorage = require(\"./mapDataStorage\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspect = rect.width / rect.height * this.aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function (ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var aspectScale = geoModel.get('aspectScale');\n      var invertLongitute = true;\n      var mapRecords = mapDataStorage.retrieveMap(name);\n\n      if (mapRecords && mapRecords[0] && mapRecords[0].type === 'svg') {\n        aspectScale == null && (aspectScale = 1);\n        invertLongitute = false;\n      } else {\n        aspectScale == null && (aspectScale = 0.75);\n      }\n\n      var geo = new Geo(name + idx, name, geoModel.get('nameMap'), invertLongitute);\n      geo.aspectScale = aspectScale;\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.aspectScale = mapSeries[0].get('aspectScale');\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function (originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    var dataNameMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    var source = geoSourceManager.load(mapName, nameMap);\n    zrUtil.each(source.regions, function (region) {\n      var name = region.name;\n      !dataNameMap.get(name) && regionsArr.push({\n        name: name\n      });\n    });\n    return regionsArr;\n  }\n};\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}