{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar View = require(\"../View\");\n\nvar geoSourceManager = require(\"./geoSourceManager\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Geo description]\n * For backward compatibility, the orginal interface:\n * `name, map, geoJson, specialAreas, nameMap` is kept.\n *\n * @param {string|Object} name\n * @param {string} map Map type\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n * @param {boolean} [invertLongitute=true]\n */\n\n\nfunction Geo(name, map, nameMap, invertLongitute) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  var source = geoSourceManager.load(map, nameMap);\n  this._nameCoordMap = source.nameCoordMap;\n  this._regionsMap = source.regionsMap;\n  this._invertLongitute = invertLongitute == null ? true : invertLongitute;\n  /**\n   * @readOnly\n   */\n\n  this.regions = source.regions;\n  /**\n   * @type {module:zrender/src/core/BoundingRect}\n   */\n\n  this._rect = source.boundingRect;\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @override\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var invertLongitute = this._invertLongitute;\n    rect = rect.clone();\n\n    if (invertLongitute) {\n      // Longitute is inverted\n      rect.y = -rect.y - rect.height;\n    }\n\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransformable.decomposeTransform();\n\n    if (invertLongitute) {\n      var scale = rawTransformable.scale;\n      scale[1] = -scale[1];\n    }\n\n    rawTransformable.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function (name) {\n    return this._nameCoordMap.get(name);\n  },\n\n  /**\n   * @override\n   */\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  },\n\n  /**\n   * @override\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @override\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;","map":{"version":3,"names":["zrUtil","require","BoundingRect","View","geoSourceManager","Geo","name","map","nameMap","invertLongitute","call","source","load","_nameCoordMap","nameCoordMap","_regionsMap","regionsMap","_invertLongitute","regions","_rect","boundingRect","prototype","constructor","type","dimensions","containCoord","coord","i","length","contain","transformTo","x","y","width","height","rect","getBoundingRect","clone","rawTransformable","_rawTransformable","transform","calculateTransform","decomposeTransform","scale","updateTransform","_updateTransform","getRegion","get","getRegionByCoord","addGeoCoord","geoCoord","set","getGeoCoord","dataToPoint","data","noRoam","out","convertToPixel","curry","doConvert","convertFromPixel","mixin","methodName","ecModel","finder","value","geoModel","seriesModel","coordSys","coordinateSystem","getReferringComponents","_default","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/cloudycraft-vue/blog-admin/node_modules/echarts/lib/coord/geo/Geo.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar View = require(\"../View\");\n\nvar geoSourceManager = require(\"./geoSourceManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Geo description]\n * For backward compatibility, the orginal interface:\n * `name, map, geoJson, specialAreas, nameMap` is kept.\n *\n * @param {string|Object} name\n * @param {string} map Map type\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n * @param {boolean} [invertLongitute=true]\n */\nfunction Geo(name, map, nameMap, invertLongitute) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  var source = geoSourceManager.load(map, nameMap);\n  this._nameCoordMap = source.nameCoordMap;\n  this._regionsMap = source.regionsMap;\n  this._invertLongitute = invertLongitute == null ? true : invertLongitute;\n  /**\n   * @readOnly\n   */\n\n  this.regions = source.regions;\n  /**\n   * @type {module:zrender/src/core/BoundingRect}\n   */\n\n  this._rect = source.boundingRect;\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @override\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var invertLongitute = this._invertLongitute;\n    rect = rect.clone();\n\n    if (invertLongitute) {\n      // Longitute is inverted\n      rect.y = -rect.y - rect.height;\n    }\n\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransformable.decomposeTransform();\n\n    if (invertLongitute) {\n      var scale = rawTransformable.scale;\n      scale[1] = -scale[1];\n    }\n\n    rawTransformable.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function (name) {\n    return this._nameCoordMap.get(name);\n  },\n\n  /**\n   * @override\n   */\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  },\n\n  /**\n   * @override\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @override\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}