{"ast":null,"code":"require(\"core-js/modules/esnext.typed-array.find-last.js\");\n\nrequire(\"core-js/modules/esnext.typed-array.find-last-index.js\");\n\nvar curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\n\n/* global Float32Array */\n\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array !== 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy, segmentIgnoreThreshold) {\n    // Compat. Previously there is no segmentIgnoreThreshold.\n    segmentIgnoreThreshold = segmentIgnoreThreshold || 0;\n    this._ux = mathAbs(segmentIgnoreThreshold / dpr / sx) || 0;\n    this._uy = mathAbs(segmentIgnoreThreshold / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cy;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length === len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx === 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i === 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          i += 1;\n          var anticlockwise = 1 - data[i++];\n\n          if (i === 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0;\n    var y0;\n    var xi;\n    var yi;\n    var x;\n    var y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i === 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i === 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;","map":{"version":3,"names":["curve","require","vec2","bbox","BoundingRect","_config","dpr","devicePixelRatio","CMD","M","L","C","Q","A","Z","R","min","max","min2","max2","mathMin","Math","mathMax","mathCos","cos","mathSin","sin","mathSqrt","sqrt","mathAbs","abs","hasTypedArray","Float32Array","PathProxy","notSaveData","_saveData","data","_ctx","prototype","constructor","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","setScale","sx","sy","segmentIgnoreThreshold","getContext","beginPath","ctx","moveTo","x","y","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","x1","y1","x2","y2","x3","y3","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","cx","cy","r","startAngle","endAngle","anticlockwise","arcTo","radius","rect","w","h","closePath","x0","y0","fill","toStatic","stroke","setLineDash","lineDash","Array","lineDashSum","i","length","setLineDashOffset","offset","len","setData","appendPath","path","appendSize","appendPathData","k","cmd","arguments","_expandData","_prevCmd","newData","dashSum","dx","dy","dist","dash","nDash","idx","t","cubicAt","bezierLen","tmpLen","getBoundingRect","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","width","height","rebuildPath","d","ux","uy","theta","dTheta","psi","fs","scaleX","scaleY","isEllipse","translate","rotate","scale","_default","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-admin/node_modules/zrender/lib/core/PathProxy.js"],"sourcesContent":["var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\n\n/* global Float32Array */\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array !== 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy, segmentIgnoreThreshold) {\n    // Compat. Previously there is no segmentIgnoreThreshold.\n    segmentIgnoreThreshold = segmentIgnoreThreshold || 0;\n    this._ux = mathAbs(segmentIgnoreThreshold / dpr / sx) || 0;\n    this._uy = mathAbs(segmentIgnoreThreshold / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cy;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length === len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx === 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i === 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          i += 1;\n          var anticlockwise = 1 - data[i++];\n\n          if (i === 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0;\n    var y0;\n    var xi;\n    var yi;\n    var x;\n    var y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i === 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i === 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}