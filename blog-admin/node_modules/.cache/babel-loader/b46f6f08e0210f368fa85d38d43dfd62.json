{"ast":null,"code":"import Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\nimport './assets/css/index.css';\nimport './assets/css/iconfont.css';\nimport config from './assets/js/config';\nimport axios from 'axios';\nimport VueAxios from 'vue-axios';\nimport ECharts from 'vue-echarts';\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/chart/pie';\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/chart/map';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/title';\nimport NProgress from 'nprogress';\nimport 'nprogress/nprogress.css';\nimport mavonEditor from 'mavon-editor';\nimport 'mavon-editor/dist/css/index.css';\nimport VueCalendarHeatmap from 'vue-calendar-heatmap';\nimport tagCloud from './components/tag-cloud';\nimport dayjs from 'dayjs';\nimport Md_Katex from '@iktakahiro/markdown-it-katex';\nimport mermaidPlugin from \"@agoose77/markdown-it-mermaid\";\nVue.config.productionTip = false;\nVue.prototype.config = config;\nVue.use(mavonEditor);\nVue.use(ElementUI);\nVue.use(tagCloud);\nVue.use(VueCalendarHeatmap);\nVue.use(VueAxios, axios);\nVue.component('v-chart', ECharts);\nVue.prototype.$moment = dayjs;\nmavonEditor.markdownIt.set({}).use(Md_Katex).use(mermaidPlugin);\nVue.filter('date', function (value, formatStr = 'YYYY-MM-DD') {\n  return dayjs(value).format(formatStr);\n});\nVue.filter('dateTime', function (value, formatStr = 'YYYY-MM-DD HH:mm:ss') {\n  return dayjs(value).format(formatStr);\n});\nNProgress.configure({\n  easing: 'ease',\n  speed: 500,\n  showSpinner: false,\n  trickleSpeed: 200,\n  minimum: 0.3\n});\nrouter.beforeEach((to, from, next) => {\n  NProgress.start();\n\n  if (to.path == '/login') {\n    next();\n  } else if (!store.state.userInfo) {\n    next({\n      path: '/login'\n    });\n  } else {\n    next();\n  }\n});\nrouter.afterEach(() => {\n  NProgress.done();\n});\naxios.interceptors.request.use(config => {\n  config.headers['Authorization'] = 'Bearer ' + sessionStorage.getItem('token');\n  return config;\n});\naxios.interceptors.response.use(response => {\n  switch (response.data.code) {\n    case 40001:\n      Vue.prototype.$message({\n        type: 'error',\n        message: response.data.message\n      });\n      router.push({\n        path: '/login'\n      });\n      break;\n\n    case 50000:\n      Vue.prototype.$message({\n        type: 'error',\n        message: response.data.message\n      });\n      break;\n  }\n\n  return response;\n}, error => {\n  return Promise.reject(error);\n});\nnew Vue({\n  router,\n  store,\n  render: h => h(App)\n}).$mount('#app');","map":null,"metadata":{},"sourceType":"module"}