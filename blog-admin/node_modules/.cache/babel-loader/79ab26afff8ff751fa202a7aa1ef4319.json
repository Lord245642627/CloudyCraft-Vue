{"ast":null,"code":"var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","map":{"version":3,"names":["Path","require","vec2","_curve","quadraticSubdivide","cubicSubdivide","quadraticAt","cubicAt","quadraticDerivativeAt","cubicDerivativeAt","out","someVectorAt","shape","t","isTangent","cpx2","cpy2","x1","cpx1","x2","y1","cpy1","y2","_default","extend","type","percent","style","stroke","fill","buildPath","ctx","moveTo","quadraticCurveTo","bezierCurveTo","pointAt","tangentAt","p","normalize","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/cloudycraft-vue/blog-admin/node_modules/zrender/lib/graphic/shape/BezierCurve.js"],"sourcesContent":["var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}