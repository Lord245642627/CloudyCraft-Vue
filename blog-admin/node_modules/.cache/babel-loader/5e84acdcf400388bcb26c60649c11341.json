{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _bbox = require(\"zrender/lib/core/bbox\");\n\nvar fromPoints = _bbox.fromPoints;\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\n\nvar createGridClipPath = _createClipPathFromCoordSys.createGridClipPath;\nvar createPolarClipPath = _createClipPathFromCoordSys.createPolarClipPath;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME step not support polar\n\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getBoundingDiff(points1, points2) {\n  var min1 = [];\n  var max1 = [];\n  var min2 = [];\n  var max2 = [];\n  fromPoints(points1, min1, max1);\n  fromPoints(points2, min2, max2); // Get a max value from each corner of two boundings.\n\n  return Math.max(Math.abs(min1[0] - min2[0]), Math.abs(min1[1] - min2[1]), Math.abs(max1[0] - max2[0]), Math.abs(max1[1] - max2[1]));\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction createLineClipPath(coordSys, hasAnimation, seriesModel) {\n  if (coordSys.type === 'cartesian2d') {\n    var isHorizontal = coordSys.getBaseAxis().isHorizontal();\n    var clipPath = createGridClipPath(coordSys, hasAnimation, seriesModel); // Expand clip shape to avoid clipping when line value exceeds axis\n\n    if (!seriesModel.get('clip', true)) {\n      var rectShape = clipPath.shape;\n      var expandSize = Math.max(rectShape.width, rectShape.height);\n\n      if (isHorizontal) {\n        rectShape.y -= expandSize;\n        rectShape.height += expandSize * 2;\n      } else {\n        rectShape.x -= expandSize;\n        rectShape.width += expandSize * 2;\n      }\n    }\n\n    return clipPath;\n  } else {\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  }\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step');\n    var clipShapeForSymbol;\n\n    if (coordSys && coordSys.getArea && seriesModel.get('clip', true)) {\n      clipShapeForSymbol = coordSys.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n      // See #7913 and `test/dataZoom-clip.html`.\n\n      if (clipShapeForSymbol.width != null) {\n        clipShapeForSymbol.x -= 0.1;\n        clipShapeForSymbol.y -= 0.1;\n        clipShapeForSymbol.width += 0.2;\n        clipShapeForSymbol.height += 0.2;\n      } else if (clipShapeForSymbol.r0) {\n        clipShapeForSymbol.r0 -= 0.5;\n        clipShapeForSymbol.r1 += 0.5;\n      }\n    }\n\n    this._clipShapeForSymbol = clipShapeForSymbol; // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createLineClipPath(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createLineClipPath(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        } // fix #11360: should't draw symbol outside clipShapeForSymbol\n\n\n        if (this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(pt[0], pt[1])) {\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // Don't apply animation if diff is large.\n    // For better result and avoid memory explosion problems like\n    // https://github.com/apache/incubator-echarts/issues/12229\n\n\n    if (getBoundingDiff(current, next) > 3000 || polygon && getBoundingDiff(stackedOnCurrent, stackedOnNext) > 3000) {\n      polyline.setShape({\n        points: next\n      });\n\n      if (polygon) {\n        polygon.setShape({\n          points: next,\n          stackedOnPoints: stackedOnNext\n        });\n      }\n\n      return;\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;","map":{"version":3,"names":["_config","require","__DEV__","zrUtil","_bbox","fromPoints","SymbolDraw","SymbolClz","lineAnimationDiff","graphic","modelUtil","_poly","Polyline","Polygon","ChartView","_helper","prepareDataCoordInfo","getStackedOnPoint","_createClipPathFromCoordSys","createGridClipPath","createPolarClipPath","isPointsSame","points1","points2","length","i","p1","p2","getBoundingDiff","min1","max1","min2","max2","Math","max","abs","getSmooth","smooth","getStackedOnPoints","coordSys","data","dataCoordInfo","valueDim","points","idx","len","count","push","turnPointsIntoStep","stepTurnAt","baseAxis","getBaseAxis","baseIndex","dim","stepPoints","nextPt","pt","stepPt","middle","stepPt2","getVisualGradient","visualMetaList","getVisual","type","coordDim","visualMeta","dimIndex","dimension","dimName","dimensions","dimInfo","getDimensionInfo","axis","getAxis","colorStops","map","stops","stop","coord","toGlobalCoord","dataToCoord","value","color","stopLen","outerColors","slice","reverse","tinyExtent","minCoord","maxCoord","coordSpan","each","offset","unshift","gradient","LinearGradient","getIsIgnoreFunc","seriesModel","showAllSymbol","get","isAuto","categoryAxis","getAxesByScale","canShowAllSymbolForCategory","categoryDataDim","mapDimension","labelMap","getViewLabels","labelItem","tickValue","dataIndex","hasOwnProperty","axisExtent","getExtent","availSize","scale","isNaN","dataLen","step","round","getSymbolSize","isHorizontal","createLineClipPath","hasAnimation","clipPath","rectShape","shape","expandSize","width","height","y","x","_default","extend","init","lineGroup","Group","symbolDraw","group","add","_symbolDraw","_lineGroup","render","ecModel","api","coordinateSystem","getData","lineStyleModel","getModel","areaStyleModel","mapArray","getItemLayout","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","isEmpty","valueOrigin","stackedOnPoints","showSymbol","isIgnoreFunc","oldData","_data","eachItemGraphicEl","el","__temp","remove","setItemGraphicEl","clipShapeForSymbol","getArea","r0","r1","_clipShapeForSymbol","_step","updateData","isIgnore","clipShape","_newPolyline","_newPolygon","setClipPath","stopAnimation","_stackedOnPoints","_points","_updateAnimation","setShape","visualColor","useStyle","defaults","getLineStyle","fill","stroke","lineJoin","smoothMonotone","connectNulls","stackedOnSeries","getCalculationInfo","stackedOnSmooth","getAreaStyle","opacity","_valueOrigin","dispose","highlight","payload","queryDataIndex","Array","symbol","getItemGraphicEl","contain","position","setZ","ignore","stopSymbolAnimation","prototype","call","downplay","silent","z2","hostModel","diff","current","stackedOnCurrent","next","stackedOnNext","__points","updateProps","updatedDataInfo","diffStatus","status","cmd","idx1","ptIdx","animators","during","attr","removeAll","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-admin/node_modules/echarts/lib/chart/line/LineView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _bbox = require(\"zrender/lib/core/bbox\");\n\nvar fromPoints = _bbox.fromPoints;\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\n\nvar createGridClipPath = _createClipPathFromCoordSys.createGridClipPath;\nvar createPolarClipPath = _createClipPathFromCoordSys.createPolarClipPath;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getBoundingDiff(points1, points2) {\n  var min1 = [];\n  var max1 = [];\n  var min2 = [];\n  var max2 = [];\n  fromPoints(points1, min1, max1);\n  fromPoints(points2, min2, max2); // Get a max value from each corner of two boundings.\n\n  return Math.max(Math.abs(min1[0] - min2[0]), Math.abs(min1[1] - min2[1]), Math.abs(max1[0] - max2[0]), Math.abs(max1[1] - max2[1]));\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction createLineClipPath(coordSys, hasAnimation, seriesModel) {\n  if (coordSys.type === 'cartesian2d') {\n    var isHorizontal = coordSys.getBaseAxis().isHorizontal();\n    var clipPath = createGridClipPath(coordSys, hasAnimation, seriesModel); // Expand clip shape to avoid clipping when line value exceeds axis\n\n    if (!seriesModel.get('clip', true)) {\n      var rectShape = clipPath.shape;\n      var expandSize = Math.max(rectShape.width, rectShape.height);\n\n      if (isHorizontal) {\n        rectShape.y -= expandSize;\n        rectShape.height += expandSize * 2;\n      } else {\n        rectShape.x -= expandSize;\n        rectShape.width += expandSize * 2;\n      }\n    }\n\n    return clipPath;\n  } else {\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  }\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step');\n    var clipShapeForSymbol;\n\n    if (coordSys && coordSys.getArea && seriesModel.get('clip', true)) {\n      clipShapeForSymbol = coordSys.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n      // See #7913 and `test/dataZoom-clip.html`.\n\n      if (clipShapeForSymbol.width != null) {\n        clipShapeForSymbol.x -= 0.1;\n        clipShapeForSymbol.y -= 0.1;\n        clipShapeForSymbol.width += 0.2;\n        clipShapeForSymbol.height += 0.2;\n      } else if (clipShapeForSymbol.r0) {\n        clipShapeForSymbol.r0 -= 0.5;\n        clipShapeForSymbol.r1 += 0.5;\n      }\n    }\n\n    this._clipShapeForSymbol = clipShapeForSymbol; // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createLineClipPath(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createLineClipPath(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        } // fix #11360: should't draw symbol outside clipShapeForSymbol\n\n\n        if (this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(pt[0], pt[1])) {\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // Don't apply animation if diff is large.\n    // For better result and avoid memory explosion problems like\n    // https://github.com/apache/incubator-echarts/issues/12229\n\n\n    if (getBoundingDiff(current, next) > 3000 || polygon && getBoundingDiff(stackedOnCurrent, stackedOnNext) > 3000) {\n      polyline.setShape({\n        points: next\n      });\n\n      if (polygon) {\n        polygon.setShape({\n          points: next,\n          stackedOnPoints: stackedOnNext\n        });\n      }\n\n      return;\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}