{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport createPersistedState from 'vuex-persistedstate';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    collapse: false,\n    tabList: [{\n      name: '扶뒬못',\n      path: '/'\n    }],\n    userInfo: null,\n    userMenus: [],\n    pageState: {\n      articleList: 1,\n      category: 1,\n      tag: 1,\n      comment: 1,\n      talkList: 1,\n      user: 1,\n      online: 1,\n      role: 1,\n      quartz: 1,\n      friendLink: 1,\n      operationLog: 1,\n      exceptionLog: 1,\n      quartzLog: {\n        jobId: -1,\n        current: 1\n      },\n      photo: {\n        albumId: -1,\n        current: 1\n      }\n    }\n  },\n  mutations: {\n    saveTab(state, tab) {\n      if (state.tabList.findIndex(item => item.path === tab.path) == -1) {\n        state.tabList.push({\n          name: tab.name,\n          path: tab.path\n        });\n      }\n    },\n\n    removeTab(state, tab) {\n      var index = state.tabList.findIndex(item => item.name === tab.name);\n      state.tabList.splice(index, 1);\n    },\n\n    resetTab(state) {\n      state.tabList = [{\n        name: '扶뒬못',\n        path: '/'\n      }];\n    },\n\n    trigger(state) {\n      state.collapse = !state.collapse;\n    },\n\n    login(state, user) {\n      sessionStorage.setItem('token', user.token);\n      state.userInfo = user;\n    },\n\n    saveUserMenus(state, userMenus) {\n      state.userMenus = userMenus;\n    },\n\n    logout(state) {\n      state.userInfo = null;\n      sessionStorage.removeItem('token');\n      state.userMenus = [];\n    },\n\n    updateAvatar(state, avatar) {\n      state.userInfo.avatar = avatar;\n    },\n\n    updateUserInfo(state, user) {\n      state.userInfo.nickname = user.nickname;\n      state.userInfo.intro = user.intro;\n      state.userInfo.webSite = user.webSite;\n    },\n\n    updateArticleListPageState(state, current) {\n      state.pageState.articleList = current;\n    },\n\n    updateCategoryPageState(state, current) {\n      state.pageState.category = current;\n    },\n\n    updateTagPageState(state, current) {\n      state.pageState.tag = current;\n    },\n\n    updateCommentPageState(state, current) {\n      state.pageState.comment = current;\n    },\n\n    updateTalkListPageState(state, current) {\n      state.pageState.talkList = current;\n    },\n\n    updateUserPageState(state, current) {\n      state.pageState.user = current;\n    },\n\n    updateOnlinePageState(state, current) {\n      state.pageState.online = current;\n    },\n\n    updateRolePageState(state, current) {\n      state.pageState.role = current;\n    },\n\n    updateQuartzPageState(state, current) {\n      state.pageState.quartz = current;\n    },\n\n    updateFriendLinkPageState(state, current) {\n      state.pageState.friendLink = current;\n    },\n\n    updateOperationLogPageState(state, current) {\n      state.pageState.operationLog = current;\n    },\n\n    updateExceptionLogPageState(state, current) {\n      state.pageState.exceptionLog = current;\n    },\n\n    updateQuartzLogPageState(state, quartzLog) {\n      state.pageState.quartzLog.jobId = quartzLog.jobId;\n      state.pageState.quartzLog.current = quartzLog.current;\n    },\n\n    updatePhotoPageState(state, photo) {\n      state.pageState.photo.albumId = photo.albumId;\n      state.pageState.photo.current = photo.current;\n    }\n\n  },\n  plugins: [createPersistedState({\n    storage: window.sessionStorage\n  })]\n});","map":null,"metadata":{},"sourceType":"module"}