{"ast":null,"code":"/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\nvar Ruler = require('./ruler');\n\nvar _rules = [['normalize', require('./rules_core/normalize')], ['block', require('./rules_core/block')], ['inline', require('./rules_core/inline')], ['linkify', require('./rules_core/linkify')], ['replacements', require('./rules_core/replacements')], ['smartquotes', require('./rules_core/smartquotes')], // `text_join` finds `text_special` tokens (for escape sequences)\n// and joins them with the rest of the text\n['text_join', require('./rules_core/text_join')]];\n/**\n * new Core()\n **/\n\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\n\n\nCore.prototype.process = function (state) {\n  var i, l, rules;\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\nmodule.exports = Core;","map":{"version":3,"names":["Ruler","require","_rules","Core","ruler","i","length","push","prototype","process","state","l","rules","getRules","State","module","exports"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/cloudycraft-vue/blog-web/node_modules/markdown-it/lib/parser_core.js"],"sourcesContent":["/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  [ 'text_join',      require('./rules_core/text_join')      ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAIA,KAAK,GAAIC,OAAO,CAAC,SAAD,CAApB;;AAGA,IAAIC,MAAM,GAAG,CACX,CAAE,WAAF,EAAoBD,OAAO,CAAC,wBAAD,CAA3B,CADW,EAEX,CAAE,OAAF,EAAoBA,OAAO,CAAC,oBAAD,CAA3B,CAFW,EAGX,CAAE,QAAF,EAAoBA,OAAO,CAAC,qBAAD,CAA3B,CAHW,EAIX,CAAE,SAAF,EAAoBA,OAAO,CAAC,sBAAD,CAA3B,CAJW,EAKX,CAAE,cAAF,EAAoBA,OAAO,CAAC,2BAAD,CAA3B,CALW,EAMX,CAAE,aAAF,EAAoBA,OAAO,CAAC,0BAAD,CAA3B,CANW,EAOX;AACA;AACA,CAAE,WAAF,EAAoBA,OAAO,CAAC,wBAAD,CAA3B,CATW,CAAb;AAaA;AACA;AACA;;AACA,SAASE,IAAT,GAAgB;EACd;AACF;AACA;AACA;AACA;EACE,KAAKC,KAAL,GAAa,IAAIJ,KAAJ,EAAb;;EAEA,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACI,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;IACtC,KAAKD,KAAL,CAAWG,IAAX,CAAgBL,MAAM,CAACG,CAAD,CAAN,CAAU,CAAV,CAAhB,EAA8BH,MAAM,CAACG,CAAD,CAAN,CAAU,CAAV,CAA9B;EACD;AACF;AAGD;AACA;AACA;AACA;AACA;;;AACAF,IAAI,CAACK,SAAL,CAAeC,OAAf,GAAyB,UAAUC,KAAV,EAAiB;EACxC,IAAIL,CAAJ,EAAOM,CAAP,EAAUC,KAAV;EAEAA,KAAK,GAAG,KAAKR,KAAL,CAAWS,QAAX,CAAoB,EAApB,CAAR;;EAEA,KAAKR,CAAC,GAAG,CAAJ,EAAOM,CAAC,GAAGC,KAAK,CAACN,MAAtB,EAA8BD,CAAC,GAAGM,CAAlC,EAAqCN,CAAC,EAAtC,EAA0C;IACxCO,KAAK,CAACP,CAAD,CAAL,CAASK,KAAT;EACD;AACF,CARD;;AAUAP,IAAI,CAACK,SAAL,CAAeM,KAAf,GAAuBb,OAAO,CAAC,yBAAD,CAA9B;AAGAc,MAAM,CAACC,OAAP,GAAiBb,IAAjB"},"metadata":{},"sourceType":"script"}