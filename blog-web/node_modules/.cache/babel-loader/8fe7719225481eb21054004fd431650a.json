{"ast":null,"code":"import { timeInterval } from \"./interval.js\";\nexport const millisecond = timeInterval(() => {// noop\n}, (date, step) => {\n  date.setTime(+date + step);\n}, (start, end) => {\n  return end - start;\n}); // An optimized implementation for this simple case.\n\nmillisecond.every = k => {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return timeInterval(date => {\n    date.setTime(Math.floor(date / k) * k);\n  }, (date, step) => {\n    date.setTime(+date + step * k);\n  }, (start, end) => {\n    return (end - start) / k;\n  });\n};\n\nexport const milliseconds = millisecond.range;","map":null,"metadata":{},"sourceType":"module"}