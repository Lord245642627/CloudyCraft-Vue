{"ast":null,"code":"// Enclose abbreviations in <abbr> tags\n//\n'use strict';\n\nmodule.exports = function sub_plugin(md) {\n  var escapeRE = md.utils.escapeRE,\n      arrayReplaceAt = md.utils.arrayReplaceAt; // ASCII characters in Cc, Sc, Sm, Sk categories we should terminate on;\n  // you can check character classes here:\n  // http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n\n  var OTHER_CHARS = ' \\r\\n$+<=>^`|~';\n  var UNICODE_PUNCT_RE = md.utils.lib.ucmicro.P.source;\n  var UNICODE_SPACE_RE = md.utils.lib.ucmicro.Z.source;\n\n  function abbr_def(state, startLine, endLine, silent) {\n    var label,\n        title,\n        ch,\n        labelStart,\n        labelEnd,\n        pos = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    if (pos + 2 >= max) {\n      return false;\n    }\n\n    if (state.src.charCodeAt(pos++) !== 0x2A\n    /* * */\n    ) {\n      return false;\n    }\n\n    if (state.src.charCodeAt(pos++) !== 0x5B\n    /* [ */\n    ) {\n      return false;\n    }\n\n    labelStart = pos;\n\n    for (; pos < max; pos++) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x5B\n      /* [ */\n      ) {\n        return false;\n      } else if (ch === 0x5D\n      /* ] */\n      ) {\n        labelEnd = pos;\n        break;\n      } else if (ch === 0x5C\n      /* \\ */\n      ) {\n        pos++;\n      }\n    }\n\n    if (labelEnd < 0 || state.src.charCodeAt(labelEnd + 1) !== 0x3A\n    /* : */\n    ) {\n      return false;\n    }\n\n    if (silent) {\n      return true;\n    }\n\n    label = state.src.slice(labelStart, labelEnd).replace(/\\\\(.)/g, '$1');\n    title = state.src.slice(labelEnd + 2, max).trim();\n\n    if (label.length === 0) {\n      return false;\n    }\n\n    if (title.length === 0) {\n      return false;\n    }\n\n    if (!state.env.abbreviations) {\n      state.env.abbreviations = {};\n    } // prepend ':' to avoid conflict with Object.prototype members\n\n\n    if (typeof state.env.abbreviations[':' + label] === 'undefined') {\n      state.env.abbreviations[':' + label] = title;\n    }\n\n    state.line = startLine + 1;\n    return true;\n  }\n\n  function abbr_replace(state) {\n    var i,\n        j,\n        l,\n        tokens,\n        token,\n        text,\n        nodes,\n        pos,\n        reg,\n        m,\n        regText,\n        regSimple,\n        currentToken,\n        blockTokens = state.tokens;\n\n    if (!state.env.abbreviations) {\n      return;\n    }\n\n    regSimple = new RegExp('(?:' + Object.keys(state.env.abbreviations).map(function (x) {\n      return x.substr(1);\n    }).sort(function (a, b) {\n      return b.length - a.length;\n    }).map(escapeRE).join('|') + ')');\n    regText = '(^|' + UNICODE_PUNCT_RE + '|' + UNICODE_SPACE_RE + '|[' + OTHER_CHARS.split('').map(escapeRE).join('') + '])' + '(' + Object.keys(state.env.abbreviations).map(function (x) {\n      return x.substr(1);\n    }).sort(function (a, b) {\n      return b.length - a.length;\n    }).map(escapeRE).join('|') + ')' + '($|' + UNICODE_PUNCT_RE + '|' + UNICODE_SPACE_RE + '|[' + OTHER_CHARS.split('').map(escapeRE).join('') + '])';\n    reg = new RegExp(regText, 'g');\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') {\n        continue;\n      }\n\n      tokens = blockTokens[j].children; // We scan from the end, to keep position when new tags added.\n\n      for (i = tokens.length - 1; i >= 0; i--) {\n        currentToken = tokens[i];\n\n        if (currentToken.type !== 'text') {\n          continue;\n        }\n\n        pos = 0;\n        text = currentToken.content;\n        reg.lastIndex = 0;\n        nodes = []; // fast regexp run to determine whether there are any abbreviated words\n        // in the current token\n\n        if (!regSimple.test(text)) {\n          continue;\n        }\n\n        while (m = reg.exec(text)) {\n          if (m.index > 0 || m[1].length > 0) {\n            token = new state.Token('text', '', 0);\n            token.content = text.slice(pos, m.index + m[1].length);\n            nodes.push(token);\n          }\n\n          token = new state.Token('abbr_open', 'abbr', 1);\n          token.attrs = [['title', state.env.abbreviations[':' + m[2]]]];\n          nodes.push(token);\n          token = new state.Token('text', '', 0);\n          token.content = m[2];\n          nodes.push(token);\n          token = new state.Token('abbr_close', 'abbr', -1);\n          nodes.push(token);\n          reg.lastIndex -= m[3].length;\n          pos = reg.lastIndex;\n        }\n\n        if (!nodes.length) {\n          continue;\n        }\n\n        if (pos < text.length) {\n          token = new state.Token('text', '', 0);\n          token.content = text.slice(pos);\n          nodes.push(token);\n        } // replace current node\n\n\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n\n  md.block.ruler.before('reference', 'abbr_def', abbr_def, {\n    alt: ['paragraph', 'reference']\n  });\n  md.core.ruler.after('linkify', 'abbr_replace', abbr_replace);\n};","map":{"version":3,"names":["module","exports","sub_plugin","md","escapeRE","utils","arrayReplaceAt","OTHER_CHARS","UNICODE_PUNCT_RE","lib","ucmicro","P","source","UNICODE_SPACE_RE","Z","abbr_def","state","startLine","endLine","silent","label","title","ch","labelStart","labelEnd","pos","bMarks","tShift","max","eMarks","src","charCodeAt","slice","replace","trim","length","env","abbreviations","line","abbr_replace","i","j","l","tokens","token","text","nodes","reg","m","regText","regSimple","currentToken","blockTokens","RegExp","Object","keys","map","x","substr","sort","a","b","join","split","type","children","content","lastIndex","test","exec","index","Token","push","attrs","block","ruler","before","alt","core","after"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/cloudycraft-vue/blog-web/node_modules/markdown-it-abbr/index.js"],"sourcesContent":["// Enclose abbreviations in <abbr> tags\n//\n'use strict';\n\n\nmodule.exports = function sub_plugin(md) {\n  var escapeRE        = md.utils.escapeRE,\n      arrayReplaceAt  = md.utils.arrayReplaceAt;\n\n  // ASCII characters in Cc, Sc, Sm, Sk categories we should terminate on;\n  // you can check character classes here:\n  // http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n  var OTHER_CHARS      = ' \\r\\n$+<=>^`|~';\n\n  var UNICODE_PUNCT_RE = md.utils.lib.ucmicro.P.source;\n  var UNICODE_SPACE_RE = md.utils.lib.ucmicro.Z.source;\n\n\n  function abbr_def(state, startLine, endLine, silent) {\n    var label, title, ch, labelStart, labelEnd,\n        pos = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    if (pos + 2 >= max) { return false; }\n\n    if (state.src.charCodeAt(pos++) !== 0x2A/* * */) { return false; }\n    if (state.src.charCodeAt(pos++) !== 0x5B/* [ */) { return false; }\n\n    labelStart = pos;\n\n    for (; pos < max; pos++) {\n      ch = state.src.charCodeAt(pos);\n      if (ch === 0x5B /* [ */) {\n        return false;\n      } else if (ch === 0x5D /* ] */) {\n        labelEnd = pos;\n        break;\n      } else if (ch === 0x5C /* \\ */) {\n        pos++;\n      }\n    }\n\n    if (labelEnd < 0 || state.src.charCodeAt(labelEnd + 1) !== 0x3A/* : */) {\n      return false;\n    }\n\n    if (silent) { return true; }\n\n    label = state.src.slice(labelStart, labelEnd).replace(/\\\\(.)/g, '$1');\n    title = state.src.slice(labelEnd + 2, max).trim();\n    if (label.length === 0) { return false; }\n    if (title.length === 0) { return false; }\n    if (!state.env.abbreviations) { state.env.abbreviations = {}; }\n    // prepend ':' to avoid conflict with Object.prototype members\n    if (typeof state.env.abbreviations[':' + label] === 'undefined') {\n      state.env.abbreviations[':' + label] = title;\n    }\n\n    state.line = startLine + 1;\n    return true;\n  }\n\n\n  function abbr_replace(state) {\n    var i, j, l, tokens, token, text, nodes, pos, reg, m, regText, regSimple,\n        currentToken,\n        blockTokens = state.tokens;\n\n    if (!state.env.abbreviations) { return; }\n\n    regSimple = new RegExp('(?:' +\n      Object.keys(state.env.abbreviations).map(function (x) {\n        return x.substr(1);\n      }).sort(function (a, b) {\n        return b.length - a.length;\n      }).map(escapeRE).join('|') +\n    ')');\n\n    regText = '(^|' + UNICODE_PUNCT_RE + '|' + UNICODE_SPACE_RE +\n                    '|[' + OTHER_CHARS.split('').map(escapeRE).join('') + '])'\n            + '(' + Object.keys(state.env.abbreviations).map(function (x) {\n                      return x.substr(1);\n                    }).sort(function (a, b) {\n                      return b.length - a.length;\n                    }).map(escapeRE).join('|') + ')'\n            + '($|' + UNICODE_PUNCT_RE + '|' + UNICODE_SPACE_RE +\n                    '|[' + OTHER_CHARS.split('').map(escapeRE).join('') + '])';\n\n    reg = new RegExp(regText, 'g');\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      for (i = tokens.length - 1; i >= 0; i--) {\n        currentToken = tokens[i];\n        if (currentToken.type !== 'text') { continue; }\n\n        pos = 0;\n        text = currentToken.content;\n        reg.lastIndex = 0;\n        nodes = [];\n\n        // fast regexp run to determine whether there are any abbreviated words\n        // in the current token\n        if (!regSimple.test(text)) { continue; }\n\n        while ((m = reg.exec(text))) {\n          if (m.index > 0 || m[1].length > 0) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(pos, m.index + m[1].length);\n            nodes.push(token);\n          }\n\n          token         = new state.Token('abbr_open', 'abbr', 1);\n          token.attrs   = [ [ 'title', state.env.abbreviations[':' + m[2]] ] ];\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = m[2];\n          nodes.push(token);\n\n          token         = new state.Token('abbr_close', 'abbr', -1);\n          nodes.push(token);\n\n          reg.lastIndex -= m[3].length;\n          pos = reg.lastIndex;\n        }\n\n        if (!nodes.length) { continue; }\n\n        if (pos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(pos);\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n\n  md.block.ruler.before('reference', 'abbr_def', abbr_def, { alt: [ 'paragraph', 'reference' ] });\n\n  md.core.ruler.after('linkify', 'abbr_replace', abbr_replace);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}