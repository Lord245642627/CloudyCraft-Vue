{"ast":null,"code":"import Mermaid from \"mermaid\"; // Define interface to await readiness of import\n\nexport default function mermaid(md, options) {\n  // Setup Mermaid\n  Mermaid.initialize(Object.assign({\n    securityLevel: \"loose\"\n  }, options));\n\n  function getLangName(info) {\n    return info.split(/\\s+/g)[0];\n  } // Store reference to original renderer.\n\n\n  let defaultFenceRenderer = md.renderer.rules.fence; // Render custom code types as SVGs, letting the fence parser do all the heavy lifting.\n\n  function customFenceRenderer(tokens, idx, options, env, slf) {\n    let token = tokens[idx];\n    let info = token.info.trim();\n    let langName = info ? getLangName(info) : \"\";\n\n    if ([\"mermaid\", \"{mermaid}\"].indexOf(langName) === -1) {\n      if (defaultFenceRenderer !== undefined) {\n        return defaultFenceRenderer(tokens, idx, options, env, slf);\n      } // Missing fence renderer!\n\n\n      return \"\";\n    }\n\n    let imageHTML = \"\";\n    let imageAttrs = []; // Create element to render into\n\n    const element = document.createElement(\"div\");\n    document.body.appendChild(element); // Render with Mermaid\n\n    try {\n      const container_id = \"mermaid-container\";\n      Mermaid.mermaidAPI.render(container_id, token.content, html => {\n        // We need to forcibly extract the max-width/height attributes to set on img tag\n        let svg = document.getElementById(container_id);\n\n        if (svg !== null) {\n          imageAttrs.push([\"style\", `max-width:${svg.style.maxWidth};max-height:${svg.style.maxHeight}`]);\n        } // Store HTML\n\n\n        imageHTML = html;\n      }, element);\n    } catch (e) {\n      return `<div class=\"alert alert-danger\">${e}</div>`;\n    } finally {\n      element.remove();\n    } // Store encoded image data\n\n\n    imageAttrs.push([\"src\", `data:image/svg+xml,${encodeURIComponent(imageHTML)}`]);\n    return `<img ${slf.renderAttrs({\n      attrs: imageAttrs\n    })}>`;\n  }\n\n  md.renderer.rules.fence = customFenceRenderer;\n}","map":{"version":3,"names":["Mermaid","mermaid","md","options","initialize","Object","assign","securityLevel","getLangName","info","split","defaultFenceRenderer","renderer","rules","fence","customFenceRenderer","tokens","idx","env","slf","token","trim","langName","indexOf","undefined","imageHTML","imageAttrs","element","document","createElement","body","appendChild","container_id","mermaidAPI","render","content","html","svg","getElementById","push","style","maxWidth","maxHeight","e","remove","encodeURIComponent","renderAttrs","attrs"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/cloudycraft-vue/blog-web/node_modules/@agoose77/markdown-it-mermaid/lib/index.js"],"sourcesContent":["import Mermaid from \"mermaid\";\n// Define interface to await readiness of import\nexport default function mermaid(md, options) {\n    // Setup Mermaid\n    Mermaid.initialize(Object.assign({ securityLevel: \"loose\" }, options));\n    function getLangName(info) {\n        return info.split(/\\s+/g)[0];\n    }\n    // Store reference to original renderer.\n    let defaultFenceRenderer = md.renderer.rules.fence;\n    // Render custom code types as SVGs, letting the fence parser do all the heavy lifting.\n    function customFenceRenderer(tokens, idx, options, env, slf) {\n        let token = tokens[idx];\n        let info = token.info.trim();\n        let langName = info ? getLangName(info) : \"\";\n        if ([\"mermaid\", \"{mermaid}\"].indexOf(langName) === -1) {\n            if (defaultFenceRenderer !== undefined) {\n                return defaultFenceRenderer(tokens, idx, options, env, slf);\n            }\n            // Missing fence renderer!\n            return \"\";\n        }\n        let imageHTML = \"\";\n        let imageAttrs = [];\n        // Create element to render into\n        const element = document.createElement(\"div\");\n        document.body.appendChild(element);\n        // Render with Mermaid\n        try {\n            const container_id = \"mermaid-container\";\n            Mermaid.mermaidAPI.render(container_id, token.content, (html) => {\n                // We need to forcibly extract the max-width/height attributes to set on img tag\n                let svg = document.getElementById(container_id);\n                if (svg !== null) {\n                    imageAttrs.push([\n                        \"style\",\n                        `max-width:${svg.style.maxWidth};max-height:${svg.style.maxHeight}`,\n                    ]);\n                }\n                // Store HTML\n                imageHTML = html;\n            }, element);\n        }\n        catch (e) {\n            return `<div class=\"alert alert-danger\">${e}</div>`;\n        }\n        finally {\n            element.remove();\n        }\n        // Store encoded image data\n        imageAttrs.push([\"src\", `data:image/svg+xml,${encodeURIComponent(imageHTML)}`]);\n        return `<img ${slf.renderAttrs({ attrs: imageAttrs })}>`;\n    }\n    md.renderer.rules.fence = customFenceRenderer;\n}\n"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB,C,CACA;;AACA,eAAe,SAASC,OAAT,CAAiBC,EAAjB,EAAqBC,OAArB,EAA8B;EACzC;EACAH,OAAO,CAACI,UAAR,CAAmBC,MAAM,CAACC,MAAP,CAAc;IAAEC,aAAa,EAAE;EAAjB,CAAd,EAA0CJ,OAA1C,CAAnB;;EACA,SAASK,WAAT,CAAqBC,IAArB,EAA2B;IACvB,OAAOA,IAAI,CAACC,KAAL,CAAW,MAAX,EAAmB,CAAnB,CAAP;EACH,CALwC,CAMzC;;;EACA,IAAIC,oBAAoB,GAAGT,EAAE,CAACU,QAAH,CAAYC,KAAZ,CAAkBC,KAA7C,CAPyC,CAQzC;;EACA,SAASC,mBAAT,CAA6BC,MAA7B,EAAqCC,GAArC,EAA0Cd,OAA1C,EAAmDe,GAAnD,EAAwDC,GAAxD,EAA6D;IACzD,IAAIC,KAAK,GAAGJ,MAAM,CAACC,GAAD,CAAlB;IACA,IAAIR,IAAI,GAAGW,KAAK,CAACX,IAAN,CAAWY,IAAX,EAAX;IACA,IAAIC,QAAQ,GAAGb,IAAI,GAAGD,WAAW,CAACC,IAAD,CAAd,GAAuB,EAA1C;;IACA,IAAI,CAAC,SAAD,EAAY,WAAZ,EAAyBc,OAAzB,CAAiCD,QAAjC,MAA+C,CAAC,CAApD,EAAuD;MACnD,IAAIX,oBAAoB,KAAKa,SAA7B,EAAwC;QACpC,OAAOb,oBAAoB,CAACK,MAAD,EAASC,GAAT,EAAcd,OAAd,EAAuBe,GAAvB,EAA4BC,GAA5B,CAA3B;MACH,CAHkD,CAInD;;;MACA,OAAO,EAAP;IACH;;IACD,IAAIM,SAAS,GAAG,EAAhB;IACA,IAAIC,UAAU,GAAG,EAAjB,CAZyD,CAazD;;IACA,MAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAhB;IACAD,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BJ,OAA1B,EAfyD,CAgBzD;;IACA,IAAI;MACA,MAAMK,YAAY,GAAG,mBAArB;MACAhC,OAAO,CAACiC,UAAR,CAAmBC,MAAnB,CAA0BF,YAA1B,EAAwCZ,KAAK,CAACe,OAA9C,EAAwDC,IAAD,IAAU;QAC7D;QACA,IAAIC,GAAG,GAAGT,QAAQ,CAACU,cAAT,CAAwBN,YAAxB,CAAV;;QACA,IAAIK,GAAG,KAAK,IAAZ,EAAkB;UACdX,UAAU,CAACa,IAAX,CAAgB,CACZ,OADY,EAEX,aAAYF,GAAG,CAACG,KAAJ,CAAUC,QAAS,eAAcJ,GAAG,CAACG,KAAJ,CAAUE,SAAU,EAFtD,CAAhB;QAIH,CAR4D,CAS7D;;;QACAjB,SAAS,GAAGW,IAAZ;MACH,CAXD,EAWGT,OAXH;IAYH,CAdD,CAeA,OAAOgB,CAAP,EAAU;MACN,OAAQ,mCAAkCA,CAAE,QAA5C;IACH,CAjBD,SAkBQ;MACJhB,OAAO,CAACiB,MAAR;IACH,CArCwD,CAsCzD;;;IACAlB,UAAU,CAACa,IAAX,CAAgB,CAAC,KAAD,EAAS,sBAAqBM,kBAAkB,CAACpB,SAAD,CAAY,EAA5D,CAAhB;IACA,OAAQ,QAAON,GAAG,CAAC2B,WAAJ,CAAgB;MAAEC,KAAK,EAAErB;IAAT,CAAhB,CAAuC,GAAtD;EACH;;EACDxB,EAAE,CAACU,QAAH,CAAYC,KAAZ,CAAkBC,KAAlB,GAA0BC,mBAA1B;AACH"},"metadata":{},"sourceType":"module"}