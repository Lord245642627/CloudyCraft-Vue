{"ast":null,"code":"// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: false,\n    // Enable HTML tags in source\n    xhtmlOut: false,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019',\n\n    /* “”‘’ */\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 20 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {\n      rules: ['normalize', 'block', 'inline', 'text_join']\n    },\n    block: {\n      rules: ['paragraph']\n    },\n    inline: {\n      rules: ['text'],\n      rules2: ['balance_pairs', 'fragments_join']\n    }\n  }\n};","map":{"version":3,"names":["module","exports","options","html","xhtmlOut","breaks","langPrefix","linkify","typographer","quotes","highlight","maxNesting","components","core","rules","block","inline","rules2"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-web/node_modules/markdown-it/lib/presets/zero.js"],"sourcesContent":["// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n};\n"],"mappings":"AAAA;AACA;AAEA;;AAGAA,MAAM,CAACC,OAAP,GAAiB;EACfC,OAAO,EAAE;IACPC,IAAI,EAAU,KADP;IACqB;IAC5BC,QAAQ,EAAM,KAFP;IAEqB;IAC5BC,MAAM,EAAQ,KAHP;IAGqB;IAC5BC,UAAU,EAAI,WAJP;IAIqB;IAC5BC,OAAO,EAAO,KALP;IAKqB;IAE5B;IACAC,WAAW,EAAG,KARP;IAUP;IACA;IACA;IACA;IACA;IACAC,MAAM,EAAE,0BAfD;;IAe6B;IAEpC;IACA;IACA;IACA;IACA;IACA;IACAC,SAAS,EAAE,IAvBJ;IAyBPC,UAAU,EAAI,EAzBP,CAyBqB;;EAzBrB,CADM;EA6BfC,UAAU,EAAE;IAEVC,IAAI,EAAE;MACJC,KAAK,EAAE,CACL,WADK,EAEL,OAFK,EAGL,QAHK,EAIL,WAJK;IADH,CAFI;IAWVC,KAAK,EAAE;MACLD,KAAK,EAAE,CACL,WADK;IADF,CAXG;IAiBVE,MAAM,EAAE;MACNF,KAAK,EAAE,CACL,MADK,CADD;MAING,MAAM,EAAE,CACN,eADM,EAEN,gBAFM;IAJF;EAjBE;AA7BG,CAAjB"},"metadata":{},"sourceType":"script"}