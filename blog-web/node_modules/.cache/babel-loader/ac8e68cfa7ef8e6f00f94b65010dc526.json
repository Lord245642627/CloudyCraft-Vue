{"ast":null,"code":"import * as _ from 'lodash-es';\nexport { addSubgraphConstraints };\n\nfunction addSubgraphConstraints(g, cg, vs) {\n  var prev = {},\n      rootPrev;\n\n  _.forEach(vs, function (v) {\n    var child = g.parent(v),\n        parent,\n        prevChild;\n\n    while (child) {\n      parent = g.parent(child);\n\n      if (parent) {\n        prevChild = prev[parent];\n        prev[parent] = child;\n      } else {\n        prevChild = rootPrev;\n        rootPrev = child;\n      }\n\n      if (prevChild && prevChild !== child) {\n        cg.setEdge(prevChild, child);\n        return;\n      }\n\n      child = parent;\n    }\n  });\n  /*\n  function dfs(v) {\n    var children = v ? g.children(v) : g.children();\n    if (children.length) {\n      var min = Number.POSITIVE_INFINITY,\n          subgraphs = [];\n      _.each(children, function(child) {\n        var childMin = dfs(child);\n        if (g.children(child).length) {\n          subgraphs.push({ v: child, order: childMin });\n        }\n        min = Math.min(min, childMin);\n      });\n      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n        cg.setEdge(prev.v, curr.v);\n        return curr;\n      });\n      return min;\n    }\n    return g.node(v).order;\n  }\n  dfs(undefined);\n  */\n\n}","map":{"version":3,"names":["_","addSubgraphConstraints","g","cg","vs","prev","rootPrev","forEach","v","child","parent","prevChild","setEdge"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/cloudycraft-vue/blog-web/node_modules/dagre-d3-es/src/dagre/order/add-subgraph-constraints.js"],"sourcesContent":["import * as _ from 'lodash-es';\n\nexport { addSubgraphConstraints };\n\nfunction addSubgraphConstraints(g, cg, vs) {\n  var prev = {},\n    rootPrev;\n\n  _.forEach(vs, function (v) {\n    var child = g.parent(v),\n      parent,\n      prevChild;\n    while (child) {\n      parent = g.parent(child);\n      if (parent) {\n        prevChild = prev[parent];\n        prev[parent] = child;\n      } else {\n        prevChild = rootPrev;\n        rootPrev = child;\n      }\n      if (prevChild && prevChild !== child) {\n        cg.setEdge(prevChild, child);\n        return;\n      }\n      child = parent;\n    }\n  });\n\n  /*\n  function dfs(v) {\n    var children = v ? g.children(v) : g.children();\n    if (children.length) {\n      var min = Number.POSITIVE_INFINITY,\n          subgraphs = [];\n      _.each(children, function(child) {\n        var childMin = dfs(child);\n        if (g.children(child).length) {\n          subgraphs.push({ v: child, order: childMin });\n        }\n        min = Math.min(min, childMin);\n      });\n      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n        cg.setEdge(prev.v, curr.v);\n        return curr;\n      });\n      return min;\n    }\n    return g.node(v).order;\n  }\n  dfs(undefined);\n  */\n}\n"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,WAAnB;AAEA,SAASC,sBAAT;;AAEA,SAASA,sBAAT,CAAgCC,CAAhC,EAAmCC,EAAnC,EAAuCC,EAAvC,EAA2C;EACzC,IAAIC,IAAI,GAAG,EAAX;EAAA,IACEC,QADF;;EAGAN,CAAC,CAACO,OAAF,CAAUH,EAAV,EAAc,UAAUI,CAAV,EAAa;IACzB,IAAIC,KAAK,GAAGP,CAAC,CAACQ,MAAF,CAASF,CAAT,CAAZ;IAAA,IACEE,MADF;IAAA,IAEEC,SAFF;;IAGA,OAAOF,KAAP,EAAc;MACZC,MAAM,GAAGR,CAAC,CAACQ,MAAF,CAASD,KAAT,CAAT;;MACA,IAAIC,MAAJ,EAAY;QACVC,SAAS,GAAGN,IAAI,CAACK,MAAD,CAAhB;QACAL,IAAI,CAACK,MAAD,CAAJ,GAAeD,KAAf;MACD,CAHD,MAGO;QACLE,SAAS,GAAGL,QAAZ;QACAA,QAAQ,GAAGG,KAAX;MACD;;MACD,IAAIE,SAAS,IAAIA,SAAS,KAAKF,KAA/B,EAAsC;QACpCN,EAAE,CAACS,OAAH,CAAWD,SAAX,EAAsBF,KAAtB;QACA;MACD;;MACDA,KAAK,GAAGC,MAAR;IACD;EACF,CAnBD;EAqBA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC"},"metadata":{},"sourceType":"module"}