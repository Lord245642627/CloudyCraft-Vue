{"ast":null,"code":"import '../../utils/index.mjs';\nimport { on, once } from '../../utils/dom/event.mjs';\nvar vRepeatClick = {\n  beforeMount(el, binding) {\n    let interval = null;\n    let startTime;\n\n    const handler = () => binding.value && binding.value();\n\n    const clear = () => {\n      if (Date.now() - startTime < 100) {\n        handler();\n      }\n\n      clearInterval(interval);\n      interval = null;\n    };\n\n    on(el, \"mousedown\", e => {\n      if (e.button !== 0) return;\n      startTime = Date.now();\n      once(document, \"mouseup\", clear);\n      clearInterval(interval);\n      interval = setInterval(handler, 100);\n    });\n  }\n\n};\nexport { vRepeatClick as default };","map":{"version":3,"mappings":";;AACA,mBAAe;EACbA,WAAW,CAACC,EAAD,EAAKC,OAAL,EAAc;IACvB,IAAIC,QAAQ,GAAG,IAAf;IACA,IAAIC,SAAJ;;IACA,MAAMC,OAAO,GAAG,MAAMH,OAAO,CAACI,KAAR,IAAiBJ,OAAO,CAACI,KAAR,EAAvC;;IACA,MAAMC,KAAK,GAAG,MAAM;MAClB,IAAIC,IAAI,CAACC,GAAL,KAAaL,SAAb,GAAyB,GAA7B,EAAkC;QAChCC,OAAO;MACR;;MACDK,aAAa,CAACP,QAAD,CAAb;MACAA,QAAQ,GAAG,IAAX;IACD,CAND;;IAOAQ,EAAE,CAACV,EAAD,EAAK,WAAL,EAAmBW,CAAD,IAAO;MACzB,IAAIA,CAAC,CAACC,MAAF,KAAa,CAAjB,EACE;MACFT,SAAS,GAAGI,IAAI,CAACC,GAAL,EAAZ;MACAK,IAAI,CAACC,QAAD,EAAW,SAAX,EAAsBR,KAAtB,CAAJ;MACAG,aAAa,CAACP,QAAD,CAAb;MACAA,QAAQ,GAAGa,WAAW,CAACX,OAAD,EAAU,GAAV,CAAtB;IACD,CAPC,CAAF;EAQD;;AApBY,CAAf","names":["beforeMount","el","binding","interval","startTime","handler","value","clear","Date","now","clearInterval","on","e","button","once","document","setInterval"],"sources":["../../../../../packages/directives/repeat-click/index.ts"],"sourcesContent":["// @ts-nocheck\nimport { on, once } from '@element-plus/utils'\n\nimport type { DirectiveBinding, ObjectDirective } from 'vue'\n\nexport default {\n  beforeMount(el: HTMLElement, binding: DirectiveBinding) {\n    let interval = null\n    let startTime: number\n    const handler = () => binding.value && binding.value()\n    const clear = () => {\n      if (Date.now() - startTime < 100) {\n        handler()\n      }\n      clearInterval(interval)\n      interval = null\n    }\n\n    on(el, 'mousedown', (e: MouseEvent) => {\n      if ((e as any).button !== 0) return\n      startTime = Date.now()\n      once(document as any, 'mouseup', clear)\n      clearInterval(interval)\n      interval = setInterval(handler, 100)\n    })\n  },\n} as ObjectDirective\n"]},"metadata":{},"sourceType":"module"}