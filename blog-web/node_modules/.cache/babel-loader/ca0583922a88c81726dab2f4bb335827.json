{"ast":null,"code":"// Process [link](<to> \"stuff\")\n'use strict';\n\nvar normalizeReference = require('../common/utils').normalizeReference;\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B\n  /* [ */\n  ) {\n    return false;\n  }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true); // parser failed to find ']', so it's not a valid link\n\n  if (labelEnd < 0) {\n    return false;\n  }\n\n  pos = labelEnd + 1;\n\n  if (pos < max && state.src.charCodeAt(pos) === 0x28\n  /* ( */\n  ) {\n    //\n    // Inline link\n    //\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false; // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n\n    pos++;\n\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n\n      if (!isSpace(code) && code !== 0x0A) {\n        break;\n      }\n    }\n\n    if (pos >= max) {\n      return false;\n    } // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n\n\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      } // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n\n\n      start = pos;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      } // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n\n\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos; // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n\n          if (!isSpace(code) && code !== 0x0A) {\n            break;\n          }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29\n    /* ) */\n    ) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') {\n      return false;\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B\n    /* [ */\n    ) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    } // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n\n\n    if (!label) {\n      label = state.src.slice(labelStart, labelEnd);\n    }\n\n    ref = state.env.references[normalizeReference(label)];\n\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n\n    href = ref.href;\n    title = ref.title;\n  } //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n\n\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n    token = state.push('link_open', 'a', 1);\n    token.attrs = attrs = [['href', href]];\n\n    if (title) {\n      attrs.push(['title', title]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n    token = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};","map":{"version":3,"names":["normalizeReference","require","isSpace","module","exports","link","state","silent","attrs","code","label","labelEnd","labelStart","pos","res","ref","token","href","title","oldPos","max","posMax","start","parseReference","src","charCodeAt","md","helpers","parseLinkLabel","parseLinkDestination","ok","normalizeLink","str","validateLink","parseLinkTitle","env","references","slice","push","linkLevel","inline","tokenize"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-web/node_modules/markdown-it/lib/rules_inline/link.js"],"sourcesContent":["// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}