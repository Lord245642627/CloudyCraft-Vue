{"ast":null,"code":"import { ref, onMounted, watch } from 'vue';\n\nconst useThrottleRender = (loading, throttle = 0) => {\n  if (throttle === 0) return loading;\n  const throttled = ref(false);\n  let timeoutHandle = 0;\n\n  const dispatchThrottling = () => {\n    if (timeoutHandle) {\n      clearTimeout(timeoutHandle);\n    }\n\n    timeoutHandle = window.setTimeout(() => {\n      throttled.value = loading.value;\n    }, throttle);\n  };\n\n  onMounted(dispatchThrottling);\n  watch(() => loading.value, val => {\n    if (val) {\n      dispatchThrottling();\n    } else {\n      throttled.value = val;\n    }\n  });\n  return throttled;\n};\n\nexport { useThrottleRender };","map":null,"metadata":{},"sourceType":"module"}