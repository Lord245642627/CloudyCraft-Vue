{"ast":null,"code":"// Proceess '\\n'\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function newline(state, silent) {\n  var pmax,\n      max,\n      ws,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A\n  /* \\n */\n  ) {\n    return false;\n  }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax; // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++; // skip heading spaces for next line\n\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  state.pos = pos;\n  return true;\n};","map":{"version":3,"names":["isSpace","require","module","exports","newline","state","silent","pmax","max","ws","pos","src","charCodeAt","pending","length","posMax","slice","push"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/cloudycraft-vue/blog-web/node_modules/markdown-it/lib/rules_inline/newline.js"],"sourcesContent":["// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n"],"mappings":"AAAA;AAEA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BD,OAAzC;;AAGAE,MAAM,CAACC,OAAP,GAAiB,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;EAC/C,IAAIC,IAAJ;EAAA,IAAUC,GAAV;EAAA,IAAeC,EAAf;EAAA,IAAmBC,GAAG,GAAGL,KAAK,CAACK,GAA/B;;EAEA,IAAIL,KAAK,CAACM,GAAN,CAAUC,UAAV,CAAqBF,GAArB,MAA8B;EAAI;EAAtC,EAAgD;IAAE,OAAO,KAAP;EAAe;;EAEjEH,IAAI,GAAGF,KAAK,CAACQ,OAAN,CAAcC,MAAd,GAAuB,CAA9B;EACAN,GAAG,GAAGH,KAAK,CAACU,MAAZ,CAN+C,CAQ/C;EACA;EACA;EACA;;EACA,IAAI,CAACT,MAAL,EAAa;IACX,IAAIC,IAAI,IAAI,CAAR,IAAaF,KAAK,CAACQ,OAAN,CAAcD,UAAd,CAAyBL,IAAzB,MAAmC,IAApD,EAA0D;MACxD,IAAIA,IAAI,IAAI,CAAR,IAAaF,KAAK,CAACQ,OAAN,CAAcD,UAAd,CAAyBL,IAAI,GAAG,CAAhC,MAAuC,IAAxD,EAA8D;QAC5D;QACAE,EAAE,GAAGF,IAAI,GAAG,CAAZ;;QACA,OAAOE,EAAE,IAAI,CAAN,IAAWJ,KAAK,CAACQ,OAAN,CAAcD,UAAd,CAAyBH,EAAE,GAAG,CAA9B,MAAqC,IAAvD,EAA6DA,EAAE;;QAE/DJ,KAAK,CAACQ,OAAN,GAAgBR,KAAK,CAACQ,OAAN,CAAcG,KAAd,CAAoB,CAApB,EAAuBP,EAAvB,CAAhB;QACAJ,KAAK,CAACY,IAAN,CAAW,WAAX,EAAwB,IAAxB,EAA8B,CAA9B;MACD,CAPD,MAOO;QACLZ,KAAK,CAACQ,OAAN,GAAgBR,KAAK,CAACQ,OAAN,CAAcG,KAAd,CAAoB,CAApB,EAAuB,CAAC,CAAxB,CAAhB;QACAX,KAAK,CAACY,IAAN,CAAW,WAAX,EAAwB,IAAxB,EAA8B,CAA9B;MACD;IAEF,CAbD,MAaO;MACLZ,KAAK,CAACY,IAAN,CAAW,WAAX,EAAwB,IAAxB,EAA8B,CAA9B;IACD;EACF;;EAEDP,GAAG,GA/B4C,CAiC/C;;EACA,OAAOA,GAAG,GAAGF,GAAN,IAAaR,OAAO,CAACK,KAAK,CAACM,GAAN,CAAUC,UAAV,CAAqBF,GAArB,CAAD,CAA3B,EAAwD;IAAEA,GAAG;EAAK;;EAElEL,KAAK,CAACK,GAAN,GAAYA,GAAZ;EACA,OAAO,IAAP;AACD,CAtCD"},"metadata":{},"sourceType":"script"}