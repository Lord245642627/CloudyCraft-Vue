{"ast":null,"code":"// Process links like https://example.org/\n'use strict'; // RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\nvar SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\n\nmodule.exports = function linkify(state, silent) {\n  var pos, max, match, proto, link, url, fullUrl, token;\n  if (!state.md.options.linkify) return false;\n  if (state.linkLevel > 0) return false;\n  pos = state.pos;\n  max = state.posMax;\n  if (pos + 3 > max) return false;\n  if (state.src.charCodeAt(pos) !== 0x3A\n  /* : */\n  ) return false;\n  if (state.src.charCodeAt(pos + 1) !== 0x2F\n  /* / */\n  ) return false;\n  if (state.src.charCodeAt(pos + 2) !== 0x2F\n  /* / */\n  ) return false;\n  match = state.pending.match(SCHEME_RE);\n  if (!match) return false;\n  proto = match[1];\n  link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n  if (!link) return false;\n  url = link.url; // disallow '*' at the end of the link (conflicts with emphasis)\n\n  url = url.replace(/\\*+$/, '');\n  fullUrl = state.md.normalizeLink(url);\n  if (!state.md.validateLink(fullUrl)) return false;\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length);\n    token = state.push('link_open', 'a', 1);\n    token.attrs = [['href', fullUrl]];\n    token.markup = 'linkify';\n    token.info = 'auto';\n    token = state.push('text', '', 0);\n    token.content = state.md.normalizeLinkText(url);\n    token = state.push('link_close', 'a', -1);\n    token.markup = 'linkify';\n    token.info = 'auto';\n  }\n\n  state.pos += url.length - proto.length;\n  return true;\n};","map":{"version":3,"names":["SCHEME_RE","module","exports","linkify","state","silent","pos","max","match","proto","link","url","fullUrl","token","md","options","linkLevel","posMax","src","charCodeAt","pending","matchAtStart","slice","length","replace","normalizeLink","validateLink","push","attrs","markup","info","content","normalizeLinkText"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-web/node_modules/markdown-it/lib/rules_inline/linkify.js"],"sourcesContent":["// Process links like https://example.org/\n\n'use strict';\n\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nvar SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\n\n\nmodule.exports = function linkify(state, silent) {\n  var pos, max, match, proto, link, url, fullUrl, token;\n\n  if (!state.md.options.linkify) return false;\n  if (state.linkLevel > 0) return false;\n\n  pos = state.pos;\n  max = state.posMax;\n\n  if (pos + 3 > max) return false;\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false;\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false;\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false;\n\n  match = state.pending.match(SCHEME_RE);\n  if (!match) return false;\n\n  proto = match[1];\n\n  link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n  if (!link) return false;\n\n  url = link.url;\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '');\n\n  fullUrl = state.md.normalizeLink(url);\n  if (!state.md.validateLink(fullUrl)) return false;\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length);\n\n    token         = state.push('link_open', 'a', 1);\n    token.attrs   = [ [ 'href', fullUrl ] ];\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n\n    token         = state.push('text', '', 0);\n    token.content = state.md.normalizeLinkText(url);\n\n    token         = state.push('link_close', 'a', -1);\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n  }\n\n  state.pos += url.length - proto.length;\n  return true;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}