{"ast":null,"code":"import { ref } from 'vue';\n\nfunction useCursor(input) {\n  const selectionRef = ref();\n\n  function recordCursor() {\n    if (input.value == void 0) return;\n    const {\n      selectionStart,\n      selectionEnd,\n      value\n    } = input.value;\n    if (selectionStart == null || selectionEnd == null) return;\n    const beforeTxt = value.slice(0, Math.max(0, selectionStart));\n    const afterTxt = value.slice(Math.max(0, selectionEnd));\n    selectionRef.value = {\n      selectionStart,\n      selectionEnd,\n      value,\n      beforeTxt,\n      afterTxt\n    };\n  }\n\n  function setCursor() {\n    if (input.value == void 0 || selectionRef.value == void 0) return;\n    const {\n      value\n    } = input.value;\n    const {\n      beforeTxt,\n      afterTxt,\n      selectionStart\n    } = selectionRef.value;\n    if (beforeTxt == void 0 || afterTxt == void 0 || selectionStart == void 0) return;\n    let startPos = value.length;\n\n    if (value.endsWith(afterTxt)) {\n      startPos = value.length - afterTxt.length;\n    } else if (value.startsWith(beforeTxt)) {\n      startPos = beforeTxt.length;\n    } else {\n      const beforeLastChar = beforeTxt[selectionStart - 1];\n      const newIndex = value.indexOf(beforeLastChar, selectionStart - 1);\n\n      if (newIndex !== -1) {\n        startPos = newIndex + 1;\n      }\n    }\n\n    input.value.setSelectionRange(startPos, startPos);\n  }\n\n  return [recordCursor, setCursor];\n}\n\nexport { useCursor };","map":null,"metadata":{},"sourceType":"module"}