{"ast":null,"code":"import { defineComponent, provide, reactive, toRef, ref, createVNode, mergeProps } from 'vue';\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat.js';\nimport advancedFormat from 'dayjs/plugin/advancedFormat.js';\nimport localeData from 'dayjs/plugin/localeData.js';\nimport weekOfYear from 'dayjs/plugin/weekOfYear.js';\nimport weekYear from 'dayjs/plugin/weekYear.js';\nimport dayOfYear from 'dayjs/plugin/dayOfYear.js';\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter.js';\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore.js';\nimport '../../../hooks/index.mjs';\nimport '../../../tokens/index.mjs';\nimport '../../time-picker/index.mjs';\nimport { datePickerProps } from './props/date-picker.mjs';\nimport { getPanel } from './panel-utils.mjs';\nimport { timePickerDefaultProps } from '../../time-picker/src/common/props.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { ROOT_PICKER_INJECTION_KEY } from '../../../tokens/date-picker.mjs';\nimport { DEFAULT_FORMATS_DATEPICKER, DEFAULT_FORMATS_DATE } from '../../time-picker/src/constants.mjs';\nimport CommonPicker from '../../time-picker/src/common/picker.mjs';\ndayjs.extend(localeData);\ndayjs.extend(advancedFormat);\ndayjs.extend(customParseFormat);\ndayjs.extend(weekOfYear);\ndayjs.extend(weekYear);\ndayjs.extend(dayOfYear);\ndayjs.extend(isSameOrAfter);\ndayjs.extend(isSameOrBefore);\nvar DatePicker = defineComponent({\n  name: \"ElDatePicker\",\n  install: null,\n  props: { ...timePickerDefaultProps,\n    ...datePickerProps\n  },\n  emits: [\"update:modelValue\"],\n\n  setup(props, {\n    expose,\n    emit,\n    slots\n  }) {\n    const ns = useNamespace(\"picker-panel\");\n    provide(\"ElPopperOptions\", reactive(toRef(props, \"popperOptions\")));\n    provide(ROOT_PICKER_INJECTION_KEY, {\n      slots,\n      pickerNs: ns\n    });\n    const commonPicker = ref();\n    const refProps = {\n      focus: (focusStartInput = true) => {\n        var _a;\n\n        (_a = commonPicker.value) == null ? void 0 : _a.focus(focusStartInput);\n      }\n    };\n    expose(refProps);\n\n    const onModelValueUpdated = val => {\n      emit(\"update:modelValue\", val);\n    };\n\n    return () => {\n      var _a;\n\n      const format = (_a = props.format) != null ? _a : DEFAULT_FORMATS_DATEPICKER[props.type] || DEFAULT_FORMATS_DATE;\n      const Component = getPanel(props.type);\n      return createVNode(CommonPicker, mergeProps(props, {\n        \"format\": format,\n        \"type\": props.type,\n        \"ref\": commonPicker,\n        \"onUpdate:modelValue\": onModelValueUpdated\n      }), {\n        default: scopedProps => createVNode(Component, scopedProps, null),\n        \"range-separator\": slots[\"range-separator\"]\n      });\n    };\n  }\n\n});\nexport { DatePicker as default };","map":null,"metadata":{},"sourceType":"module"}