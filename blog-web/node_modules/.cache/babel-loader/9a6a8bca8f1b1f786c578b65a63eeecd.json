{"ast":null,"code":"/* IMPORT */\nimport Color from '../color/index.js';\nimport rgba from './rgba.js';\n/* MAIN */\n//SOURCE: https://github.com/sass/dart-sass/blob/7457d2e9e7e623d9844ffd037a070cf32d39c348/lib/src/functions/color.dart#L718-L756\n\nconst mix = (color1, color2, weight = 50) => {\n  const {\n    r: r1,\n    g: g1,\n    b: b1,\n    a: a1\n  } = Color.parse(color1);\n  const {\n    r: r2,\n    g: g2,\n    b: b2,\n    a: a2\n  } = Color.parse(color2);\n  const weightScale = weight / 100;\n  const weightNormalized = weightScale * 2 - 1;\n  const alphaDelta = a1 - a2;\n  const weight1combined = weightNormalized * alphaDelta === -1 ? weightNormalized : (weightNormalized + alphaDelta) / (1 + weightNormalized * alphaDelta);\n  const weight1 = (weight1combined + 1) / 2;\n  const weight2 = 1 - weight1;\n  const r = r1 * weight1 + r2 * weight2;\n  const g = g1 * weight1 + g2 * weight2;\n  const b = b1 * weight1 + b2 * weight2;\n  const a = a1 * weightScale + a2 * (1 - weightScale);\n  return rgba(r, g, b, a);\n};\n/* EXPORT */\n\n\nexport default mix;","map":{"version":3,"names":["Color","rgba","mix","color1","color2","weight","r","r1","g","g1","b","b1","a","a1","parse","r2","g2","b2","a2","weightScale","weightNormalized","alphaDelta","weight1combined","weight1","weight2"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/cloudycraft-vue/blog-web/node_modules/khroma/dist/methods/mix.js"],"sourcesContent":["/* IMPORT */\nimport Color from '../color/index.js';\nimport rgba from './rgba.js';\n/* MAIN */\n//SOURCE: https://github.com/sass/dart-sass/blob/7457d2e9e7e623d9844ffd037a070cf32d39c348/lib/src/functions/color.dart#L718-L756\nconst mix = (color1, color2, weight = 50) => {\n    const { r: r1, g: g1, b: b1, a: a1 } = Color.parse(color1);\n    const { r: r2, g: g2, b: b2, a: a2 } = Color.parse(color2);\n    const weightScale = weight / 100;\n    const weightNormalized = (weightScale * 2) - 1;\n    const alphaDelta = a1 - a2;\n    const weight1combined = ((weightNormalized * alphaDelta) === -1) ? weightNormalized : (weightNormalized + alphaDelta) / (1 + weightNormalized * alphaDelta);\n    const weight1 = (weight1combined + 1) / 2;\n    const weight2 = 1 - weight1;\n    const r = (r1 * weight1) + (r2 * weight2);\n    const g = (g1 * weight1) + (g2 * weight2);\n    const b = (b1 * weight1) + (b2 * weight2);\n    const a = (a1 * weightScale) + (a2 * (1 - weightScale));\n    return rgba(r, g, b, a);\n};\n/* EXPORT */\nexport default mix;\n"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,mBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA;AACA;;AACA,MAAMC,GAAG,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBC,MAAM,GAAG,EAA1B,KAAiC;EACzC,MAAM;IAAEC,CAAC,EAAEC,EAAL;IAASC,CAAC,EAAEC,EAAZ;IAAgBC,CAAC,EAAEC,EAAnB;IAAuBC,CAAC,EAAEC;EAA1B,IAAiCb,KAAK,CAACc,KAAN,CAAYX,MAAZ,CAAvC;EACA,MAAM;IAAEG,CAAC,EAAES,EAAL;IAASP,CAAC,EAAEQ,EAAZ;IAAgBN,CAAC,EAAEO,EAAnB;IAAuBL,CAAC,EAAEM;EAA1B,IAAiClB,KAAK,CAACc,KAAN,CAAYV,MAAZ,CAAvC;EACA,MAAMe,WAAW,GAAGd,MAAM,GAAG,GAA7B;EACA,MAAMe,gBAAgB,GAAID,WAAW,GAAG,CAAf,GAAoB,CAA7C;EACA,MAAME,UAAU,GAAGR,EAAE,GAAGK,EAAxB;EACA,MAAMI,eAAe,GAAKF,gBAAgB,GAAGC,UAApB,KAAoC,CAAC,CAAtC,GAA2CD,gBAA3C,GAA8D,CAACA,gBAAgB,GAAGC,UAApB,KAAmC,IAAID,gBAAgB,GAAGC,UAA1D,CAAtF;EACA,MAAME,OAAO,GAAG,CAACD,eAAe,GAAG,CAAnB,IAAwB,CAAxC;EACA,MAAME,OAAO,GAAG,IAAID,OAApB;EACA,MAAMjB,CAAC,GAAIC,EAAE,GAAGgB,OAAN,GAAkBR,EAAE,GAAGS,OAAjC;EACA,MAAMhB,CAAC,GAAIC,EAAE,GAAGc,OAAN,GAAkBP,EAAE,GAAGQ,OAAjC;EACA,MAAMd,CAAC,GAAIC,EAAE,GAAGY,OAAN,GAAkBN,EAAE,GAAGO,OAAjC;EACA,MAAMZ,CAAC,GAAIC,EAAE,GAAGM,WAAN,GAAsBD,EAAE,IAAI,IAAIC,WAAR,CAAlC;EACA,OAAOlB,IAAI,CAACK,CAAD,EAAIE,CAAJ,EAAOE,CAAP,EAAUE,CAAV,CAAX;AACH,CAdD;AAeA;;;AACA,eAAeV,GAAf"},"metadata":{},"sourceType":"module"}