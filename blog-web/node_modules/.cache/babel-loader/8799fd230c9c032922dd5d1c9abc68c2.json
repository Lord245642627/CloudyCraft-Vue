{"ast":null,"code":"(function () {\n  if (typeof Prism === 'undefined' || typeof document === 'undefined') {\n    return;\n  }\n\n  var callbacks = [];\n  var map = {};\n\n  var noop = function () {};\n\n  Prism.plugins.toolbar = {};\n  /**\n   * @typedef ButtonOptions\n   * @property {string} text The text displayed.\n   * @property {string} [url] The URL of the link which will be created.\n   * @property {Function} [onClick] The event listener for the `click` event of the created button.\n   * @property {string} [className] The class attribute to include with element.\n   */\n\n  /**\n   * Register a button callback with the toolbar.\n   *\n   * @param {string} key\n   * @param {ButtonOptions|Function} opts\n   */\n\n  var registerButton = Prism.plugins.toolbar.registerButton = function (key, opts) {\n    var callback;\n\n    if (typeof opts === 'function') {\n      callback = opts;\n    } else {\n      callback = function (env) {\n        var element;\n\n        if (typeof opts.onClick === 'function') {\n          element = document.createElement('button');\n          element.type = 'button';\n          element.addEventListener('click', function () {\n            opts.onClick.call(this, env);\n          });\n        } else if (typeof opts.url === 'string') {\n          element = document.createElement('a');\n          element.href = opts.url;\n        } else {\n          element = document.createElement('span');\n        }\n\n        if (opts.className) {\n          element.classList.add(opts.className);\n        }\n\n        element.textContent = opts.text;\n        return element;\n      };\n    }\n\n    if (key in map) {\n      console.warn('There is a button with the key \"' + key + '\" registered already.');\n      return;\n    }\n\n    callbacks.push(map[key] = callback);\n  };\n  /**\n   * Returns the callback order of the given element.\n   *\n   * @param {HTMLElement} element\n   * @returns {string[] | undefined}\n   */\n\n\n  function getOrder(element) {\n    while (element) {\n      var order = element.getAttribute('data-toolbar-order');\n\n      if (order != null) {\n        order = order.trim();\n\n        if (order.length) {\n          return order.split(/\\s*,\\s*/g);\n        } else {\n          return [];\n        }\n      }\n\n      element = element.parentElement;\n    }\n  }\n  /**\n   * Post-highlight Prism hook callback.\n   *\n   * @param env\n   */\n\n\n  var hook = Prism.plugins.toolbar.hook = function (env) {\n    // Check if inline or actual code block (credit to line-numbers plugin)\n    var pre = env.element.parentNode;\n\n    if (!pre || !/pre/i.test(pre.nodeName)) {\n      return;\n    } // Autoloader rehighlights, so only do this once.\n\n\n    if (pre.parentNode.classList.contains('code-toolbar')) {\n      return;\n    } // Create wrapper for <pre> to prevent scrolling toolbar with content\n\n\n    var wrapper = document.createElement('div');\n    wrapper.classList.add('code-toolbar');\n    pre.parentNode.insertBefore(wrapper, pre);\n    wrapper.appendChild(pre); // Setup the toolbar\n\n    var toolbar = document.createElement('div');\n    toolbar.classList.add('toolbar'); // order callbacks\n\n    var elementCallbacks = callbacks;\n    var order = getOrder(env.element);\n\n    if (order) {\n      elementCallbacks = order.map(function (key) {\n        return map[key] || noop;\n      });\n    }\n\n    elementCallbacks.forEach(function (callback) {\n      var element = callback(env);\n\n      if (!element) {\n        return;\n      }\n\n      var item = document.createElement('div');\n      item.classList.add('toolbar-item');\n      item.appendChild(element);\n      toolbar.appendChild(item);\n    }); // Add our toolbar to the currently created wrapper of <pre> tag\n\n    wrapper.appendChild(toolbar);\n  };\n\n  registerButton('label', function (env) {\n    var pre = env.element.parentNode;\n\n    if (!pre || !/pre/i.test(pre.nodeName)) {\n      return;\n    }\n\n    if (!pre.hasAttribute('data-label')) {\n      return;\n    }\n\n    var element;\n    var template;\n    var text = pre.getAttribute('data-label');\n\n    try {\n      // Any normal text will blow up this selector.\n      template = document.querySelector('template#' + text);\n    } catch (e) {\n      /* noop */\n    }\n\n    if (template) {\n      element = template.content;\n    } else {\n      if (pre.hasAttribute('data-url')) {\n        element = document.createElement('a');\n        element.href = pre.getAttribute('data-url');\n      } else {\n        element = document.createElement('span');\n      }\n\n      element.textContent = text;\n    }\n\n    return element;\n  });\n  /**\n   * Register the toolbar with Prism.\n   */\n\n  Prism.hooks.add('complete', hook);\n})();","map":{"version":3,"names":["Prism","document","callbacks","map","noop","plugins","toolbar","registerButton","key","opts","callback","env","element","onClick","createElement","type","addEventListener","call","url","href","className","classList","add","textContent","text","console","warn","push","getOrder","order","getAttribute","trim","length","split","parentElement","hook","pre","parentNode","test","nodeName","contains","wrapper","insertBefore","appendChild","elementCallbacks","forEach","item","hasAttribute","template","querySelector","e","content","hooks"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-web/node_modules/prismjs/plugins/toolbar/prism-toolbar.js"],"sourcesContent":["(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\tvar callbacks = [];\n\tvar map = {};\n\tvar noop = function () {};\n\n\tPrism.plugins.toolbar = {};\n\n\t/**\n\t * @typedef ButtonOptions\n\t * @property {string} text The text displayed.\n\t * @property {string} [url] The URL of the link which will be created.\n\t * @property {Function} [onClick] The event listener for the `click` event of the created button.\n\t * @property {string} [className] The class attribute to include with element.\n\t */\n\n\t/**\n\t * Register a button callback with the toolbar.\n\t *\n\t * @param {string} key\n\t * @param {ButtonOptions|Function} opts\n\t */\n\tvar registerButton = Prism.plugins.toolbar.registerButton = function (key, opts) {\n\t\tvar callback;\n\n\t\tif (typeof opts === 'function') {\n\t\t\tcallback = opts;\n\t\t} else {\n\t\t\tcallback = function (env) {\n\t\t\t\tvar element;\n\n\t\t\t\tif (typeof opts.onClick === 'function') {\n\t\t\t\t\telement = document.createElement('button');\n\t\t\t\t\telement.type = 'button';\n\t\t\t\t\telement.addEventListener('click', function () {\n\t\t\t\t\t\topts.onClick.call(this, env);\n\t\t\t\t\t});\n\t\t\t\t} else if (typeof opts.url === 'string') {\n\t\t\t\t\telement = document.createElement('a');\n\t\t\t\t\telement.href = opts.url;\n\t\t\t\t} else {\n\t\t\t\t\telement = document.createElement('span');\n\t\t\t\t}\n\n\t\t\t\tif (opts.className) {\n\t\t\t\t\telement.classList.add(opts.className);\n\t\t\t\t}\n\n\t\t\t\telement.textContent = opts.text;\n\n\t\t\t\treturn element;\n\t\t\t};\n\t\t}\n\n\t\tif (key in map) {\n\t\t\tconsole.warn('There is a button with the key \"' + key + '\" registered already.');\n\t\t\treturn;\n\t\t}\n\n\t\tcallbacks.push(map[key] = callback);\n\t};\n\n\t/**\n\t * Returns the callback order of the given element.\n\t *\n\t * @param {HTMLElement} element\n\t * @returns {string[] | undefined}\n\t */\n\tfunction getOrder(element) {\n\t\twhile (element) {\n\t\t\tvar order = element.getAttribute('data-toolbar-order');\n\t\t\tif (order != null) {\n\t\t\t\torder = order.trim();\n\t\t\t\tif (order.length) {\n\t\t\t\t\treturn order.split(/\\s*,\\s*/g);\n\t\t\t\t} else {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t}\n\t\t\telement = element.parentElement;\n\t\t}\n\t}\n\n\t/**\n\t * Post-highlight Prism hook callback.\n\t *\n\t * @param env\n\t */\n\tvar hook = Prism.plugins.toolbar.hook = function (env) {\n\t\t// Check if inline or actual code block (credit to line-numbers plugin)\n\t\tvar pre = env.element.parentNode;\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Autoloader rehighlights, so only do this once.\n\t\tif (pre.parentNode.classList.contains('code-toolbar')) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Create wrapper for <pre> to prevent scrolling toolbar with content\n\t\tvar wrapper = document.createElement('div');\n\t\twrapper.classList.add('code-toolbar');\n\t\tpre.parentNode.insertBefore(wrapper, pre);\n\t\twrapper.appendChild(pre);\n\n\t\t// Setup the toolbar\n\t\tvar toolbar = document.createElement('div');\n\t\ttoolbar.classList.add('toolbar');\n\n\t\t// order callbacks\n\t\tvar elementCallbacks = callbacks;\n\t\tvar order = getOrder(env.element);\n\t\tif (order) {\n\t\t\telementCallbacks = order.map(function (key) {\n\t\t\t\treturn map[key] || noop;\n\t\t\t});\n\t\t}\n\n\t\telementCallbacks.forEach(function (callback) {\n\t\t\tvar element = callback(env);\n\n\t\t\tif (!element) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar item = document.createElement('div');\n\t\t\titem.classList.add('toolbar-item');\n\n\t\t\titem.appendChild(element);\n\t\t\ttoolbar.appendChild(item);\n\t\t});\n\n\t\t// Add our toolbar to the currently created wrapper of <pre> tag\n\t\twrapper.appendChild(toolbar);\n\t};\n\n\tregisterButton('label', function (env) {\n\t\tvar pre = env.element.parentNode;\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!pre.hasAttribute('data-label')) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar element; var template;\n\t\tvar text = pre.getAttribute('data-label');\n\t\ttry {\n\t\t\t// Any normal text will blow up this selector.\n\t\t\ttemplate = document.querySelector('template#' + text);\n\t\t} catch (e) { /* noop */ }\n\n\t\tif (template) {\n\t\t\telement = template.content;\n\t\t} else {\n\t\t\tif (pre.hasAttribute('data-url')) {\n\t\t\t\telement = document.createElement('a');\n\t\t\t\telement.href = pre.getAttribute('data-url');\n\t\t\t} else {\n\t\t\t\telement = document.createElement('span');\n\t\t\t}\n\n\t\t\telement.textContent = text;\n\t\t}\n\n\t\treturn element;\n\t});\n\n\t/**\n\t * Register the toolbar with Prism.\n\t */\n\tPrism.hooks.add('complete', hook);\n}());\n"],"mappings":"AAAC,aAAY;EAEZ,IAAI,OAAOA,KAAP,KAAiB,WAAjB,IAAgC,OAAOC,QAAP,KAAoB,WAAxD,EAAqE;IACpE;EACA;;EAED,IAAIC,SAAS,GAAG,EAAhB;EACA,IAAIC,GAAG,GAAG,EAAV;;EACA,IAAIC,IAAI,GAAG,YAAY,CAAE,CAAzB;;EAEAJ,KAAK,CAACK,OAAN,CAAcC,OAAd,GAAwB,EAAxB;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;;EACC,IAAIC,cAAc,GAAGP,KAAK,CAACK,OAAN,CAAcC,OAAd,CAAsBC,cAAtB,GAAuC,UAAUC,GAAV,EAAeC,IAAf,EAAqB;IAChF,IAAIC,QAAJ;;IAEA,IAAI,OAAOD,IAAP,KAAgB,UAApB,EAAgC;MAC/BC,QAAQ,GAAGD,IAAX;IACA,CAFD,MAEO;MACNC,QAAQ,GAAG,UAAUC,GAAV,EAAe;QACzB,IAAIC,OAAJ;;QAEA,IAAI,OAAOH,IAAI,CAACI,OAAZ,KAAwB,UAA5B,EAAwC;UACvCD,OAAO,GAAGX,QAAQ,CAACa,aAAT,CAAuB,QAAvB,CAAV;UACAF,OAAO,CAACG,IAAR,GAAe,QAAf;UACAH,OAAO,CAACI,gBAAR,CAAyB,OAAzB,EAAkC,YAAY;YAC7CP,IAAI,CAACI,OAAL,CAAaI,IAAb,CAAkB,IAAlB,EAAwBN,GAAxB;UACA,CAFD;QAGA,CAND,MAMO,IAAI,OAAOF,IAAI,CAACS,GAAZ,KAAoB,QAAxB,EAAkC;UACxCN,OAAO,GAAGX,QAAQ,CAACa,aAAT,CAAuB,GAAvB,CAAV;UACAF,OAAO,CAACO,IAAR,GAAeV,IAAI,CAACS,GAApB;QACA,CAHM,MAGA;UACNN,OAAO,GAAGX,QAAQ,CAACa,aAAT,CAAuB,MAAvB,CAAV;QACA;;QAED,IAAIL,IAAI,CAACW,SAAT,EAAoB;UACnBR,OAAO,CAACS,SAAR,CAAkBC,GAAlB,CAAsBb,IAAI,CAACW,SAA3B;QACA;;QAEDR,OAAO,CAACW,WAAR,GAAsBd,IAAI,CAACe,IAA3B;QAEA,OAAOZ,OAAP;MACA,CAvBD;IAwBA;;IAED,IAAIJ,GAAG,IAAIL,GAAX,EAAgB;MACfsB,OAAO,CAACC,IAAR,CAAa,qCAAqClB,GAArC,GAA2C,uBAAxD;MACA;IACA;;IAEDN,SAAS,CAACyB,IAAV,CAAexB,GAAG,CAACK,GAAD,CAAH,GAAWE,QAA1B;EACA,CAtCD;EAwCA;AACD;AACA;AACA;AACA;AACA;;;EACC,SAASkB,QAAT,CAAkBhB,OAAlB,EAA2B;IAC1B,OAAOA,OAAP,EAAgB;MACf,IAAIiB,KAAK,GAAGjB,OAAO,CAACkB,YAAR,CAAqB,oBAArB,CAAZ;;MACA,IAAID,KAAK,IAAI,IAAb,EAAmB;QAClBA,KAAK,GAAGA,KAAK,CAACE,IAAN,EAAR;;QACA,IAAIF,KAAK,CAACG,MAAV,EAAkB;UACjB,OAAOH,KAAK,CAACI,KAAN,CAAY,UAAZ,CAAP;QACA,CAFD,MAEO;UACN,OAAO,EAAP;QACA;MACD;;MACDrB,OAAO,GAAGA,OAAO,CAACsB,aAAlB;IACA;EACD;EAED;AACD;AACA;AACA;AACA;;;EACC,IAAIC,IAAI,GAAGnC,KAAK,CAACK,OAAN,CAAcC,OAAd,CAAsB6B,IAAtB,GAA6B,UAAUxB,GAAV,EAAe;IACtD;IACA,IAAIyB,GAAG,GAAGzB,GAAG,CAACC,OAAJ,CAAYyB,UAAtB;;IACA,IAAI,CAACD,GAAD,IAAQ,CAAC,OAAOE,IAAP,CAAYF,GAAG,CAACG,QAAhB,CAAb,EAAwC;MACvC;IACA,CALqD,CAOtD;;;IACA,IAAIH,GAAG,CAACC,UAAJ,CAAehB,SAAf,CAAyBmB,QAAzB,CAAkC,cAAlC,CAAJ,EAAuD;MACtD;IACA,CAVqD,CAYtD;;;IACA,IAAIC,OAAO,GAAGxC,QAAQ,CAACa,aAAT,CAAuB,KAAvB,CAAd;IACA2B,OAAO,CAACpB,SAAR,CAAkBC,GAAlB,CAAsB,cAAtB;IACAc,GAAG,CAACC,UAAJ,CAAeK,YAAf,CAA4BD,OAA5B,EAAqCL,GAArC;IACAK,OAAO,CAACE,WAAR,CAAoBP,GAApB,EAhBsD,CAkBtD;;IACA,IAAI9B,OAAO,GAAGL,QAAQ,CAACa,aAAT,CAAuB,KAAvB,CAAd;IACAR,OAAO,CAACe,SAAR,CAAkBC,GAAlB,CAAsB,SAAtB,EApBsD,CAsBtD;;IACA,IAAIsB,gBAAgB,GAAG1C,SAAvB;IACA,IAAI2B,KAAK,GAAGD,QAAQ,CAACjB,GAAG,CAACC,OAAL,CAApB;;IACA,IAAIiB,KAAJ,EAAW;MACVe,gBAAgB,GAAGf,KAAK,CAAC1B,GAAN,CAAU,UAAUK,GAAV,EAAe;QAC3C,OAAOL,GAAG,CAACK,GAAD,CAAH,IAAYJ,IAAnB;MACA,CAFkB,CAAnB;IAGA;;IAEDwC,gBAAgB,CAACC,OAAjB,CAAyB,UAAUnC,QAAV,EAAoB;MAC5C,IAAIE,OAAO,GAAGF,QAAQ,CAACC,GAAD,CAAtB;;MAEA,IAAI,CAACC,OAAL,EAAc;QACb;MACA;;MAED,IAAIkC,IAAI,GAAG7C,QAAQ,CAACa,aAAT,CAAuB,KAAvB,CAAX;MACAgC,IAAI,CAACzB,SAAL,CAAeC,GAAf,CAAmB,cAAnB;MAEAwB,IAAI,CAACH,WAAL,CAAiB/B,OAAjB;MACAN,OAAO,CAACqC,WAAR,CAAoBG,IAApB;IACA,CAZD,EA/BsD,CA6CtD;;IACAL,OAAO,CAACE,WAAR,CAAoBrC,OAApB;EACA,CA/CD;;EAiDAC,cAAc,CAAC,OAAD,EAAU,UAAUI,GAAV,EAAe;IACtC,IAAIyB,GAAG,GAAGzB,GAAG,CAACC,OAAJ,CAAYyB,UAAtB;;IACA,IAAI,CAACD,GAAD,IAAQ,CAAC,OAAOE,IAAP,CAAYF,GAAG,CAACG,QAAhB,CAAb,EAAwC;MACvC;IACA;;IAED,IAAI,CAACH,GAAG,CAACW,YAAJ,CAAiB,YAAjB,CAAL,EAAqC;MACpC;IACA;;IAED,IAAInC,OAAJ;IAAa,IAAIoC,QAAJ;IACb,IAAIxB,IAAI,GAAGY,GAAG,CAACN,YAAJ,CAAiB,YAAjB,CAAX;;IACA,IAAI;MACH;MACAkB,QAAQ,GAAG/C,QAAQ,CAACgD,aAAT,CAAuB,cAAczB,IAArC,CAAX;IACA,CAHD,CAGE,OAAO0B,CAAP,EAAU;MAAE;IAAY;;IAE1B,IAAIF,QAAJ,EAAc;MACbpC,OAAO,GAAGoC,QAAQ,CAACG,OAAnB;IACA,CAFD,MAEO;MACN,IAAIf,GAAG,CAACW,YAAJ,CAAiB,UAAjB,CAAJ,EAAkC;QACjCnC,OAAO,GAAGX,QAAQ,CAACa,aAAT,CAAuB,GAAvB,CAAV;QACAF,OAAO,CAACO,IAAR,GAAeiB,GAAG,CAACN,YAAJ,CAAiB,UAAjB,CAAf;MACA,CAHD,MAGO;QACNlB,OAAO,GAAGX,QAAQ,CAACa,aAAT,CAAuB,MAAvB,CAAV;MACA;;MAEDF,OAAO,CAACW,WAAR,GAAsBC,IAAtB;IACA;;IAED,OAAOZ,OAAP;EACA,CA/Ba,CAAd;EAiCA;AACD;AACA;;EACCZ,KAAK,CAACoD,KAAN,CAAY9B,GAAZ,CAAgB,UAAhB,EAA4Ba,IAA5B;AACA,CAlLA,GAAD"},"metadata":{},"sourceType":"script"}