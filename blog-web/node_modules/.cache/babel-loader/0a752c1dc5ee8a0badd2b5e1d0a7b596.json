{"ast":null,"code":"export { intersectLine };\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\n\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2, r3, r4;\n  var denom, offset, num;\n  var x, y; // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = p2.x * p1.y - p1.x * p2.y; // Compute r3 and r4.\n\n  r3 = a1 * q1.x + b1 * q1.y + c1;\n  r4 = a1 * q2.x + b1 * q2.y + c1; // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return;\n  } // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n\n\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = q2.x * q1.y - q1.x * q2.y; // Compute r1 and r2\n\n  r1 = a2 * p1.x + b2 * p1.y + c2;\n  r2 = a2 * p2.x + b2 * p2.y + c2; // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return;\n  } // Line segments intersect: compute intersection point.\n\n\n  denom = a1 * b2 - a2 * b1;\n\n  if (denom === 0) {\n    return;\n  }\n\n  offset = Math.abs(denom / 2); // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n\n  num = b1 * c2 - b2 * c1;\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n  num = a2 * c1 - a1 * c2;\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n  return {\n    x: x,\n    y: y\n  };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}","map":{"version":3,"names":["intersectLine","p1","p2","q1","q2","a1","a2","b1","b2","c1","c2","r1","r2","r3","r4","denom","offset","num","x","y","sameSign","Math","abs"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-web/node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-line.js"],"sourcesContent":["export { intersectLine };\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2, r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = p2.x * p1.y - p1.x * p2.y;\n\n  // Compute r3 and r4.\n  r3 = a1 * q1.x + b1 * q1.y + c1;\n  r4 = a1 * q2.x + b1 * q2.y + c1;\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = q2.x * q1.y - q1.x * q2.y;\n\n  // Compute r1 and r2\n  r1 = a2 * p1.x + b2 * p1.y + c2;\n  r2 = a2 * p2.x + b2 * p2.y + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = a1 * b2 - a2 * b1;\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = b1 * c2 - b2 * c1;\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  num = a2 * c1 - a1 * c2;\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}