{"ast":null,"code":"import * as _ from 'lodash-es';\nexport { initOrder };\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\n\nfunction initOrder(g) {\n  var visited = {};\n\n  var simpleNodes = _.filter(g.nodes(), function (v) {\n    return !g.children(v).length;\n  });\n\n  var maxRank = _.max(_.map(simpleNodes, function (v) {\n    return g.node(v).rank;\n  }));\n\n  var layers = _.map(_.range(maxRank + 1), function () {\n    return [];\n  });\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    var node = g.node(v);\n    layers[node.rank].push(v);\n\n    _.forEach(g.successors(v), dfs);\n  }\n\n  var orderedVs = _.sortBy(simpleNodes, function (v) {\n    return g.node(v).rank;\n  });\n\n  _.forEach(orderedVs, dfs);\n\n  return layers;\n}","map":{"version":3,"names":["_","initOrder","g","visited","simpleNodes","filter","nodes","v","children","length","maxRank","max","map","node","rank","layers","range","dfs","has","push","forEach","successors","orderedVs","sortBy"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/cloudycraft-vue/blog-web/node_modules/dagre-d3-es/src/dagre/order/init-order.js"],"sourcesContent":["import * as _ from 'lodash-es';\n\nexport { initOrder };\n\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\nfunction initOrder(g) {\n  var visited = {};\n  var simpleNodes = _.filter(g.nodes(), function (v) {\n    return !g.children(v).length;\n  });\n  var maxRank = _.max(\n    _.map(simpleNodes, function (v) {\n      return g.node(v).rank;\n    })\n  );\n  var layers = _.map(_.range(maxRank + 1), function () {\n    return [];\n  });\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    var node = g.node(v);\n    layers[node.rank].push(v);\n    _.forEach(g.successors(v), dfs);\n  }\n\n  var orderedVs = _.sortBy(simpleNodes, function (v) {\n    return g.node(v).rank;\n  });\n  _.forEach(orderedVs, dfs);\n\n  return layers;\n}\n"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,WAAnB;AAEA,SAASC,SAAT;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,SAAT,CAAmBC,CAAnB,EAAsB;EACpB,IAAIC,OAAO,GAAG,EAAd;;EACA,IAAIC,WAAW,GAAGJ,CAAC,CAACK,MAAF,CAASH,CAAC,CAACI,KAAF,EAAT,EAAoB,UAAUC,CAAV,EAAa;IACjD,OAAO,CAACL,CAAC,CAACM,QAAF,CAAWD,CAAX,EAAcE,MAAtB;EACD,CAFiB,CAAlB;;EAGA,IAAIC,OAAO,GAAGV,CAAC,CAACW,GAAF,CACZX,CAAC,CAACY,GAAF,CAAMR,WAAN,EAAmB,UAAUG,CAAV,EAAa;IAC9B,OAAOL,CAAC,CAACW,IAAF,CAAON,CAAP,EAAUO,IAAjB;EACD,CAFD,CADY,CAAd;;EAKA,IAAIC,MAAM,GAAGf,CAAC,CAACY,GAAF,CAAMZ,CAAC,CAACgB,KAAF,CAAQN,OAAO,GAAG,CAAlB,CAAN,EAA4B,YAAY;IACnD,OAAO,EAAP;EACD,CAFY,CAAb;;EAIA,SAASO,GAAT,CAAaV,CAAb,EAAgB;IACd,IAAIP,CAAC,CAACkB,GAAF,CAAMf,OAAN,EAAeI,CAAf,CAAJ,EAAuB;IACvBJ,OAAO,CAACI,CAAD,CAAP,GAAa,IAAb;IACA,IAAIM,IAAI,GAAGX,CAAC,CAACW,IAAF,CAAON,CAAP,CAAX;IACAQ,MAAM,CAACF,IAAI,CAACC,IAAN,CAAN,CAAkBK,IAAlB,CAAuBZ,CAAvB;;IACAP,CAAC,CAACoB,OAAF,CAAUlB,CAAC,CAACmB,UAAF,CAAad,CAAb,CAAV,EAA2BU,GAA3B;EACD;;EAED,IAAIK,SAAS,GAAGtB,CAAC,CAACuB,MAAF,CAASnB,WAAT,EAAsB,UAAUG,CAAV,EAAa;IACjD,OAAOL,CAAC,CAACW,IAAF,CAAON,CAAP,EAAUO,IAAjB;EACD,CAFe,CAAhB;;EAGAd,CAAC,CAACoB,OAAF,CAAUE,SAAV,EAAqBL,GAArB;;EAEA,OAAOF,MAAP;AACD"},"metadata":{},"sourceType":"module"}