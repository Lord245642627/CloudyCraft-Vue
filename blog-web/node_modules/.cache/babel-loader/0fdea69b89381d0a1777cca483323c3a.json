{"ast":null,"code":"import { n as sanitizeText$1, g as getConfig, l as log, s as setupGraphViewbox } from \"./mermaid-ae477ddf.js\";\nimport { select } from \"d3\";\nimport cytoscape from \"cytoscape/dist/cytoscape.umd.js\";\nimport coseBilkent from \"cytoscape-cose-bilkent\";\nimport { isDark, lighten, darken } from \"khroma\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"lodash-es/memoize.js\";\nimport \"stylis\";\nimport \"dagre-d3-es/src/dagre/index.js\";\nimport \"dagre-d3-es/src/graphlib/index.js\";\nimport \"dagre-d3-es/src/graphlib/json.js\";\nimport \"uuid\";\nimport \"dagre-d3-es\";\nimport \"dagre-d3-es/src/dagre-js/util.js\";\nimport \"dagre-d3-es/src/dagre-js/label/add-html-label.js\";\nimport \"dagre-d3-es/src/dagre-js/intersect/intersect-polygon.js\";\nimport \"dagre-d3-es/src/dagre-js/intersect/intersect-rect.js\";\nimport \"dayjs/plugin/isoWeek.js\";\nimport \"dayjs/plugin/customParseFormat.js\";\nimport \"dayjs/plugin/advancedFormat.js\";\nimport \"lodash-es/isEmpty.js\";\n\nvar parser = function () {\n  var o = function (k, v, o2, l) {\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v);\n\n    return o2;\n  },\n      $V0 = [1, 4],\n      $V1 = [1, 13],\n      $V2 = [1, 12],\n      $V3 = [1, 15],\n      $V4 = [1, 16],\n      $V5 = [1, 20],\n      $V6 = [1, 19],\n      $V7 = [6, 7, 8],\n      $V8 = [1, 26],\n      $V9 = [1, 24],\n      $Va = [1, 25],\n      $Vb = [6, 7, 11],\n      $Vc = [1, 6, 13, 15, 16, 19, 22],\n      $Vd = [1, 33],\n      $Ve = [1, 34],\n      $Vf = [1, 6, 7, 11, 13, 15, 16, 19, 22];\n\n  var parser2 = {\n    trace: function trace() {},\n    yy: {},\n    symbols_: {\n      \"error\": 2,\n      \"start\": 3,\n      \"mindMap\": 4,\n      \"spaceLines\": 5,\n      \"SPACELINE\": 6,\n      \"NL\": 7,\n      \"MINDMAP\": 8,\n      \"document\": 9,\n      \"stop\": 10,\n      \"EOF\": 11,\n      \"statement\": 12,\n      \"SPACELIST\": 13,\n      \"node\": 14,\n      \"ICON\": 15,\n      \"CLASS\": 16,\n      \"nodeWithId\": 17,\n      \"nodeWithoutId\": 18,\n      \"NODE_DSTART\": 19,\n      \"NODE_DESCR\": 20,\n      \"NODE_DEND\": 21,\n      \"NODE_ID\": 22,\n      \"$accept\": 0,\n      \"$end\": 1\n    },\n    terminals_: {\n      2: \"error\",\n      6: \"SPACELINE\",\n      7: \"NL\",\n      8: \"MINDMAP\",\n      11: \"EOF\",\n      13: \"SPACELIST\",\n      15: \"ICON\",\n      16: \"CLASS\",\n      19: \"NODE_DSTART\",\n      20: \"NODE_DESCR\",\n      21: \"NODE_DEND\",\n      22: \"NODE_ID\"\n    },\n    productions_: [0, [3, 1], [3, 2], [5, 1], [5, 2], [5, 2], [4, 2], [4, 3], [10, 1], [10, 1], [10, 1], [10, 2], [10, 2], [9, 3], [9, 2], [12, 2], [12, 2], [12, 2], [12, 1], [12, 1], [12, 1], [12, 1], [12, 1], [14, 1], [14, 1], [18, 3], [17, 1], [17, 4]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n\n      switch (yystate) {\n        case 6:\n        case 7:\n          return yy;\n\n        case 8:\n          yy.getLogger().trace(\"Stop NL \");\n          break;\n\n        case 9:\n          yy.getLogger().trace(\"Stop EOF \");\n          break;\n\n        case 11:\n          yy.getLogger().trace(\"Stop NL2 \");\n          break;\n\n        case 12:\n          yy.getLogger().trace(\"Stop EOF2 \");\n          break;\n\n        case 15:\n          yy.getLogger().info(\"Node: \", $$[$0].id);\n          yy.addNode($$[$0 - 1].length, $$[$0].id, $$[$0].descr, $$[$0].type);\n          break;\n\n        case 16:\n          yy.getLogger().trace(\"Icon: \", $$[$0]);\n          yy.decorateNode({\n            icon: $$[$0]\n          });\n          break;\n\n        case 17:\n        case 21:\n          yy.decorateNode({\n            class: $$[$0]\n          });\n          break;\n\n        case 18:\n          yy.getLogger().trace(\"SPACELIST\");\n          break;\n\n        case 19:\n          yy.getLogger().trace(\"Node: \", $$[$0].id);\n          yy.addNode(0, $$[$0].id, $$[$0].descr, $$[$0].type);\n          break;\n\n        case 20:\n          yy.decorateNode({\n            icon: $$[$0]\n          });\n          break;\n\n        case 25:\n          yy.getLogger().trace(\"node found ..\", $$[$0 - 2]);\n          this.$ = {\n            id: $$[$0 - 1],\n            descr: $$[$0 - 1],\n            type: yy.getType($$[$0 - 2], $$[$0])\n          };\n          break;\n\n        case 26:\n          this.$ = {\n            id: $$[$0],\n            descr: $$[$0],\n            type: yy.nodeType.DEFAULT\n          };\n          break;\n\n        case 27:\n          yy.getLogger().trace(\"node found ..\", $$[$0 - 3]);\n          this.$ = {\n            id: $$[$0 - 3],\n            descr: $$[$0 - 1],\n            type: yy.getType($$[$0 - 2], $$[$0])\n          };\n          break;\n      }\n    },\n    table: [{\n      3: 1,\n      4: 2,\n      5: 3,\n      6: [1, 5],\n      8: $V0\n    }, {\n      1: [3]\n    }, {\n      1: [2, 1]\n    }, {\n      4: 6,\n      6: [1, 7],\n      7: [1, 8],\n      8: $V0\n    }, {\n      6: $V1,\n      7: [1, 10],\n      9: 9,\n      12: 11,\n      13: $V2,\n      14: 14,\n      15: $V3,\n      16: $V4,\n      17: 17,\n      18: 18,\n      19: $V5,\n      22: $V6\n    }, o($V7, [2, 3]), {\n      1: [2, 2]\n    }, o($V7, [2, 4]), o($V7, [2, 5]), {\n      1: [2, 6],\n      6: $V1,\n      12: 21,\n      13: $V2,\n      14: 14,\n      15: $V3,\n      16: $V4,\n      17: 17,\n      18: 18,\n      19: $V5,\n      22: $V6\n    }, {\n      6: $V1,\n      9: 22,\n      12: 11,\n      13: $V2,\n      14: 14,\n      15: $V3,\n      16: $V4,\n      17: 17,\n      18: 18,\n      19: $V5,\n      22: $V6\n    }, {\n      6: $V8,\n      7: $V9,\n      10: 23,\n      11: $Va\n    }, o($Vb, [2, 22], {\n      17: 17,\n      18: 18,\n      14: 27,\n      15: [1, 28],\n      16: [1, 29],\n      19: $V5,\n      22: $V6\n    }), o($Vb, [2, 18]), o($Vb, [2, 19]), o($Vb, [2, 20]), o($Vb, [2, 21]), o($Vb, [2, 23]), o($Vb, [2, 24]), o($Vb, [2, 26], {\n      19: [1, 30]\n    }), {\n      20: [1, 31]\n    }, {\n      6: $V8,\n      7: $V9,\n      10: 32,\n      11: $Va\n    }, {\n      1: [2, 7],\n      6: $V1,\n      12: 21,\n      13: $V2,\n      14: 14,\n      15: $V3,\n      16: $V4,\n      17: 17,\n      18: 18,\n      19: $V5,\n      22: $V6\n    }, o($Vc, [2, 14], {\n      7: $Vd,\n      11: $Ve\n    }), o($Vf, [2, 8]), o($Vf, [2, 9]), o($Vf, [2, 10]), o($Vb, [2, 15]), o($Vb, [2, 16]), o($Vb, [2, 17]), {\n      20: [1, 35]\n    }, {\n      21: [1, 36]\n    }, o($Vc, [2, 13], {\n      7: $Vd,\n      11: $Ve\n    }), o($Vf, [2, 11]), o($Vf, [2, 12]), {\n      21: [1, 37]\n    }, o($Vb, [2, 25]), o($Vb, [2, 27])],\n    defaultActions: {\n      2: [2, 1],\n      6: [2, 2]\n    },\n    parseError: function parseError2(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this,\n          stack = [0],\n          tstack = [],\n          vstack = [null],\n          lstack = [],\n          table = this.table,\n          yytext = \"\",\n          yylineno = 0,\n          yyleng = 0,\n          TERROR = 2,\n          EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = {\n        yy: {}\n      };\n\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n\n        if (typeof token !== \"number\") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n\n          token = self.symbols_[token] || token;\n        }\n\n        return token;\n      }\n\n      var symbol,\n          state,\n          action,\n          r,\n          yyval = {},\n          p,\n          len,\n          newState,\n          expected;\n\n      while (true) {\n        state = stack[stack.length - 1];\n\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n\n          action = table[state] && table[state][symbol];\n        }\n\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n            }\n            break;\n\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n\n            if (ranges) {\n              yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n            }\n\n            r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n\n          case 3:\n            return true;\n        }\n      }\n\n      return true;\n    }\n  };\n\n  var lexer = function () {\n    var lexer2 = {\n      EOF: 1,\n      parseError: function parseError2(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function () {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function () {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n\n        return this;\n      },\n      // retain first n characters of the match\n      less: function (n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function () {\n        var next = this.match;\n\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function (match, indexed_rule) {\n        var token, lines, backup;\n\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n\n        if (this.done && this._input) {\n          this.done = false;\n        }\n\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n\n          return false;\n        }\n\n        return false;\n      },\n      // return next match in input\n      next: function () {\n        if (this.done) {\n          return this.EOF;\n        }\n\n        if (!this._input) {\n          this.done = true;\n        }\n\n        var token, match, tempMatch, index;\n\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n\n        var rules = this._currentRules();\n\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n\n        if (match) {\n          token = this.test_match(match, rules[index]);\n\n          if (token !== false) {\n            return token;\n          }\n\n          return false;\n        }\n\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: {\n        \"case-insensitive\": true\n      },\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        switch ($avoiding_name_collisions) {\n          case 0:\n            yy.getLogger().trace(\"Found comment\", yy_.yytext);\n            break;\n\n          case 1:\n            return 8;\n\n          case 2:\n            this.begin(\"CLASS\");\n            break;\n\n          case 3:\n            this.popState();\n            return 16;\n\n          case 4:\n            this.popState();\n            break;\n\n          case 5:\n            yy.getLogger().trace(\"Begin icon\");\n            this.begin(\"ICON\");\n            break;\n\n          case 6:\n            yy.getLogger().trace(\"SPACELINE\");\n            return 6;\n\n          case 7:\n            return 7;\n\n          case 8:\n            return 15;\n\n          case 9:\n            yy.getLogger().trace(\"end icon\");\n            this.popState();\n            break;\n\n          case 10:\n            yy.getLogger().trace(\"Exploding node\");\n            this.begin(\"NODE\");\n            return 19;\n\n          case 11:\n            yy.getLogger().trace(\"Cloud\");\n            this.begin(\"NODE\");\n            return 19;\n\n          case 12:\n            yy.getLogger().trace(\"Explosion Bang\");\n            this.begin(\"NODE\");\n            return 19;\n\n          case 13:\n            yy.getLogger().trace(\"Cloud Bang\");\n            this.begin(\"NODE\");\n            return 19;\n\n          case 14:\n            this.begin(\"NODE\");\n            return 19;\n\n          case 15:\n            this.begin(\"NODE\");\n            return 19;\n\n          case 16:\n            this.begin(\"NODE\");\n            return 19;\n\n          case 17:\n            this.begin(\"NODE\");\n            return 19;\n\n          case 18:\n            return 13;\n\n          case 19:\n            return 22;\n\n          case 20:\n            return 11;\n\n          case 21:\n            yy.getLogger().trace(\"Starting NSTR\");\n            this.begin(\"NSTR\");\n            break;\n\n          case 22:\n            yy.getLogger().trace(\"description:\", yy_.yytext);\n            return \"NODE_DESCR\";\n\n          case 23:\n            this.popState();\n            break;\n\n          case 24:\n            this.popState();\n            yy.getLogger().trace(\"node end ))\");\n            return \"NODE_DEND\";\n\n          case 25:\n            this.popState();\n            yy.getLogger().trace(\"node end )\");\n            return \"NODE_DEND\";\n\n          case 26:\n            this.popState();\n            yy.getLogger().trace(\"node end ...\", yy_.yytext);\n            return \"NODE_DEND\";\n\n          case 27:\n            this.popState();\n            yy.getLogger().trace(\"node end ((\");\n            return \"NODE_DEND\";\n\n          case 28:\n            this.popState();\n            yy.getLogger().trace(\"node end (-\");\n            return \"NODE_DEND\";\n\n          case 29:\n            this.popState();\n            yy.getLogger().trace(\"node end (-\");\n            return \"NODE_DEND\";\n\n          case 30:\n            this.popState();\n            yy.getLogger().trace(\"node end ((\");\n            return \"NODE_DEND\";\n\n          case 31:\n            this.popState();\n            yy.getLogger().trace(\"node end ((\");\n            return \"NODE_DEND\";\n\n          case 32:\n            yy.getLogger().trace(\"Long description:\", yy_.yytext);\n            return 20;\n\n          case 33:\n            yy.getLogger().trace(\"Long description:\", yy_.yytext);\n            return 20;\n        }\n      },\n      rules: [/^(?:\\s*%%.*)/i, /^(?:mindmap\\b)/i, /^(?::::)/i, /^(?:.+)/i, /^(?:\\n)/i, /^(?:::icon\\()/i, /^(?:[\\s]+[\\n])/i, /^(?:[\\n]+)/i, /^(?:[^\\)]+)/i, /^(?:\\))/i, /^(?:-\\))/i, /^(?:\\(-)/i, /^(?:\\)\\))/i, /^(?:\\))/i, /^(?:\\(\\()/i, /^(?:\\{\\{)/i, /^(?:\\()/i, /^(?:\\[)/i, /^(?:[\\s]+)/i, /^(?:[^\\(\\[\\n\\-\\)\\{\\}]+)/i, /^(?:$)/i, /^(?:[\"])/i, /^(?:[^\"]+)/i, /^(?:[\"])/i, /^(?:[\\)]\\))/i, /^(?:[\\)])/i, /^(?:[\\]])/i, /^(?:\\}\\})/i, /^(?:\\(-)/i, /^(?:-\\))/i, /^(?:\\(\\()/i, /^(?:\\()/i, /^(?:[^\\)\\]\\(\\}]+)/i, /^(?:.+(?!\\(\\())/i],\n      conditions: {\n        \"CLASS\": {\n          \"rules\": [3, 4],\n          \"inclusive\": false\n        },\n        \"ICON\": {\n          \"rules\": [8, 9],\n          \"inclusive\": false\n        },\n        \"NSTR\": {\n          \"rules\": [22, 23],\n          \"inclusive\": false\n        },\n        \"NODE\": {\n          \"rules\": [21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33],\n          \"inclusive\": false\n        },\n        \"INITIAL\": {\n          \"rules\": [0, 1, 2, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\n          \"inclusive\": true\n        }\n      }\n    };\n    return lexer2;\n  }();\n\n  parser2.lexer = lexer;\n\n  function Parser() {\n    this.yy = {};\n  }\n\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\n\nparser.parser = parser;\nconst mindmapParser = parser;\n\nconst sanitizeText = text => sanitizeText$1(text, getConfig());\n\nlet nodes = [];\nlet cnt = 0;\nlet elements = {};\n\nconst clear = () => {\n  nodes = [];\n  cnt = 0;\n  elements = {};\n};\n\nconst getParent = function (level) {\n  for (let i = nodes.length - 1; i >= 0; i--) {\n    if (nodes[i].level < level) {\n      return nodes[i];\n    }\n  }\n\n  return null;\n};\n\nconst getMindmap = () => {\n  return nodes.length > 0 ? nodes[0] : null;\n};\n\nconst addNode = (level, id, descr, type) => {\n  log.info(\"addNode\", level, id, descr, type);\n  const conf = getConfig();\n  const node = {\n    id: cnt++,\n    nodeId: sanitizeText(id),\n    level,\n    descr: sanitizeText(descr),\n    type,\n    children: [],\n    width: getConfig().mindmap.maxNodeWidth\n  };\n\n  switch (node.type) {\n    case nodeType.ROUNDED_RECT:\n      node.padding = 2 * conf.mindmap.padding;\n      break;\n\n    case nodeType.RECT:\n      node.padding = 2 * conf.mindmap.padding;\n      break;\n\n    case nodeType.HEXAGON:\n      node.padding = 2 * conf.mindmap.padding;\n      break;\n\n    default:\n      node.padding = conf.mindmap.padding;\n  }\n\n  const parent = getParent(level);\n\n  if (parent) {\n    parent.children.push(node);\n    nodes.push(node);\n  } else {\n    if (nodes.length === 0) {\n      nodes.push(node);\n    } else {\n      let error = new Error('There can be only one root. No parent could be found for (\"' + node.descr + '\")');\n      error.hash = {\n        text: \"branch \" + name,\n        token: \"branch \" + name,\n        line: \"1\",\n        loc: {\n          first_line: 1,\n          last_line: 1,\n          first_column: 1,\n          last_column: 1\n        },\n        expected: ['\"checkout ' + name + '\"']\n      };\n      throw error;\n    }\n  }\n};\n\nconst nodeType = {\n  DEFAULT: 0,\n  NO_BORDER: 0,\n  ROUNDED_RECT: 1,\n  RECT: 2,\n  CIRCLE: 3,\n  CLOUD: 4,\n  BANG: 5,\n  HEXAGON: 6\n};\n\nconst getType = (startStr, endStr) => {\n  log.debug(\"In get type\", startStr, endStr);\n\n  switch (startStr) {\n    case \"[\":\n      return nodeType.RECT;\n\n    case \"(\":\n      return endStr === \")\" ? nodeType.ROUNDED_RECT : nodeType.CLOUD;\n\n    case \"((\":\n      return nodeType.CIRCLE;\n\n    case \")\":\n      return nodeType.CLOUD;\n\n    case \"))\":\n      return nodeType.BANG;\n\n    case \"{{\":\n      return nodeType.HEXAGON;\n\n    default:\n      return nodeType.DEFAULT;\n  }\n};\n\nconst setElementForId = (id, element) => {\n  elements[id] = element;\n};\n\nconst decorateNode = decoration => {\n  const node = nodes[nodes.length - 1];\n\n  if (decoration && decoration.icon) {\n    node.icon = sanitizeText(decoration.icon);\n  }\n\n  if (decoration && decoration.class) {\n    node.class = sanitizeText(decoration.class);\n  }\n};\n\nconst type2Str = type => {\n  switch (type) {\n    case nodeType.DEFAULT:\n      return \"no-border\";\n\n    case nodeType.RECT:\n      return \"rect\";\n\n    case nodeType.ROUNDED_RECT:\n      return \"rounded-rect\";\n\n    case nodeType.CIRCLE:\n      return \"circle\";\n\n    case nodeType.CLOUD:\n      return \"cloud\";\n\n    case nodeType.BANG:\n      return \"bang\";\n\n    case nodeType.HEXAGON:\n      return \"hexgon\";\n\n    default:\n      return \"no-border\";\n  }\n};\n\nlet parseError;\n\nconst setErrorHandler = handler => {\n  parseError = handler;\n};\n\nconst getLogger = () => log;\n\nconst getNodeById = id => nodes[id];\n\nconst getElementById = id => elements[id];\n\nconst mindmapDb = /* @__PURE__ */Object.freeze( /* @__PURE__ */Object.defineProperty({\n  __proto__: null,\n  addNode,\n  clear,\n  decorateNode,\n  getElementById,\n  getLogger,\n  getMindmap,\n  getNodeById,\n  getType,\n  nodeType,\n\n  get parseError() {\n    return parseError;\n  },\n\n  sanitizeText,\n  setElementForId,\n  setErrorHandler,\n  type2Str\n}, Symbol.toStringTag, {\n  value: \"Module\"\n}));\nconst MAX_SECTIONS = 12;\n\nfunction wrap(text, width) {\n  text.each(function () {\n    var text2 = select(this),\n        words = text2.text().split(/(\\s+|<br>)/).reverse(),\n        word,\n        line = [],\n        lineHeight = 1.1,\n        y = text2.attr(\"y\"),\n        dy = parseFloat(text2.attr(\"dy\")),\n        tspan = text2.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n\n    for (let j = 0; j < words.length; j++) {\n      word = words[words.length - 1 - j];\n      line.push(word);\n      tspan.text(line.join(\" \").trim());\n\n      if (tspan.node().getComputedTextLength() > width || word === \"<br>\") {\n        line.pop();\n        tspan.text(line.join(\" \").trim());\n\n        if (word === \"<br>\") {\n          line = [\"\"];\n        } else {\n          line = [word];\n        }\n\n        tspan = text2.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", lineHeight + \"em\").text(word);\n      }\n    }\n  });\n}\n\nconst defaultBkg = function (elem, node, section) {\n  const rd = 5;\n  elem.append(\"path\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + type2Str(node.type)).attr(\"d\", `M0 ${node.height - rd} v${-node.height + 2 * rd} q0,-5 5,-5 h${node.width - 2 * rd} q5,0 5,5 v${node.height - rd} H0 Z`);\n  elem.append(\"line\").attr(\"class\", \"node-line-\" + section).attr(\"x1\", 0).attr(\"y1\", node.height).attr(\"x2\", node.width).attr(\"y2\", node.height);\n};\n\nconst rectBkg = function (elem, node) {\n  elem.append(\"rect\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + type2Str(node.type)).attr(\"height\", node.height).attr(\"width\", node.width);\n};\n\nconst cloudBkg = function (elem, node) {\n  const w = node.width;\n  const h = node.height;\n  const r1 = 0.15 * w;\n  const r2 = 0.25 * w;\n  const r3 = 0.35 * w;\n  const r4 = 0.2 * w;\n  elem.append(\"path\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + type2Str(node.type)).attr(\"d\", `M0 0 a${r1},${r1} 0 0,1 ${w * 0.25},${-1 * w * 0.1}\n      a${r3},${r3} 1 0,1 ${w * 0.4},${-1 * w * 0.1}\n      a${r2},${r2} 1 0,1 ${w * 0.35},${1 * w * 0.2}\n\n      a${r1},${r1} 1 0,1 ${w * 0.15},${1 * h * 0.35}\n      a${r4},${r4} 1 0,1 ${-1 * w * 0.15},${1 * h * 0.65}\n\n      a${r2},${r1} 1 0,1 ${-1 * w * 0.25},${w * 0.15}\n      a${r3},${r3} 1 0,1 ${-1 * w * 0.5},${0}\n      a${r1},${r1} 1 0,1 ${-1 * w * 0.25},${-1 * w * 0.15}\n\n      a${r1},${r1} 1 0,1 ${-1 * w * 0.1},${-1 * h * 0.35}\n      a${r4},${r4} 1 0,1 ${w * 0.1},${-1 * h * 0.65}\n\n    H0 V0 Z`);\n};\n\nconst bangBkg = function (elem, node) {\n  const w = node.width;\n  const h = node.height;\n  const r = 0.15 * w;\n  elem.append(\"path\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + type2Str(node.type)).attr(\"d\", `M0 0 a${r},${r} 1 0,0 ${w * 0.25},${-1 * h * 0.1}\n      a${r},${r} 1 0,0 ${w * 0.25},${0}\n      a${r},${r} 1 0,0 ${w * 0.25},${0}\n      a${r},${r} 1 0,0 ${w * 0.25},${1 * h * 0.1}\n\n      a${r},${r} 1 0,0 ${w * 0.15},${1 * h * 0.33}\n      a${r * 0.8},${r * 0.8} 1 0,0 ${0},${1 * h * 0.34}\n      a${r},${r} 1 0,0 ${-1 * w * 0.15},${1 * h * 0.33}\n\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${h * 0.15}\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${0}\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${0}\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${-1 * h * 0.15}\n\n      a${r},${r} 1 0,0 ${-1 * w * 0.1},${-1 * h * 0.33}\n      a${r * 0.8},${r * 0.8} 1 0,0 ${0},${-1 * h * 0.34}\n      a${r},${r} 1 0,0 ${w * 0.1},${-1 * h * 0.33}\n\n    H0 V0 Z`);\n};\n\nconst circleBkg = function (elem, node) {\n  elem.append(\"circle\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + type2Str(node.type)).attr(\"r\", node.width / 2);\n};\n\nfunction insertPolygonShape(parent, w, h, points, node) {\n  return parent.insert(\"polygon\", \":first-child\").attr(\"points\", points.map(function (d) {\n    return d.x + \",\" + d.y;\n  }).join(\" \")).attr(\"transform\", \"translate(\" + (node.width - w) / 2 + \", \" + h + \")\");\n}\n\nconst hexagonBkg = function (elem, node) {\n  const h = node.height;\n  const f = 4;\n  const m = h / f;\n  const w = node.width - node.padding + 2 * m;\n  const points = [{\n    x: m,\n    y: 0\n  }, {\n    x: w - m,\n    y: 0\n  }, {\n    x: w,\n    y: -h / 2\n  }, {\n    x: w - m,\n    y: -h\n  }, {\n    x: m,\n    y: -h\n  }, {\n    x: 0,\n    y: -h / 2\n  }];\n  insertPolygonShape(elem, w, h, points, node);\n};\n\nconst roundedRectBkg = function (elem, node) {\n  elem.append(\"rect\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + type2Str(node.type)).attr(\"height\", node.height).attr(\"rx\", node.padding).attr(\"ry\", node.padding).attr(\"width\", node.width);\n};\n\nconst drawNode = function (elem, node, fullSection, conf) {\n  const section = fullSection % (MAX_SECTIONS - 1);\n  const nodeElem = elem.append(\"g\");\n  node.section = section;\n  let sectionClass = \"section-\" + section;\n\n  if (section < 0) {\n    sectionClass += \" section-root\";\n  }\n\n  nodeElem.attr(\"class\", (node.class ? node.class + \" \" : \"\") + \"mindmap-node \" + sectionClass);\n  const bkgElem = nodeElem.append(\"g\");\n  const textElem = nodeElem.append(\"g\");\n  const txt = textElem.append(\"text\").text(node.descr).attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\").call(wrap, node.width);\n  const bbox = txt.node().getBBox();\n  const fontSize = conf.fontSize.replace ? conf.fontSize.replace(\"px\", \"\") : conf.fontSize;\n  node.height = bbox.height + fontSize * 1.1 * 0.5 + node.padding;\n  node.width = bbox.width + 2 * node.padding;\n\n  if (node.icon) {\n    if (node.type === nodeType.CIRCLE) {\n      node.height += 50;\n      node.width += 50;\n      const icon = nodeElem.append(\"foreignObject\").attr(\"height\", \"50px\").attr(\"width\", node.width).attr(\"style\", \"text-align: center;\");\n      icon.append(\"div\").attr(\"class\", \"icon-container\").append(\"i\").attr(\"class\", \"node-icon-\" + section + \" \" + node.icon);\n      textElem.attr(\"transform\", \"translate(\" + node.width / 2 + \", \" + (node.height / 2 - 1.5 * node.padding) + \")\");\n    } else {\n      node.width += 50;\n      const orgHeight = node.height;\n      node.height = Math.max(orgHeight, 60);\n      const heightDiff = Math.abs(node.height - orgHeight);\n      const icon = nodeElem.append(\"foreignObject\").attr(\"width\", \"60px\").attr(\"height\", node.height).attr(\"style\", \"text-align: center;margin-top:\" + heightDiff / 2 + \"px;\");\n      icon.append(\"div\").attr(\"class\", \"icon-container\").append(\"i\").attr(\"class\", \"node-icon-\" + section + \" \" + node.icon);\n      textElem.attr(\"transform\", \"translate(\" + (25 + node.width / 2) + \", \" + (heightDiff / 2 + node.padding / 2) + \")\");\n    }\n  } else {\n    textElem.attr(\"transform\", \"translate(\" + node.width / 2 + \", \" + node.padding / 2 + \")\");\n  }\n\n  switch (node.type) {\n    case nodeType.DEFAULT:\n      defaultBkg(bkgElem, node, section);\n      break;\n\n    case nodeType.ROUNDED_RECT:\n      roundedRectBkg(bkgElem, node);\n      break;\n\n    case nodeType.RECT:\n      rectBkg(bkgElem, node);\n      break;\n\n    case nodeType.CIRCLE:\n      bkgElem.attr(\"transform\", \"translate(\" + node.width / 2 + \", \" + +node.height / 2 + \")\");\n      circleBkg(bkgElem, node);\n      break;\n\n    case nodeType.CLOUD:\n      cloudBkg(bkgElem, node);\n      break;\n\n    case nodeType.BANG:\n      bangBkg(bkgElem, node);\n      break;\n\n    case nodeType.HEXAGON:\n      hexagonBkg(bkgElem, node);\n      break;\n  }\n\n  setElementForId(node.id, nodeElem);\n  return node.height;\n};\n\nconst drawEdge = function drawEdge2(edgesElem, mindmap, parent, depth, fullSection) {\n  const section = fullSection % (MAX_SECTIONS - 1);\n  const sx = parent.x + parent.width / 2;\n  const sy = parent.y + parent.height / 2;\n  const ex = mindmap.x + mindmap.width / 2;\n  const ey = mindmap.y + mindmap.height / 2;\n  const mx = ex > sx ? sx + Math.abs(sx - ex) / 2 : sx - Math.abs(sx - ex) / 2;\n  const my = ey > sy ? sy + Math.abs(sy - ey) / 2 : sy - Math.abs(sy - ey) / 2;\n  const qx = ex > sx ? Math.abs(sx - mx) / 2 + sx : -Math.abs(sx - mx) / 2 + sx;\n  const qy = ey > sy ? Math.abs(sy - my) / 2 + sy : -Math.abs(sy - my) / 2 + sy;\n  edgesElem.append(\"path\").attr(\"d\", parent.direction === \"TB\" || parent.direction === \"BT\" ? `M${sx},${sy} Q${sx},${qy} ${mx},${my} T${ex},${ey}` : `M${sx},${sy} Q${qx},${sy} ${mx},${my} T${ex},${ey}`).attr(\"class\", \"edge section-edge-\" + section + \" edge-depth-\" + depth);\n};\n\nconst positionNode = function (node) {\n  const nodeElem = getElementById(node.id);\n  const x = node.x || 0;\n  const y = node.y || 0;\n  nodeElem.attr(\"transform\", \"translate(\" + x + \",\" + y + \")\");\n};\n\nconst svgDraw = {\n  drawNode,\n  positionNode,\n  drawEdge\n};\ncytoscape.use(coseBilkent);\n\nfunction drawNodes(svg, mindmap, section, conf) {\n  svgDraw.drawNode(svg, mindmap, section, conf);\n\n  if (mindmap.children) {\n    mindmap.children.forEach((child, index) => {\n      drawNodes(svg, child, section < 0 ? index : section, conf);\n    });\n  }\n}\n\nfunction drawEdges(edgesEl, cy) {\n  cy.edges().map((edge, id) => {\n    const data = edge.data();\n\n    if (edge[0]._private.bodyBounds) {\n      const bounds = edge[0]._private.rscratch;\n      log.trace(\"Edge: \", id, data);\n      edgesEl.insert(\"path\").attr(\"d\", `M ${bounds.startX},${bounds.startY} L ${bounds.midX},${bounds.midY} L${bounds.endX},${bounds.endY} `).attr(\"class\", \"edge section-edge-\" + data.section + \" edge-depth-\" + data.depth);\n    }\n  });\n}\n\nfunction addNodes(mindmap, cy, conf, level) {\n  cy.add({\n    group: \"nodes\",\n    data: {\n      id: mindmap.id,\n      labelText: mindmap.descr,\n      height: mindmap.height,\n      width: mindmap.width,\n      level,\n      nodeId: mindmap.id,\n      padding: mindmap.padding,\n      type: mindmap.type\n    },\n    position: {\n      x: mindmap.x,\n      y: mindmap.y\n    }\n  });\n\n  if (mindmap.children) {\n    mindmap.children.forEach(child => {\n      addNodes(child, cy, conf, level + 1);\n      cy.add({\n        group: \"edges\",\n        data: {\n          id: `${mindmap.id}_${child.id}`,\n          source: mindmap.id,\n          target: child.id,\n          depth: level,\n          section: child.section\n        }\n      });\n    });\n  }\n}\n\nfunction layoutMindmap(node, conf) {\n  return new Promise(resolve => {\n    const renderEl = select(\"body\").append(\"div\").attr(\"id\", \"cy\").attr(\"style\", \"display:none\");\n    const cy = cytoscape({\n      container: document.getElementById(\"cy\"),\n      // container to render in\n      style: [{\n        selector: \"edge\",\n        style: {\n          \"curve-style\": \"bezier\"\n        }\n      }]\n    });\n    renderEl.remove();\n    addNodes(node, cy, conf, 0);\n    cy.nodes().forEach(function (n) {\n      n.layoutDimensions = () => {\n        const data = n.data();\n        return {\n          w: data.width,\n          h: data.height\n        };\n      };\n    });\n    cy.layout({\n      name: \"cose-bilkent\",\n      quality: \"proof\",\n      // headless: true,\n      styleEnabled: false,\n      animate: false\n    }).run();\n    cy.ready(e => {\n      log.info(\"Ready\", e);\n      resolve(cy);\n    });\n  });\n}\n\nfunction positionNodes(cy) {\n  cy.nodes().map((node, id) => {\n    const data = node.data();\n    data.x = node.position().x;\n    data.y = node.position().y;\n    svgDraw.positionNode(data);\n    const el = getElementById(data.nodeId);\n    log.info(\"Id:\", id, \"Position: (\", node.position().x, \", \", node.position().y, \")\", data);\n    el.attr(\"transform\", `translate(${node.position().x - data.width / 2}, ${node.position().y - data.height / 2})`);\n    el.attr(\"attr\", `apa-${id})`);\n  });\n}\n\nconst draw = async (text, id, version, diagObj) => {\n  const conf = getConfig();\n  diagObj.db.clear();\n  diagObj.parser.parse(text);\n  log.debug(\"Renering info diagram\\n\" + text);\n  const securityLevel = getConfig().securityLevel;\n  let sandboxElement;\n\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const svg = root.select(\"#\" + id);\n  svg.append(\"g\");\n  const mm = diagObj.db.getMindmap();\n  const edgesElem = svg.append(\"g\");\n  edgesElem.attr(\"class\", \"mindmap-edges\");\n  const nodesElem = svg.append(\"g\");\n  nodesElem.attr(\"class\", \"mindmap-nodes\");\n  drawNodes(nodesElem, mm, -1, conf);\n  const cy = await layoutMindmap(mm, conf);\n  drawEdges(edgesElem, cy);\n  positionNodes(cy);\n  setupGraphViewbox(void 0, svg, conf.mindmap.padding, conf.mindmap.useMaxWidth);\n};\n\nconst mindmapRenderer = {\n  draw\n};\n\nconst genSections = options => {\n  let sections = \"\";\n\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    options[\"lineColor\" + i] = options[\"lineColor\" + i] || options[\"cScaleInv\" + i];\n\n    if (isDark(options[\"lineColor\" + i])) {\n      options[\"lineColor\" + i] = lighten(options[\"lineColor\" + i], 20);\n    } else {\n      options[\"lineColor\" + i] = darken(options[\"lineColor\" + i], 20);\n    }\n  }\n\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    const sw = \"\" + (17 - 3 * i);\n    sections += `\n    .section-${i - 1} rect, .section-${i - 1} path, .section-${i - 1} circle, .section-${i - 1} polygon, .section-${i - 1} path  {\n      fill: ${options[\"cScale\" + i]};\n    }\n    .section-${i - 1} text {\n     fill: ${options[\"cScaleLabel\" + i]};\n    }\n    .node-icon-${i - 1} {\n      font-size: 40px;\n      color: ${options[\"cScaleLabel\" + i]};\n    }\n    .section-edge-${i - 1}{\n      stroke: ${options[\"cScale\" + i]};\n    }\n    .edge-depth-${i - 1}{\n      stroke-width: ${sw};\n    }\n    .section-${i - 1} line {\n      stroke: ${options[\"cScaleInv\" + i]} ;\n      stroke-width: 3;\n    }\n\n    .disabled, .disabled circle, .disabled text {\n      fill: lightgray;\n    }\n    .disabled text {\n      fill: #efefef;\n    }\n    `;\n  }\n\n  return sections;\n};\n\nconst getStyles = options => `\n  .edge {\n    stroke-width: 3;\n  }\n  ${genSections(options)}\n  .section-root rect, .section-root path, .section-root circle, .section-root polygon  {\n    fill: ${options.git0};\n  }\n  .section-root text {\n    fill: ${options.gitBranchLabel0};\n  }\n  .icon-container {\n    height:100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .edge {\n    fill: none;\n  }\n`;\n\nconst mindmapStyles = getStyles;\nconst diagram = {\n  db: mindmapDb,\n  renderer: mindmapRenderer,\n  parser: mindmapParser,\n  styles: mindmapStyles\n};\nexport { diagram };","map":{"version":3,"mappings":"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","names":["parser","o","k","v","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","trace","yy","symbols_","terminals_","productions_","performAction","anonymous","yytext","yyleng","yylineno","yystate","$$","_$","$0","getLogger","info","id","addNode","descr","type","decorateNode","icon","class","$","getType","nodeType","DEFAULT","table","defaultActions","parseError","str","hash","recoverable","error","Error","parse","input","self","stack","tstack","vstack","lstack","TERROR","EOF","args","slice","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","push","ranges","options","getPrototypeOf","lex","token","pop","Array","symbol","state","action","r","yyval","p","len","newState","expected","errStr","showPosition","join","text","match","line","loc","first_line","last_line","first_column","last_column","range","apply","concat","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","lines","unput","split","substr","oldLines","more","reject","backtrack_lexer","less","n","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","sanitizeText","_sanitizeText","getConfig","nodes","cnt","elements","clear","getParent","level","getMindmap","log","conf","node","nodeId","children","width","mindmap","maxNodeWidth","ROUNDED_RECT","padding","RECT","HEXAGON","parent","name","NO_BORDER","CIRCLE","CLOUD","BANG","startStr","endStr","debug","setElementForId","element","decoration","type2Str","setErrorHandler","handler","getNodeById","getElementById","MAX_SECTIONS","wrap","each","select","words","reverse","word","lineHeight","y","attr","dy","parseFloat","tspan","append","j","trim","getComputedTextLength","defaultBkg","elem","section","rd","db.type2Str","height","rectBkg","cloudBkg","w","h","r1","r2","r3","r4","bangBkg","circleBkg","insertPolygonShape","points","insert","map","d","x","hexagonBkg","f","m","roundedRectBkg","drawNode","fullSection","nodeElem","sectionClass","bkgElem","textElem","txt","bbox","getBBox","fontSize","db.nodeType","orgHeight","max","heightDiff","db.setElementForId","drawEdge","edgesElem","depth","sx","sy","ex","ey","mx","my","qx","qy","direction","positionNode","db.getElementById","cytoscape","use","coseBilkent","drawNodes","svg","svgDraw","forEach","child","drawEdges","edgesEl","cy","edges","edge","data","_private","bodyBounds","bounds","rscratch","startX","startY","midX","midY","endX","endY","addNodes","add","group","labelText","position","source","target","layoutMindmap","Promise","resolve","renderEl","container","document","style","selector","remove","layoutDimensions","layout","quality","styleEnabled","animate","run","ready","e","positionNodes","el","draw","version","diagObj","db","securityLevel","sandboxElement","root","contentDocument","body","mm","nodesElem","setupGraphViewbox","useMaxWidth","mindmapRenderer","genSections","sections","THEME_COLOR_LIMIT","isDark","lighten","darken","sw","getStyles","git0","gitBranchLabel0","diagram","mindmapDb","renderer","mindmapParser","styles","mindmapStyles"],"sources":["../src/diagrams/mindmap/parser/mindmap.jison","../src/diagrams/mindmap/mindmapDb.js","../src/diagrams/mindmap/svgDraw.js","../src/diagrams/mindmap/mindmapRenderer.js","../src/diagrams/mindmap/styles.js","../src/diagrams/mindmap/mindmap-definition.ts"],"sourcesContent":["/** mermaid\n *  https://knsv.github.io/mermaid\n *  (c) 2015 Knut Sveidqvist\n *  MIT license.\n */\n%lex\n\n%options case-insensitive\n\n%{\n\t// Pre-lexer code can go here\n%}\n%x NODE\n%x NSTR\n%x ICON\n%x CLASS\n\n%%\n\n\\s*\\%\\%.*          {yy.getLogger().trace('Found comment',yytext);}\n// \\%\\%[^\\n]*\\n                             /* skip comments */\n\"mindmap\"\t\t       return 'MINDMAP';\n\":::\"              { this.begin('CLASS'); }\n<CLASS>.+\t\t\t     { this.popState();return 'CLASS'; }\n<CLASS>\\n\t\t\t\t   { this.popState();}\n// [\\s]*\"::icon(\"   { this.begin('ICON'); }\n\"::icon(\"   { yy.getLogger().trace('Begin icon');this.begin('ICON'); }\n[\\s]+[\\n]     {yy.getLogger().trace('SPACELINE');return 'SPACELINE'                 /* skip all whitespace */    ;}\n[\\n]+               return 'NL';\n<ICON>[^\\)]+\t\t\t { return 'ICON'; }\n<ICON>\\)\t\t\t\t   {yy.getLogger().trace('end icon');this.popState();}\n\"-)\"               { yy.getLogger().trace('Exploding node'); this.begin('NODE');return 'NODE_DSTART'; }\n\"(-\"               { yy.getLogger().trace('Cloud'); this.begin('NODE');return 'NODE_DSTART'; }\n\"))\"               { yy.getLogger().trace('Explosion Bang'); this.begin('NODE');return 'NODE_DSTART'; }\n\")\"               { yy.getLogger().trace('Cloud Bang'); this.begin('NODE');return 'NODE_DSTART'; }\n\"((\"               { this.begin('NODE');return 'NODE_DSTART'; }\n\"{{\"               { this.begin('NODE');return 'NODE_DSTART'; }\n\"(\"                { this.begin('NODE');return 'NODE_DSTART'; }\n\"[\"                { this.begin('NODE');return 'NODE_DSTART'; }\n[\\s]+              return 'SPACELIST'                 /* skip all whitespace */    ;\n// !(-\\()            return 'NODE_ID';\n[^\\(\\[\\n\\-\\)\\{\\}]+         return 'NODE_ID';\n<<EOF>>            return 'EOF';\n<NODE>[\"]          { yy.getLogger().trace('Starting NSTR');this.begin(\"NSTR\");}\n<NSTR>[^\"]+        { yy.getLogger().trace('description:', yytext); return \"NODE_DESCR\";}\n<NSTR>[\"]          {this.popState();}\n<NODE>[\\)]\\)         {this.popState();yy.getLogger().trace('node end ))');return \"NODE_DEND\";}\n<NODE>[\\)]         {this.popState();yy.getLogger().trace('node end )');return \"NODE_DEND\";}\n<NODE>[\\]]         {this.popState();yy.getLogger().trace('node end ...',yytext);return \"NODE_DEND\";}\n<NODE>\"}}\"         {this.popState();yy.getLogger().trace('node end ((');return \"NODE_DEND\";}\n<NODE>\"(-\"         {this.popState();yy.getLogger().trace('node end (-');return \"NODE_DEND\";}\n<NODE>\"-)\"         {this.popState();yy.getLogger().trace('node end (-');return \"NODE_DEND\";}\n<NODE>\"((\"         {this.popState();yy.getLogger().trace('node end ((');return \"NODE_DEND\";}\n<NODE>\"(\"          {this.popState();yy.getLogger().trace('node end ((');return \"NODE_DEND\";}\n<NODE>[^\\)\\]\\(\\}]+     { yy.getLogger().trace('Long description:', yytext);   return 'NODE_DESCR';}\n<NODE>.+(?!\\(\\()     { yy.getLogger().trace('Long description:', yytext);   return 'NODE_DESCR';}\n// [\\[]               return 'NODE_START';\n// .+                 return 'TXT' ;\n\n/lex\n\n%start start\n\n%% /* language grammar */\n\nstart\n// %{\t: info document 'EOF' { return yy; } }\n\t: mindMap\n  |\tspaceLines mindMap\n  ;\n\nspaceLines\n  : SPACELINE\n  | spaceLines SPACELINE\n  | spaceLines NL\n  ;\n\nmindMap\n  : MINDMAP document  { return yy; }\n  | MINDMAP NL document  { return yy; }\n  ;\n\nstop\n  : NL {yy.getLogger().trace('Stop NL ');}\n  | EOF {yy.getLogger().trace('Stop EOF ');}\n  | SPACELINE\n  | stop NL {yy.getLogger().trace('Stop NL2 ');}\n  | stop EOF {yy.getLogger().trace('Stop EOF2 ');}\n  ;\ndocument\n\t: document statement stop\n\t| statement stop\n\t;\n\nstatement\n\t: SPACELIST node       { yy.getLogger().info('Node: ',$2.id);yy.addNode($1.length, $2.id, $2.descr, $2.type);  }\n\t| SPACELIST ICON       { yy.getLogger().trace('Icon: ',$2);yy.decorateNode({icon: $2}); }\n\t| SPACELIST CLASS      { yy.decorateNode({class: $2}); }\n  | SPACELINE { yy.getLogger().trace('SPACELIST');}\n\t| node\t\t\t\t\t       { yy.getLogger().trace('Node: ',$1.id);yy.addNode(0, $1.id, $1.descr, $1.type);  }\n\t| ICON                 { yy.decorateNode({icon: $1}); }\n\t| CLASS                { yy.decorateNode({class: $1}); }\n  | SPACELIST\n\t;\n\n\n\nnode\n  :nodeWithId\n  |nodeWithoutId\n  ;\n\nnodeWithoutId\n  :   NODE_DSTART NODE_DESCR NODE_DEND\n\t      { yy.getLogger().trace(\"node found ..\", $1); $$ = { id: $2, descr: $2, type: yy.getType($1, $3) }; }\n  ;\n\nnodeWithId\n\t:  NODE_ID             { $$ = { id: $1, descr: $1, type: yy.nodeType.DEFAULT }; }\n\t|  NODE_ID NODE_DSTART NODE_DESCR NODE_DEND\n\t                       { yy.getLogger().trace(\"node found ..\", $1); $$ = { id: $1, descr: $3, type: yy.getType($2, $4) }; }\n\t;\n%%\n","import { getConfig } from '../../config';\nimport { sanitizeText as _sanitizeText } from '../../diagrams/common/common';\nimport { log } from '../../logger';\n\nexport const sanitizeText = (text) => _sanitizeText(text, getConfig());\n\nlet nodes = [];\nlet cnt = 0;\nlet elements = {};\nexport const clear = () => {\n  nodes = [];\n  cnt = 0;\n  elements = {};\n};\n\nconst getParent = function (level) {\n  for (let i = nodes.length - 1; i >= 0; i--) {\n    if (nodes[i].level < level) {\n      return nodes[i];\n    }\n  }\n  // No parent found\n  return null;\n};\n\nexport const getMindmap = () => {\n  return nodes.length > 0 ? nodes[0] : null;\n};\nexport const addNode = (level, id, descr, type) => {\n  log.info('addNode', level, id, descr, type);\n  const conf = getConfig();\n  const node = {\n    id: cnt++,\n    nodeId: sanitizeText(id),\n    level,\n    descr: sanitizeText(descr),\n    type,\n    children: [],\n    width: getConfig().mindmap.maxNodeWidth,\n  };\n  switch (node.type) {\n    case nodeType.ROUNDED_RECT:\n      node.padding = 2 * conf.mindmap.padding;\n      break;\n    case nodeType.RECT:\n      node.padding = 2 * conf.mindmap.padding;\n      break;\n    case nodeType.HEXAGON:\n      node.padding = 2 * conf.mindmap.padding;\n      break;\n    default:\n      node.padding = conf.mindmap.padding;\n  }\n  const parent = getParent(level);\n  if (parent) {\n    parent.children.push(node);\n    // Keep all nodes in the list\n    nodes.push(node);\n  } else {\n    if (nodes.length === 0) {\n      // First node, the root\n      nodes.push(node);\n    } else {\n      // Syntax error ... there can only bee one root\n      let error = new Error(\n        'There can be only one root. No parent could be found for (\"' + node.descr + '\")'\n      );\n      error.hash = {\n        text: 'branch ' + name,\n        token: 'branch ' + name,\n        line: '1',\n        loc: { first_line: 1, last_line: 1, first_column: 1, last_column: 1 },\n        expected: ['\"checkout ' + name + '\"'],\n      };\n      throw error;\n    }\n  }\n};\n\nexport const nodeType = {\n  DEFAULT: 0,\n  NO_BORDER: 0,\n  ROUNDED_RECT: 1,\n  RECT: 2,\n  CIRCLE: 3,\n  CLOUD: 4,\n  BANG: 5,\n  HEXAGON: 6,\n};\n\nexport const getType = (startStr, endStr) => {\n  log.debug('In get type', startStr, endStr);\n  switch (startStr) {\n    case '[':\n      return nodeType.RECT;\n    case '(':\n      return endStr === ')' ? nodeType.ROUNDED_RECT : nodeType.CLOUD;\n    case '((':\n      return nodeType.CIRCLE;\n    case ')':\n      return nodeType.CLOUD;\n    case '))':\n      return nodeType.BANG;\n    case '{{':\n      return nodeType.HEXAGON;\n    default:\n      return nodeType.DEFAULT;\n  }\n};\n\nexport const setElementForId = (id, element) => {\n  elements[id] = element;\n};\n\nexport const decorateNode = (decoration) => {\n  const node = nodes[nodes.length - 1];\n  if (decoration && decoration.icon) {\n    node.icon = sanitizeText(decoration.icon);\n  }\n  if (decoration && decoration.class) {\n    node.class = sanitizeText(decoration.class);\n  }\n};\n\nexport const type2Str = (type) => {\n  switch (type) {\n    case nodeType.DEFAULT:\n      return 'no-border';\n    case nodeType.RECT:\n      return 'rect';\n    case nodeType.ROUNDED_RECT:\n      return 'rounded-rect';\n    case nodeType.CIRCLE:\n      return 'circle';\n    case nodeType.CLOUD:\n      return 'cloud';\n    case nodeType.BANG:\n      return 'bang';\n    case nodeType.HEXAGON:\n      return 'hexgon';\n    default:\n      return 'no-border';\n  }\n};\n\nexport let parseError;\nexport const setErrorHandler = (handler) => {\n  parseError = handler;\n};\n\n// Expose logger to grammar\nexport const getLogger = () => log;\n\nexport const getNodeById = (id) => nodes[id];\nexport const getElementById = (id) => elements[id];\n","import { select } from 'd3';\nimport * as db from './mindmapDb';\nconst MAX_SECTIONS = 12;\n\n/**\n * @param {string} text The text to be wrapped\n * @param {number} width The max width of the text\n */\nfunction wrap(text, width) {\n  text.each(function () {\n    var text = select(this),\n      words = text\n        .text()\n        .split(/(\\s+|<br>)/)\n        .reverse(),\n      word,\n      line = [],\n      lineHeight = 1.1, // ems\n      y = text.attr('y'),\n      dy = parseFloat(text.attr('dy')),\n      tspan = text\n        .text(null)\n        .append('tspan')\n        .attr('x', 0)\n        .attr('y', y)\n        .attr('dy', dy + 'em');\n    for (let j = 0; j < words.length; j++) {\n      word = words[words.length - 1 - j];\n      line.push(word);\n      tspan.text(line.join(' ').trim());\n      if (tspan.node().getComputedTextLength() > width || word === '<br>') {\n        line.pop();\n        tspan.text(line.join(' ').trim());\n        if (word === '<br>') {\n          line = [''];\n        } else {\n          line = [word];\n        }\n\n        tspan = text\n          .append('tspan')\n          .attr('x', 0)\n          .attr('y', y)\n          .attr('dy', lineHeight + 'em')\n          .text(word);\n      }\n    }\n  });\n}\n\nconst defaultBkg = function (elem, node, section) {\n  const rd = 5;\n  elem\n    .append('path')\n    .attr('id', 'node-' + node.id)\n    .attr('class', 'node-bkg node-' + db.type2Str(node.type))\n    .attr(\n      'd',\n      `M0 ${node.height - rd} v${-node.height + 2 * rd} q0,-5 5,-5 h${\n        node.width - 2 * rd\n      } q5,0 5,5 v${node.height - rd} H0 Z`\n    );\n\n  elem\n    .append('line')\n    .attr('class', 'node-line-' + section)\n    .attr('x1', 0)\n    .attr('y1', node.height)\n    .attr('x2', node.width)\n    .attr('y2', node.height);\n};\nconst rectBkg = function (elem, node) {\n  elem\n    .append('rect')\n    .attr('id', 'node-' + node.id)\n    .attr('class', 'node-bkg node-' + db.type2Str(node.type))\n    .attr('height', node.height)\n    .attr('width', node.width);\n};\nconst cloudBkg = function (elem, node) {\n  const w = node.width;\n  const h = node.height;\n  const r1 = 0.15 * w;\n  const r2 = 0.25 * w;\n  const r3 = 0.35 * w;\n  const r4 = 0.2 * w;\n  elem\n    .append('path')\n    .attr('id', 'node-' + node.id)\n    .attr('class', 'node-bkg node-' + db.type2Str(node.type))\n    .attr(\n      'd',\n      `M0 0 a${r1},${r1} 0 0,1 ${w * 0.25},${-1 * w * 0.1}\n      a${r3},${r3} 1 0,1 ${w * 0.4},${-1 * w * 0.1}\n      a${r2},${r2} 1 0,1 ${w * 0.35},${1 * w * 0.2}\n\n      a${r1},${r1} 1 0,1 ${w * 0.15},${1 * h * 0.35}\n      a${r4},${r4} 1 0,1 ${-1 * w * 0.15},${1 * h * 0.65}\n\n      a${r2},${r1} 1 0,1 ${-1 * w * 0.25},${w * 0.15}\n      a${r3},${r3} 1 0,1 ${-1 * w * 0.5},${0}\n      a${r1},${r1} 1 0,1 ${-1 * w * 0.25},${-1 * w * 0.15}\n\n      a${r1},${r1} 1 0,1 ${-1 * w * 0.1},${-1 * h * 0.35}\n      a${r4},${r4} 1 0,1 ${w * 0.1},${-1 * h * 0.65}\n\n    H0 V0 Z`\n    );\n};\nconst bangBkg = function (elem, node) {\n  const w = node.width;\n  const h = node.height;\n  const r = 0.15 * w;\n  elem\n    .append('path')\n    .attr('id', 'node-' + node.id)\n    .attr('class', 'node-bkg node-' + db.type2Str(node.type))\n    .attr(\n      'd',\n      `M0 0 a${r},${r} 1 0,0 ${w * 0.25},${-1 * h * 0.1}\n      a${r},${r} 1 0,0 ${w * 0.25},${0}\n      a${r},${r} 1 0,0 ${w * 0.25},${0}\n      a${r},${r} 1 0,0 ${w * 0.25},${1 * h * 0.1}\n\n      a${r},${r} 1 0,0 ${w * 0.15},${1 * h * 0.33}\n      a${r * 0.8},${r * 0.8} 1 0,0 ${0},${1 * h * 0.34}\n      a${r},${r} 1 0,0 ${-1 * w * 0.15},${1 * h * 0.33}\n\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${h * 0.15}\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${0}\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${0}\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${-1 * h * 0.15}\n\n      a${r},${r} 1 0,0 ${-1 * w * 0.1},${-1 * h * 0.33}\n      a${r * 0.8},${r * 0.8} 1 0,0 ${0},${-1 * h * 0.34}\n      a${r},${r} 1 0,0 ${w * 0.1},${-1 * h * 0.33}\n\n    H0 V0 Z`\n    );\n};\nconst circleBkg = function (elem, node) {\n  elem\n    .append('circle')\n    .attr('id', 'node-' + node.id)\n    .attr('class', 'node-bkg node-' + db.type2Str(node.type))\n    .attr('r', node.width / 2);\n};\n\n/**\n *\n * @param parent\n * @param w\n * @param h\n * @param points\n * @param node\n */\nfunction insertPolygonShape(parent, w, h, points, node) {\n  return parent\n    .insert('polygon', ':first-child')\n    .attr(\n      'points',\n      points\n        .map(function (d) {\n          return d.x + ',' + d.y;\n        })\n        .join(' ')\n    )\n    .attr('transform', 'translate(' + (node.width - w) / 2 + ', ' + h + ')');\n}\n\nconst hexagonBkg = function (elem, node) {\n  const h = node.height;\n  const f = 4;\n  const m = h / f;\n  const w = node.width - node.padding + 2 * m;\n  const points = [\n    { x: m, y: 0 },\n    { x: w - m, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w - m, y: -h },\n    { x: m, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n  const shapeSvg = insertPolygonShape(elem, w, h, points, node);\n};\n\nconst roundedRectBkg = function (elem, node) {\n  elem\n    .append('rect')\n    .attr('id', 'node-' + node.id)\n    .attr('class', 'node-bkg node-' + db.type2Str(node.type))\n    .attr('height', node.height)\n    .attr('rx', node.padding)\n    .attr('ry', node.padding)\n    .attr('width', node.width);\n};\n\n/**\n * @param {object} elem The D3 dom element in which the node is to be added\n * @param {object} node The node to be added\n * @param fullSection\n * @param {object} conf The configuration object\n * @returns {number} The height nodes dom element\n */\nexport const drawNode = function (elem, node, fullSection, conf) {\n  const section = fullSection % (MAX_SECTIONS - 1);\n  const nodeElem = elem.append('g');\n  node.section = section;\n  let sectionClass = 'section-' + section;\n  if (section < 0) {\n    sectionClass += ' section-root';\n  }\n  nodeElem.attr('class', (node.class ? node.class + ' ' : '') + 'mindmap-node ' + sectionClass);\n  const bkgElem = nodeElem.append('g');\n\n  // Create the wrapped text element\n  const textElem = nodeElem.append('g');\n  const txt = textElem\n    .append('text')\n    .text(node.descr)\n    .attr('dy', '1em')\n    .attr('alignment-baseline', 'middle')\n    .attr('dominant-baseline', 'middle')\n    .attr('text-anchor', 'middle')\n    .call(wrap, node.width);\n  const bbox = txt.node().getBBox();\n  const fontSize = conf.fontSize.replace ? conf.fontSize.replace('px', '') : conf.fontSize;\n  node.height = bbox.height + fontSize * 1.1 * 0.5 + node.padding;\n  node.width = bbox.width + 2 * node.padding;\n  if (node.icon) {\n    if (node.type === db.nodeType.CIRCLE) {\n      node.height += 50;\n      node.width += 50;\n      const icon = nodeElem\n        .append('foreignObject')\n        .attr('height', '50px')\n        .attr('width', node.width)\n        .attr('style', 'text-align: center;');\n      icon\n        .append('div')\n        .attr('class', 'icon-container')\n        .append('i')\n        .attr('class', 'node-icon-' + section + ' ' + node.icon);\n      textElem.attr(\n        'transform',\n        'translate(' + node.width / 2 + ', ' + (node.height / 2 - 1.5 * node.padding) + ')'\n      );\n    } else {\n      node.width += 50;\n      const orgHeight = node.height;\n      node.height = Math.max(orgHeight, 60);\n      const heightDiff = Math.abs(node.height - orgHeight);\n      const icon = nodeElem\n        .append('foreignObject')\n        .attr('width', '60px')\n        .attr('height', node.height)\n        .attr('style', 'text-align: center;margin-top:' + heightDiff / 2 + 'px;');\n\n      icon\n        .append('div')\n        .attr('class', 'icon-container')\n        .append('i')\n        .attr('class', 'node-icon-' + section + ' ' + node.icon);\n      textElem.attr(\n        'transform',\n        'translate(' + (25 + node.width / 2) + ', ' + (heightDiff / 2 + node.padding / 2) + ')'\n      );\n    }\n  } else {\n    textElem.attr('transform', 'translate(' + node.width / 2 + ', ' + node.padding / 2 + ')');\n  }\n\n  switch (node.type) {\n    case db.nodeType.DEFAULT:\n      defaultBkg(bkgElem, node, section, conf);\n      break;\n    case db.nodeType.ROUNDED_RECT:\n      roundedRectBkg(bkgElem, node, section, conf);\n      break;\n    case db.nodeType.RECT:\n      rectBkg(bkgElem, node, section, conf);\n      break;\n    case db.nodeType.CIRCLE:\n      bkgElem.attr('transform', 'translate(' + node.width / 2 + ', ' + +node.height / 2 + ')');\n      circleBkg(bkgElem, node, section, conf);\n      break;\n    case db.nodeType.CLOUD:\n      cloudBkg(bkgElem, node, section, conf);\n      break;\n    case db.nodeType.BANG:\n      bangBkg(bkgElem, node, section, conf);\n      break;\n    case db.nodeType.HEXAGON:\n      hexagonBkg(bkgElem, node, section, conf);\n      break;\n  }\n\n  // Position the node to its coordinate\n  // if (typeof node.x !== 'undefined' && typeof node.y !== 'undefined') {\n  //   nodeElem.attr('transform', 'translate(' + node.x + ',' + node.y + ')');\n  // }\n  db.setElementForId(node.id, nodeElem);\n  return node.height;\n};\n\nexport const drawEdge = function drawEdge(edgesElem, mindmap, parent, depth, fullSection) {\n  const section = fullSection % (MAX_SECTIONS - 1);\n  const sx = parent.x + parent.width / 2;\n  const sy = parent.y + parent.height / 2;\n  const ex = mindmap.x + mindmap.width / 2;\n  const ey = mindmap.y + mindmap.height / 2;\n  const mx = ex > sx ? sx + Math.abs(sx - ex) / 2 : sx - Math.abs(sx - ex) / 2;\n  const my = ey > sy ? sy + Math.abs(sy - ey) / 2 : sy - Math.abs(sy - ey) / 2;\n  const qx = ex > sx ? Math.abs(sx - mx) / 2 + sx : -Math.abs(sx - mx) / 2 + sx;\n  const qy = ey > sy ? Math.abs(sy - my) / 2 + sy : -Math.abs(sy - my) / 2 + sy;\n\n  edgesElem\n    .append('path')\n    .attr(\n      'd',\n      parent.direction === 'TB' || parent.direction === 'BT'\n        ? `M${sx},${sy} Q${sx},${qy} ${mx},${my} T${ex},${ey}`\n        : `M${sx},${sy} Q${qx},${sy} ${mx},${my} T${ex},${ey}`\n    )\n    .attr('class', 'edge section-edge-' + section + ' edge-depth-' + depth);\n};\n\nexport const positionNode = function (node) {\n  const nodeElem = db.getElementById(node.id);\n\n  const x = node.x || 0;\n  const y = node.y || 0;\n  // Position the node to its coordinate\n  nodeElem.attr('transform', 'translate(' + x + ',' + y + ')');\n};\n\nexport default { drawNode, positionNode, drawEdge };\n","/** Created by knut on 14-12-11. */\nimport { select } from 'd3';\nimport { log } from '../../logger';\nimport { getConfig } from '../../config';\nimport { setupGraphViewbox } from '../../setupGraphViewbox';\nimport svgDraw from './svgDraw';\nimport cytoscape from 'cytoscape/dist/cytoscape.umd.js';\nimport coseBilkent from 'cytoscape-cose-bilkent';\nimport * as db from './mindmapDb';\n\n// Inject the layout algorithm into cytoscape\ncytoscape.use(coseBilkent);\n\n/**\n * @param {any} svg The svg element to draw the diagram onto\n * @param {object} mindmap The mindmap data and hierarchy\n * @param section\n * @param {object} conf The configuration object\n */\nfunction drawNodes(svg, mindmap, section, conf) {\n  svgDraw.drawNode(svg, mindmap, section, conf);\n  if (mindmap.children) {\n    mindmap.children.forEach((child, index) => {\n      drawNodes(svg, child, section < 0 ? index : section, conf);\n    });\n  }\n}\n\n/**\n * @param edgesEl\n * @param cy\n */\nfunction drawEdges(edgesEl, cy) {\n  cy.edges().map((edge, id) => {\n    const data = edge.data();\n    if (edge[0]._private.bodyBounds) {\n      const bounds = edge[0]._private.rscratch;\n      log.trace('Edge: ', id, data);\n      edgesEl\n        .insert('path')\n        .attr(\n          'd',\n          `M ${bounds.startX},${bounds.startY} L ${bounds.midX},${bounds.midY} L${bounds.endX},${bounds.endY} `\n        )\n        .attr('class', 'edge section-edge-' + data.section + ' edge-depth-' + data.depth);\n    }\n  });\n}\n\n/**\n * @param mindmap The mindmap data and hierarchy\n * @param cy\n * @param conf The configuration object\n * @param level\n */\nfunction addNodes(mindmap, cy, conf, level) {\n  cy.add({\n    group: 'nodes',\n    data: {\n      id: mindmap.id,\n      labelText: mindmap.descr,\n      height: mindmap.height,\n      width: mindmap.width,\n      level: level,\n      nodeId: mindmap.id,\n      padding: mindmap.padding,\n      type: mindmap.type,\n    },\n    position: {\n      x: mindmap.x,\n      y: mindmap.y,\n    },\n  });\n  if (mindmap.children) {\n    mindmap.children.forEach((child) => {\n      addNodes(child, cy, conf, level + 1);\n      cy.add({\n        group: 'edges',\n        data: {\n          id: `${mindmap.id}_${child.id}`,\n          source: mindmap.id,\n          target: child.id,\n          depth: level,\n          section: child.section,\n        },\n      });\n    });\n  }\n}\n\n/**\n * @param node\n * @param conf\n * @param cy\n */\nfunction layoutMindmap(node, conf) {\n  return new Promise((resolve) => {\n    // Add temporary render element\n    const renderEl = select('body').append('div').attr('id', 'cy').attr('style', 'display:none');\n    const cy = cytoscape({\n      container: document.getElementById('cy'), // container to render in\n      style: [\n        {\n          selector: 'edge',\n          style: {\n            'curve-style': 'bezier',\n          },\n        },\n      ],\n    });\n    // Remove element after layout\n    renderEl.remove();\n    addNodes(node, cy, conf, 0);\n\n    // Make cytoscape care about the dimensions of the nodes\n    cy.nodes().forEach(function (n) {\n      n.layoutDimensions = () => {\n        const data = n.data();\n        return { w: data.width, h: data.height };\n      };\n    });\n\n    cy.layout({\n      name: 'cose-bilkent',\n      quality: 'proof',\n      // headless: true,\n      styleEnabled: false,\n      animate: false,\n    }).run();\n    cy.ready((e) => {\n      log.info('Ready', e);\n      resolve(cy);\n    });\n  });\n}\n/**\n * @param node\n * @param cy\n * @param positionedMindmap\n * @param conf\n */\nfunction positionNodes(cy) {\n  cy.nodes().map((node, id) => {\n    const data = node.data();\n    data.x = node.position().x;\n    data.y = node.position().y;\n    svgDraw.positionNode(data);\n    const el = db.getElementById(data.nodeId);\n    log.info('Id:', id, 'Position: (', node.position().x, ', ', node.position().y, ')', data);\n    el.attr(\n      'transform',\n      `translate(${node.position().x - data.width / 2}, ${node.position().y - data.height / 2})`\n    );\n    el.attr('attr', `apa-${id})`);\n  });\n}\n\n/**\n * Draws a an info picture in the tag with id: id based on the graph definition in text.\n *\n * @param {any} text\n * @param {any} id\n * @param {any} version\n * @param diagObj\n */\n\nexport const draw = async (text, id, version, diagObj) => {\n  const conf = getConfig();\n\n  // This is done only for throwing the error if the text is not valid.\n  diagObj.db.clear();\n  // Parse the graph definition\n  diagObj.parser.parse(text);\n\n  log.debug('Renering info diagram\\n' + text);\n\n  const securityLevel = getConfig().securityLevel;\n  // Handle root and Document for when rendering in sandbox mode\n  let sandboxElement;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = select('#i' + id);\n  }\n  const root =\n    securityLevel === 'sandbox'\n      ? select(sandboxElement.nodes()[0].contentDocument.body)\n      : select('body');\n  // Parse the graph definition\n\n  const svg = root.select('#' + id);\n\n  svg.append('g');\n  const mm = diagObj.db.getMindmap();\n\n  // Draw the graph and start with drawing the nodes without proper position\n  // this gives us the size of the nodes and we can set the positions later\n\n  const edgesElem = svg.append('g');\n  edgesElem.attr('class', 'mindmap-edges');\n  const nodesElem = svg.append('g');\n  nodesElem.attr('class', 'mindmap-nodes');\n  drawNodes(nodesElem, mm, -1, conf);\n\n  // Next step is to layout the mindmap, giving each node a position\n\n  const cy = await layoutMindmap(mm, conf);\n\n  // // After this we can draw, first the edges and the then nodes with the correct position\n  drawEdges(edgesElem, cy, conf);\n  positionNodes(cy, conf);\n\n  // Setup the view box and size of the svg element\n  setupGraphViewbox(undefined, svg, conf.mindmap.padding, conf.mindmap.useMaxWidth);\n};\n\nexport default {\n  draw,\n};\n","import { darken, lighten, isDark } from 'khroma';\n\nconst genSections = (options) => {\n  let sections = '';\n\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    options['lineColor' + i] = options['lineColor' + i] || options['cScaleInv' + i];\n    if (isDark(options['lineColor' + i])) {\n      options['lineColor' + i] = lighten(options['lineColor' + i], 20);\n    } else {\n      options['lineColor' + i] = darken(options['lineColor' + i], 20);\n    }\n  }\n\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    const sw = '' + (17 - 3 * i);\n    sections += `\n    .section-${i - 1} rect, .section-${i - 1} path, .section-${i - 1} circle, .section-${\n      i - 1\n    } polygon, .section-${i - 1} path  {\n      fill: ${options['cScale' + i]};\n    }\n    .section-${i - 1} text {\n     fill: ${options['cScaleLabel' + i]};\n    }\n    .node-icon-${i - 1} {\n      font-size: 40px;\n      color: ${options['cScaleLabel' + i]};\n    }\n    .section-edge-${i - 1}{\n      stroke: ${options['cScale' + i]};\n    }\n    .edge-depth-${i - 1}{\n      stroke-width: ${sw};\n    }\n    .section-${i - 1} line {\n      stroke: ${options['cScaleInv' + i]} ;\n      stroke-width: 3;\n    }\n\n    .disabled, .disabled circle, .disabled text {\n      fill: lightgray;\n    }\n    .disabled text {\n      fill: #efefef;\n    }\n    `;\n  }\n  return sections;\n};\n\nconst getStyles = (options) =>\n  `\n  .edge {\n    stroke-width: 3;\n  }\n  ${genSections(options)}\n  .section-root rect, .section-root path, .section-root circle, .section-root polygon  {\n    fill: ${options.git0};\n  }\n  .section-root text {\n    fill: ${options.gitBranchLabel0};\n  }\n  .icon-container {\n    height:100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .edge {\n    fill: none;\n  }\n`;\nexport default getStyles;\n","// @ts-ignore: TODO Fix ts errors\nimport mindmapParser from './parser/mindmap';\nimport * as mindmapDb from './mindmapDb';\nimport mindmapRenderer from './mindmapRenderer';\nimport mindmapStyles from './styles';\n\nexport const diagram = {\n  db: mindmapDb,\n  renderer: mindmapRenderer,\n  parser: mindmapParser,\n  styles: mindmapStyles,\n};\n"]},"metadata":{},"sourceType":"module"}