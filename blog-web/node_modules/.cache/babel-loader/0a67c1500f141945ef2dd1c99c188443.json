{"ast":null,"code":"// Process ![image](<src> \"title\")\n'use strict';\n\nvar normalizeReference = require('../common/utils').normalizeReference;\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21\n  /* ! */\n  ) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B\n  /* [ */\n  ) {\n    return false;\n  }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false); // parser failed to find ']', so it's not a valid link\n\n  if (labelEnd < 0) {\n    return false;\n  }\n\n  pos = labelEnd + 1;\n\n  if (pos < max && state.src.charCodeAt(pos) === 0x28\n  /* ( */\n  ) {\n    //\n    // Inline link\n    //\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n\n      if (!isSpace(code) && code !== 0x0A) {\n        break;\n      }\n    }\n\n    if (pos >= max) {\n      return false;\n    } // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n\n\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    } // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n\n\n    start = pos;\n\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n\n      if (!isSpace(code) && code !== 0x0A) {\n        break;\n      }\n    } // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n\n\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos; // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29\n    /* ) */\n    ) {\n      state.pos = oldPos;\n      return false;\n    }\n\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') {\n      return false;\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B\n    /* [ */\n    ) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    } // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n\n\n    if (!label) {\n      label = state.src.slice(labelStart, labelEnd);\n    }\n\n    ref = state.env.references[normalizeReference(label)];\n\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n\n    href = ref.href;\n    title = ref.title;\n  } //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n\n\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n    state.md.inline.parse(content, state.md, state.env, tokens = []);\n    token = state.push('image', 'img', 0);\n    token.attrs = attrs = [['src', href], ['alt', '']];\n    token.children = tokens;\n    token.content = content;\n\n    if (title) {\n      attrs.push(['title', title]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};","map":{"version":3,"names":["normalizeReference","require","isSpace","module","exports","image","state","silent","attrs","code","content","label","labelEnd","labelStart","pos","ref","res","title","token","tokens","start","href","oldPos","max","posMax","src","charCodeAt","md","helpers","parseLinkLabel","parseLinkDestination","ok","normalizeLink","str","validateLink","parseLinkTitle","env","references","slice","inline","parse","push","children"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/blog-vue/blog-web/node_modules/markdown-it/lib/rules_inline/image.js"],"sourcesContent":["// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}