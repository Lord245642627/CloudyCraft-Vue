{"ast":null,"code":"import { computed } from 'vue';\nimport '../../../../utils/index.mjs';\nimport { debugWarn } from '../../../../utils/error.mjs';\n\nconst useStops = (props, initData, minValue, maxValue) => {\n  const stops = computed(() => {\n    if (!props.showStops || props.min > props.max) return [];\n\n    if (props.step === 0) {\n      debugWarn(\"ElSlider\", \"step should not be 0.\");\n      return [];\n    }\n\n    const stopCount = (props.max - props.min) / props.step;\n    const stepWidth = 100 * props.step / (props.max - props.min);\n    const result = Array.from({\n      length: stopCount - 1\n    }).map((_, index) => (index + 1) * stepWidth);\n\n    if (props.range) {\n      return result.filter(step => {\n        return step < 100 * (minValue.value - props.min) / (props.max - props.min) || step > 100 * (maxValue.value - props.min) / (props.max - props.min);\n      });\n    } else {\n      return result.filter(step => step > 100 * (initData.firstValue - props.min) / (props.max - props.min));\n    }\n  });\n\n  const getStopStyle = position => {\n    return props.vertical ? {\n      bottom: `${position}%`\n    } : {\n      left: `${position}%`\n    };\n  };\n\n  return {\n    stops,\n    getStopStyle\n  };\n};\n\nexport { useStops };","map":null,"metadata":{},"sourceType":"module"}