{"ast":null,"code":"import { isVNode, h } from 'vue';\nimport '../../../utils/index.mjs';\nimport { isArray, isFunction } from '@vue/shared';\nimport { addUnit } from '../../../utils/dom/style.mjs';\n\nconst sumReducer = (sum2, num) => sum2 + num;\n\nconst sum = listLike => {\n  return isArray(listLike) ? listLike.reduce(sumReducer, 0) : listLike;\n};\n\nconst tryCall = (fLike, params, defaultRet = {}) => {\n  return isFunction(fLike) ? fLike(params) : fLike != null ? fLike : defaultRet;\n};\n\nconst enforceUnit = style => {\n  ;\n  [\"width\", \"maxWidth\", \"minWidth\", \"height\"].forEach(key => {\n    style[key] = addUnit(style[key]);\n  });\n  return style;\n};\n\nconst componentToSlot = ComponentLike => isVNode(ComponentLike) ? props => h(ComponentLike, props) : ComponentLike;\n\nexport { componentToSlot, enforceUnit, sum, tryCall };","map":null,"metadata":{},"sourceType":"module"}