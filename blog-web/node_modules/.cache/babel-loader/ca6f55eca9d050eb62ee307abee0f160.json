{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.BrowserSprite = factory();\n})(this, function () {\n  'use strict';\n\n  var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n\n  var deepmerge = createCommonjsModule(function (module, exports) {\n    (function (root, factory) {\n      if (typeof undefined === 'function' && undefined.amd) {\n        undefined(factory);\n      } else {\n        module.exports = factory();\n      }\n    })(commonjsGlobal, function () {\n      function isMergeableObject(val) {\n        var nonNullObject = val && typeof val === 'object';\n        return nonNullObject && Object.prototype.toString.call(val) !== '[object RegExp]' && Object.prototype.toString.call(val) !== '[object Date]';\n      }\n\n      function emptyTarget(val) {\n        return Array.isArray(val) ? [] : {};\n      }\n\n      function cloneIfNecessary(value, optionsArgument) {\n        var clone = optionsArgument && optionsArgument.clone === true;\n        return clone && isMergeableObject(value) ? deepmerge(emptyTarget(value), value, optionsArgument) : value;\n      }\n\n      function defaultArrayMerge(target, source, optionsArgument) {\n        var destination = target.slice();\n        source.forEach(function (e, i) {\n          if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n          } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n          } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n          }\n        });\n        return destination;\n      }\n\n      function mergeObject(target, source, optionsArgument) {\n        var destination = {};\n\n        if (isMergeableObject(target)) {\n          Object.keys(target).forEach(function (key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n          });\n        }\n\n        Object.keys(source).forEach(function (key) {\n          if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n          } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n          }\n        });\n        return destination;\n      }\n\n      function deepmerge(target, source, optionsArgument) {\n        var array = Array.isArray(source);\n        var options = optionsArgument || {\n          arrayMerge: defaultArrayMerge\n        };\n        var arrayMerge = options.arrayMerge || defaultArrayMerge;\n\n        if (array) {\n          return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument);\n        } else {\n          return mergeObject(target, source, optionsArgument);\n        }\n      }\n\n      deepmerge.all = function deepmergeAll(array, optionsArgument) {\n        if (!Array.isArray(array) || array.length < 2) {\n          throw new Error('first argument should be an array with at least two elements');\n        } // we are sure there are at least 2 values, so it is safe to have no initial value\n\n\n        return array.reduce(function (prev, next) {\n          return deepmerge(prev, next, optionsArgument);\n        });\n      };\n\n      return deepmerge;\n    });\n  }); //      \n  // An event handler can take an optional event argument\n  // and should not return a value\n  // An array of all currently registered event handlers for a type\n  // A map of event types and their corresponding event handlers.\n\n  /** Mitt: Tiny (~200b) functional event emitter / pubsub.\n   *  @name mitt\n   *  @returns {Mitt}\n   */\n\n  function mitt(all) {\n    all = all || Object.create(null);\n    return {\n      /**\n       * Register an event handler for the given type.\n       *\n       * @param  {String} type\tType of event to listen for, or `\"*\"` for all events\n       * @param  {Function} handler Function to call in response to given event\n       * @memberOf mitt\n       */\n      on: function on(type, handler) {\n        (all[type] || (all[type] = [])).push(handler);\n      },\n\n      /**\n       * Remove an event handler for the given type.\n       *\n       * @param  {String} type\tType of event to unregister `handler` from, or `\"*\"`\n       * @param  {Function} handler Handler function to remove\n       * @memberOf mitt\n       */\n      off: function off(type, handler) {\n        if (all[type]) {\n          all[type].splice(all[type].indexOf(handler) >>> 0, 1);\n        }\n      },\n\n      /**\n       * Invoke all handlers for the given type.\n       * If present, `\"*\"` handlers are invoked after type-matched handlers.\n       *\n       * @param {String} type  The event type to invoke\n       * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler\n       * @memberof mitt\n       */\n      emit: function emit(type, evt) {\n        (all[type] || []).map(function (handler) {\n          handler(evt);\n        });\n        (all['*'] || []).map(function (handler) {\n          handler(type, evt);\n        });\n      }\n    };\n  }\n\n  var namespaces_1 = createCommonjsModule(function (module, exports) {\n    var namespaces = {\n      svg: {\n        name: 'xmlns',\n        uri: 'http://www.w3.org/2000/svg'\n      },\n      xlink: {\n        name: 'xmlns:xlink',\n        uri: 'http://www.w3.org/1999/xlink'\n      }\n    };\n    exports.default = namespaces;\n    module.exports = exports.default;\n  });\n  /**\n   * @param {Object} attrs\n   * @return {string}\n   */\n\n  var objectToAttrsString = function (attrs) {\n    return Object.keys(attrs).map(function (attr) {\n      var value = attrs[attr].toString().replace(/\"/g, '&quot;');\n      return attr + \"=\\\"\" + value + \"\\\"\";\n    }).join(' ');\n  };\n\n  var svg = namespaces_1.svg;\n  var xlink = namespaces_1.xlink;\n  var defaultAttrs = {};\n  defaultAttrs[svg.name] = svg.uri;\n  defaultAttrs[xlink.name] = xlink.uri;\n  /**\n   * @param {string} [content]\n   * @param {Object} [attributes]\n   * @return {string}\n   */\n\n  var wrapInSvgString = function (content, attributes) {\n    if (content === void 0) content = '';\n    var attrs = deepmerge(defaultAttrs, attributes || {});\n    var attrsRendered = objectToAttrsString(attrs);\n    return \"<svg \" + attrsRendered + \">\" + content + \"</svg>\";\n  };\n\n  var svg$1 = namespaces_1.svg;\n  var xlink$1 = namespaces_1.xlink;\n  var defaultConfig = {\n    attrs: (obj = {\n      style: ['position: absolute', 'width: 0', 'height: 0'].join('; '),\n      'aria-hidden': 'true'\n    }, obj[svg$1.name] = svg$1.uri, obj[xlink$1.name] = xlink$1.uri, obj)\n  };\n  var obj;\n\n  var Sprite = function Sprite(config) {\n    this.config = deepmerge(defaultConfig, config || {});\n    this.symbols = [];\n  };\n  /**\n   * Add new symbol. If symbol with the same id exists it will be replaced.\n   * @param {SpriteSymbol} symbol\n   * @return {boolean} `true` - symbol was added, `false` - replaced\n   */\n\n\n  Sprite.prototype.add = function add(symbol) {\n    var ref = this;\n    var symbols = ref.symbols;\n    var existing = this.find(symbol.id);\n\n    if (existing) {\n      symbols[symbols.indexOf(existing)] = symbol;\n      return false;\n    }\n\n    symbols.push(symbol);\n    return true;\n  };\n  /**\n   * Remove symbol & destroy it\n   * @param {string} id\n   * @return {boolean} `true` - symbol was found & successfully destroyed, `false` - otherwise\n   */\n\n\n  Sprite.prototype.remove = function remove(id) {\n    var ref = this;\n    var symbols = ref.symbols;\n    var symbol = this.find(id);\n\n    if (symbol) {\n      symbols.splice(symbols.indexOf(symbol), 1);\n      symbol.destroy();\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * @param {string} id\n   * @return {SpriteSymbol|null}\n   */\n\n\n  Sprite.prototype.find = function find(id) {\n    return this.symbols.filter(function (s) {\n      return s.id === id;\n    })[0] || null;\n  };\n  /**\n   * @param {string} id\n   * @return {boolean}\n   */\n\n\n  Sprite.prototype.has = function has(id) {\n    return this.find(id) !== null;\n  };\n  /**\n   * @return {string}\n   */\n\n\n  Sprite.prototype.stringify = function stringify() {\n    var ref = this.config;\n    var attrs = ref.attrs;\n    var stringifiedSymbols = this.symbols.map(function (s) {\n      return s.stringify();\n    }).join('');\n    return wrapInSvgString(stringifiedSymbols, attrs);\n  };\n  /**\n   * @return {string}\n   */\n\n\n  Sprite.prototype.toString = function toString() {\n    return this.stringify();\n  };\n\n  Sprite.prototype.destroy = function destroy() {\n    this.symbols.forEach(function (s) {\n      return s.destroy();\n    });\n  };\n\n  var SpriteSymbol = function SpriteSymbol(ref) {\n    var id = ref.id;\n    var viewBox = ref.viewBox;\n    var content = ref.content;\n    this.id = id;\n    this.viewBox = viewBox;\n    this.content = content;\n  };\n  /**\n   * @return {string}\n   */\n\n\n  SpriteSymbol.prototype.stringify = function stringify() {\n    return this.content;\n  };\n  /**\n   * @return {string}\n   */\n\n\n  SpriteSymbol.prototype.toString = function toString() {\n    return this.stringify();\n  };\n\n  SpriteSymbol.prototype.destroy = function destroy() {\n    var this$1 = this;\n    ['id', 'viewBox', 'content'].forEach(function (prop) {\n      return delete this$1[prop];\n    });\n  };\n  /**\n   * @param {string} content\n   * @return {Element}\n   */\n\n\n  var parse = function (content) {\n    var hasImportNode = !!document.importNode;\n    var doc = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;\n    /**\n     * Fix for browser which are throwing WrongDocumentError\n     * if you insert an element which is not part of the document\n     * @see http://stackoverflow.com/a/7986519/4624403\n     */\n\n    if (hasImportNode) {\n      return document.importNode(doc, true);\n    }\n\n    return doc;\n  };\n\n  var BrowserSpriteSymbol = function (SpriteSymbol$$1) {\n    function BrowserSpriteSymbol() {\n      SpriteSymbol$$1.apply(this, arguments);\n    }\n\n    if (SpriteSymbol$$1) BrowserSpriteSymbol.__proto__ = SpriteSymbol$$1;\n    BrowserSpriteSymbol.prototype = Object.create(SpriteSymbol$$1 && SpriteSymbol$$1.prototype);\n    BrowserSpriteSymbol.prototype.constructor = BrowserSpriteSymbol;\n    var prototypeAccessors = {\n      isMounted: {}\n    };\n\n    prototypeAccessors.isMounted.get = function () {\n      return !!this.node;\n    };\n    /**\n     * @param {Element} node\n     * @return {BrowserSpriteSymbol}\n     */\n\n\n    BrowserSpriteSymbol.createFromExistingNode = function createFromExistingNode(node) {\n      return new BrowserSpriteSymbol({\n        id: node.getAttribute('id'),\n        viewBox: node.getAttribute('viewBox'),\n        content: node.outerHTML\n      });\n    };\n\n    BrowserSpriteSymbol.prototype.destroy = function destroy() {\n      if (this.isMounted) {\n        this.unmount();\n      }\n\n      SpriteSymbol$$1.prototype.destroy.call(this);\n    };\n    /**\n     * @param {Element|string} target\n     * @return {Element}\n     */\n\n\n    BrowserSpriteSymbol.prototype.mount = function mount(target) {\n      if (this.isMounted) {\n        return this.node;\n      }\n\n      var mountTarget = typeof target === 'string' ? document.querySelector(target) : target;\n      var node = this.render();\n      this.node = node;\n      mountTarget.appendChild(node);\n      return node;\n    };\n    /**\n     * @return {Element}\n     */\n\n\n    BrowserSpriteSymbol.prototype.render = function render() {\n      var content = this.stringify();\n      return parse(wrapInSvgString(content)).childNodes[0];\n    };\n\n    BrowserSpriteSymbol.prototype.unmount = function unmount() {\n      this.node.parentNode.removeChild(this.node);\n    };\n\n    Object.defineProperties(BrowserSpriteSymbol.prototype, prototypeAccessors);\n    return BrowserSpriteSymbol;\n  }(SpriteSymbol);\n\n  var defaultConfig$1 = {\n    /**\n     * Should following options be automatically configured:\n     * - `syncUrlsWithBaseTag`\n     * - `locationChangeAngularEmitter`\n     * - `moveGradientsOutsideSymbol`\n     * @type {boolean}\n     */\n    autoConfigure: true,\n\n    /**\n     * Default mounting selector\n     * @type {string}\n     */\n    mountTo: 'body',\n\n    /**\n     * Fix disappearing SVG elements when <base href> exists.\n     * Executes when sprite mounted.\n     * @see http://stackoverflow.com/a/18265336/796152\n     * @see https://github.com/everdimension/angular-svg-base-fix\n     * @see https://github.com/angular/angular.js/issues/8934#issuecomment-56568466\n     * @type {boolean}\n     */\n    syncUrlsWithBaseTag: false,\n\n    /**\n     * Should sprite listen custom location change event\n     * @type {boolean}\n     */\n    listenLocationChangeEvent: true,\n\n    /**\n     * Custom window event name which should be emitted to update sprite urls\n     * @type {string}\n     */\n    locationChangeEvent: 'locationChange',\n\n    /**\n     * Emit location change event in Angular automatically\n     * @type {boolean}\n     */\n    locationChangeAngularEmitter: false,\n\n    /**\n     * Selector to find symbols usages when updating sprite urls\n     * @type {string}\n     */\n    usagesToUpdate: 'use[*|href]',\n\n    /**\n     * Fix Firefox bug when gradients and patterns don't work if they are within a symbol.\n     * Executes when sprite is rendered, but not mounted.\n     * @see https://bugzilla.mozilla.org/show_bug.cgi?id=306674\n     * @see https://bugzilla.mozilla.org/show_bug.cgi?id=353575\n     * @see https://bugzilla.mozilla.org/show_bug.cgi?id=1235364\n     * @type {boolean}\n     */\n    moveGradientsOutsideSymbol: false\n  };\n  /**\n   * @param {*} arrayLike\n   * @return {Array}\n   */\n\n  var arrayFrom = function (arrayLike) {\n    return Array.prototype.slice.call(arrayLike, 0);\n  };\n\n  var browser = {\n    isChrome: function () {\n      return /chrome/i.test(navigator.userAgent);\n    },\n    isFirefox: function () {\n      return /firefox/i.test(navigator.userAgent);\n    },\n    // https://msdn.microsoft.com/en-us/library/ms537503(v=vs.85).aspx\n    isIE: function () {\n      return /msie/i.test(navigator.userAgent) || /trident/i.test(navigator.userAgent);\n    },\n    isEdge: function () {\n      return /edge/i.test(navigator.userAgent);\n    }\n  };\n  /**\n   * @param {string} name\n   * @param {*} data\n   */\n\n  var dispatchEvent = function (name, data) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent(name, false, false, data);\n    window.dispatchEvent(event);\n  };\n  /**\n   * IE doesn't evaluate <style> tags in SVGs that are dynamically added to the page.\n   * This trick will trigger IE to read and use any existing SVG <style> tags.\n   * @see https://github.com/iconic/SVGInjector/issues/23\n   * @see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n   *\n   * @param {Element} node DOM Element to search <style> tags in\n   * @return {Array<HTMLStyleElement>}\n   */\n\n\n  var evalStylesIEWorkaround = function (node) {\n    var updatedNodes = [];\n    arrayFrom(node.querySelectorAll('style')).forEach(function (style) {\n      style.textContent += '';\n      updatedNodes.push(style);\n    });\n    return updatedNodes;\n  };\n  /**\n   * @param {string} [url] If not provided - current URL will be used\n   * @return {string}\n   */\n\n\n  var getUrlWithoutFragment = function (url) {\n    return (url || window.location.href).split('#')[0];\n  };\n  /* global angular */\n\n  /**\n   * @param {string} eventName\n   */\n\n\n  var locationChangeAngularEmitter = function (eventName) {\n    angular.module('ng').run(['$rootScope', function ($rootScope) {\n      $rootScope.$on('$locationChangeSuccess', function (e, newUrl, oldUrl) {\n        dispatchEvent(eventName, {\n          oldUrl: oldUrl,\n          newUrl: newUrl\n        });\n      });\n    }]);\n  };\n\n  var defaultSelector = 'linearGradient, radialGradient, pattern, mask, clipPath';\n  /**\n   * @param {Element} svg\n   * @param {string} [selector]\n   * @return {Element}\n   */\n\n  var moveGradientsOutsideSymbol = function (svg, selector) {\n    if (selector === void 0) selector = defaultSelector;\n    arrayFrom(svg.querySelectorAll('symbol')).forEach(function (symbol) {\n      arrayFrom(symbol.querySelectorAll(selector)).forEach(function (node) {\n        symbol.parentNode.insertBefore(node, symbol);\n      });\n    });\n    return svg;\n  };\n  /**\n   * @param {NodeList} nodes\n   * @param {Function} [matcher]\n   * @return {Attr[]}\n   */\n\n\n  function selectAttributes(nodes, matcher) {\n    var attrs = arrayFrom(nodes).reduce(function (acc, node) {\n      if (!node.attributes) {\n        return acc;\n      }\n\n      var arrayfied = arrayFrom(node.attributes);\n      var matched = matcher ? arrayfied.filter(matcher) : arrayfied;\n      return acc.concat(matched);\n    }, []);\n    return attrs;\n  }\n  /**\n   * @param {NodeList|Node} nodes\n   * @param {boolean} [clone=true]\n   * @return {string}\n   */\n\n\n  var xLinkNS = namespaces_1.xlink.uri;\n  var xLinkAttrName = 'xlink:href'; // eslint-disable-next-line no-useless-escape\n\n  var specialUrlCharsPattern = /[{}|\\\\\\^\\[\\]`\"<>]/g;\n\n  function encoder(url) {\n    return url.replace(specialUrlCharsPattern, function (match) {\n      return \"%\" + match[0].charCodeAt(0).toString(16).toUpperCase();\n    });\n  }\n\n  function escapeRegExp(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\n  }\n  /**\n   * @param {NodeList} nodes\n   * @param {string} startsWith\n   * @param {string} replaceWith\n   * @return {NodeList}\n   */\n\n\n  function updateReferences(nodes, startsWith, replaceWith) {\n    arrayFrom(nodes).forEach(function (node) {\n      var href = node.getAttribute(xLinkAttrName);\n\n      if (href && href.indexOf(startsWith) === 0) {\n        var newUrl = href.replace(startsWith, replaceWith);\n        node.setAttributeNS(xLinkNS, xLinkAttrName, newUrl);\n      }\n    });\n    return nodes;\n  }\n  /**\n   * List of SVG attributes to update url() target in them\n   */\n\n\n  var attList = ['clipPath', 'colorProfile', 'src', 'cursor', 'fill', 'filter', 'marker', 'markerStart', 'markerMid', 'markerEnd', 'mask', 'stroke', 'style'];\n  var attSelector = attList.map(function (attr) {\n    return \"[\" + attr + \"]\";\n  }).join(',');\n  /**\n   * Update URLs in svg image (like `fill=\"url(...)\"`) and update referencing elements\n   * @param {Element} svg\n   * @param {NodeList} references\n   * @param {string|RegExp} startsWith\n   * @param {string} replaceWith\n   * @return {void}\n   *\n   * @example\n   * const sprite = document.querySelector('svg.sprite');\n   * const usages = document.querySelectorAll('use');\n   * updateUrls(sprite, usages, '#', 'prefix#');\n   */\n\n  var updateUrls = function (svg, references, startsWith, replaceWith) {\n    var startsWithEncoded = encoder(startsWith);\n    var replaceWithEncoded = encoder(replaceWith);\n    var nodes = svg.querySelectorAll(attSelector);\n    var attrs = selectAttributes(nodes, function (ref) {\n      var localName = ref.localName;\n      var value = ref.value;\n      return attList.indexOf(localName) !== -1 && value.indexOf(\"url(\" + startsWithEncoded) !== -1;\n    });\n    attrs.forEach(function (attr) {\n      return attr.value = attr.value.replace(new RegExp(escapeRegExp(startsWithEncoded), 'g'), replaceWithEncoded);\n    });\n    updateReferences(references, startsWithEncoded, replaceWithEncoded);\n  };\n  /**\n   * Internal emitter events\n   * @enum\n   * @private\n   */\n\n\n  var Events = {\n    MOUNT: 'mount',\n    SYMBOL_MOUNT: 'symbol_mount'\n  };\n\n  var BrowserSprite = function (Sprite$$1) {\n    function BrowserSprite(cfg) {\n      var this$1 = this;\n      if (cfg === void 0) cfg = {};\n      Sprite$$1.call(this, deepmerge(defaultConfig$1, cfg));\n      var emitter = mitt();\n      this._emitter = emitter;\n      this.node = null;\n      var ref = this;\n      var config = ref.config;\n\n      if (config.autoConfigure) {\n        this._autoConfigure(cfg);\n      }\n\n      if (config.syncUrlsWithBaseTag) {\n        var baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\n        emitter.on(Events.MOUNT, function () {\n          return this$1.updateUrls('#', baseUrl);\n        });\n      }\n\n      var handleLocationChange = this._handleLocationChange.bind(this);\n\n      this._handleLocationChange = handleLocationChange; // Provide way to update sprite urls externally via dispatching custom window event\n\n      if (config.listenLocationChangeEvent) {\n        window.addEventListener(config.locationChangeEvent, handleLocationChange);\n      } // Emit location change event in Angular automatically\n\n\n      if (config.locationChangeAngularEmitter) {\n        locationChangeAngularEmitter(config.locationChangeEvent);\n      } // After sprite mounted\n\n\n      emitter.on(Events.MOUNT, function (spriteNode) {\n        if (config.moveGradientsOutsideSymbol) {\n          moveGradientsOutsideSymbol(spriteNode);\n        }\n      }); // After symbol mounted into sprite\n\n      emitter.on(Events.SYMBOL_MOUNT, function (symbolNode) {\n        if (config.moveGradientsOutsideSymbol) {\n          moveGradientsOutsideSymbol(symbolNode.parentNode);\n        }\n\n        if (browser.isIE() || browser.isEdge()) {\n          evalStylesIEWorkaround(symbolNode);\n        }\n      });\n    }\n\n    if (Sprite$$1) BrowserSprite.__proto__ = Sprite$$1;\n    BrowserSprite.prototype = Object.create(Sprite$$1 && Sprite$$1.prototype);\n    BrowserSprite.prototype.constructor = BrowserSprite;\n    var prototypeAccessors = {\n      isMounted: {}\n    };\n    /**\n     * @return {boolean}\n     */\n\n    prototypeAccessors.isMounted.get = function () {\n      return !!this.node;\n    };\n    /**\n     * Automatically configure following options\n     * - `syncUrlsWithBaseTag`\n     * - `locationChangeAngularEmitter`\n     * - `moveGradientsOutsideSymbol`\n     * @param {Object} cfg\n     * @private\n     */\n\n\n    BrowserSprite.prototype._autoConfigure = function _autoConfigure(cfg) {\n      var ref = this;\n      var config = ref.config;\n\n      if (typeof cfg.syncUrlsWithBaseTag === 'undefined') {\n        config.syncUrlsWithBaseTag = typeof document.getElementsByTagName('base')[0] !== 'undefined';\n      }\n\n      if (typeof cfg.locationChangeAngularEmitter === 'undefined') {\n        config.locationChangeAngularEmitter = typeof window.angular !== 'undefined';\n      }\n\n      if (typeof cfg.moveGradientsOutsideSymbol === 'undefined') {\n        config.moveGradientsOutsideSymbol = browser.isFirefox();\n      }\n    };\n    /**\n     * @param {Event} event\n     * @param {Object} event.detail\n     * @param {string} event.detail.oldUrl\n     * @param {string} event.detail.newUrl\n     * @private\n     */\n\n\n    BrowserSprite.prototype._handleLocationChange = function _handleLocationChange(event) {\n      var ref = event.detail;\n      var oldUrl = ref.oldUrl;\n      var newUrl = ref.newUrl;\n      this.updateUrls(oldUrl, newUrl);\n    };\n    /**\n     * Add new symbol. If symbol with the same id exists it will be replaced.\n     * If sprite already mounted - `symbol.mount(sprite.node)` will be called.\n     * @fires Events#SYMBOL_MOUNT\n     * @param {BrowserSpriteSymbol} symbol\n     * @return {boolean} `true` - symbol was added, `false` - replaced\n     */\n\n\n    BrowserSprite.prototype.add = function add(symbol) {\n      var sprite = this;\n      var isNewSymbol = Sprite$$1.prototype.add.call(this, symbol);\n\n      if (this.isMounted && isNewSymbol) {\n        symbol.mount(sprite.node);\n\n        this._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);\n      }\n\n      return isNewSymbol;\n    };\n    /**\n     * Attach to existing DOM node\n     * @param {string|Element} target\n     * @return {Element|null} attached DOM Element. null if node to attach not found.\n     */\n\n\n    BrowserSprite.prototype.attach = function attach(target) {\n      var this$1 = this;\n      var sprite = this;\n\n      if (sprite.isMounted) {\n        return sprite.node;\n      }\n      /** @type Element */\n\n\n      var node = typeof target === 'string' ? document.querySelector(target) : target;\n      sprite.node = node; // Already added symbols needs to be mounted\n\n      this.symbols.forEach(function (symbol) {\n        symbol.mount(sprite.node);\n\n        this$1._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);\n      }); // Create symbols from existing DOM nodes, add and mount them\n\n      arrayFrom(node.querySelectorAll('symbol')).forEach(function (symbolNode) {\n        var symbol = BrowserSpriteSymbol.createFromExistingNode(symbolNode);\n        symbol.node = symbolNode; // hack to prevent symbol mounting to sprite when adding\n\n        sprite.add(symbol);\n      });\n\n      this._emitter.emit(Events.MOUNT, node);\n\n      return node;\n    };\n\n    BrowserSprite.prototype.destroy = function destroy() {\n      var ref = this;\n      var config = ref.config;\n      var symbols = ref.symbols;\n      var _emitter = ref._emitter;\n      symbols.forEach(function (s) {\n        return s.destroy();\n      });\n\n      _emitter.off('*');\n\n      window.removeEventListener(config.locationChangeEvent, this._handleLocationChange);\n\n      if (this.isMounted) {\n        this.unmount();\n      }\n    };\n    /**\n     * @fires Events#MOUNT\n     * @param {string|Element} [target]\n     * @param {boolean} [prepend=false]\n     * @return {Element|null} rendered sprite node. null if mount node not found.\n     */\n\n\n    BrowserSprite.prototype.mount = function mount(target, prepend) {\n      if (target === void 0) target = this.config.mountTo;\n      if (prepend === void 0) prepend = false;\n      var sprite = this;\n\n      if (sprite.isMounted) {\n        return sprite.node;\n      }\n\n      var mountNode = typeof target === 'string' ? document.querySelector(target) : target;\n      var node = sprite.render();\n      this.node = node;\n\n      if (prepend && mountNode.childNodes[0]) {\n        mountNode.insertBefore(node, mountNode.childNodes[0]);\n      } else {\n        mountNode.appendChild(node);\n      }\n\n      this._emitter.emit(Events.MOUNT, node);\n\n      return node;\n    };\n    /**\n     * @return {Element}\n     */\n\n\n    BrowserSprite.prototype.render = function render() {\n      return parse(this.stringify());\n    };\n    /**\n     * Detach sprite from the DOM\n     */\n\n\n    BrowserSprite.prototype.unmount = function unmount() {\n      this.node.parentNode.removeChild(this.node);\n    };\n    /**\n     * Update URLs in sprite and usage elements\n     * @param {string} oldUrl\n     * @param {string} newUrl\n     * @return {boolean} `true` - URLs was updated, `false` - sprite is not mounted\n     */\n\n\n    BrowserSprite.prototype.updateUrls = function updateUrls$1(oldUrl, newUrl) {\n      if (!this.isMounted) {\n        return false;\n      }\n\n      var usages = document.querySelectorAll(this.config.usagesToUpdate);\n      updateUrls(this.node, usages, getUrlWithoutFragment(oldUrl) + \"#\", getUrlWithoutFragment(newUrl) + \"#\");\n      return true;\n    };\n\n    Object.defineProperties(BrowserSprite.prototype, prototypeAccessors);\n    return BrowserSprite;\n  }(Sprite);\n\n  var ready$1 = createCommonjsModule(function (module) {\n    /*!\n      * domready (c) Dustin Diaz 2014 - License MIT\n      */\n    !function (name, definition) {\n      {\n        module.exports = definition();\n      }\n    }('domready', function () {\n      var fns = [],\n          listener,\n          doc = document,\n          hack = doc.documentElement.doScroll,\n          domContentLoaded = 'DOMContentLoaded',\n          loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState);\n\n      if (!loaded) {\n        doc.addEventListener(domContentLoaded, listener = function () {\n          doc.removeEventListener(domContentLoaded, listener);\n          loaded = 1;\n\n          while (listener = fns.shift()) {\n            listener();\n          }\n        });\n      }\n\n      return function (fn) {\n        loaded ? setTimeout(fn, 0) : fns.push(fn);\n      };\n    });\n  });\n  var spriteNodeId = '__SVG_SPRITE_NODE__';\n  var spriteGlobalVarName = '__SVG_SPRITE__';\n  var isSpriteExists = !!window[spriteGlobalVarName]; // eslint-disable-next-line import/no-mutable-exports\n\n  var sprite;\n\n  if (isSpriteExists) {\n    sprite = window[spriteGlobalVarName];\n  } else {\n    sprite = new BrowserSprite({\n      attrs: {\n        id: spriteNodeId,\n        'aria-hidden': 'true'\n      }\n    });\n    window[spriteGlobalVarName] = sprite;\n  }\n\n  var loadSprite = function () {\n    /**\n     * Check for page already contains sprite node\n     * If found - attach to and reuse it's content\n     * If not - render and mount the new sprite\n     */\n    var existing = document.getElementById(spriteNodeId);\n\n    if (existing) {\n      sprite.attach(existing);\n    } else {\n      sprite.mount(document.body, true);\n    }\n  };\n\n  if (document.body) {\n    loadSprite();\n  } else {\n    ready$1(loadSprite);\n  }\n\n  var sprite$1 = sprite;\n  return sprite$1;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","BrowserSprite","commonjsGlobal","window","self","createCommonjsModule","fn","deepmerge","root","undefined","isMergeableObject","val","nonNullObject","Object","prototype","toString","call","emptyTarget","Array","isArray","cloneIfNecessary","value","optionsArgument","clone","defaultArrayMerge","target","source","destination","slice","forEach","e","i","indexOf","push","mergeObject","keys","key","array","options","arrayMerge","all","deepmergeAll","length","Error","reduce","prev","next","mitt","create","on","type","handler","off","splice","emit","evt","map","namespaces_1","namespaces","svg","name","uri","xlink","default","objectToAttrsString","attrs","attr","replace","join","defaultAttrs","wrapInSvgString","content","attributes","attrsRendered","svg$1","xlink$1","defaultConfig","obj","style","Sprite","config","symbols","add","symbol","ref","existing","find","id","remove","destroy","filter","s","has","stringify","stringifiedSymbols","SpriteSymbol","viewBox","this$1","prop","parse","hasImportNode","document","importNode","doc","DOMParser","parseFromString","documentElement","BrowserSpriteSymbol","SpriteSymbol$$1","apply","arguments","__proto__","constructor","prototypeAccessors","isMounted","get","node","createFromExistingNode","getAttribute","outerHTML","unmount","mount","mountTarget","querySelector","render","appendChild","childNodes","parentNode","removeChild","defineProperties","defaultConfig$1","autoConfigure","mountTo","syncUrlsWithBaseTag","listenLocationChangeEvent","locationChangeEvent","locationChangeAngularEmitter","usagesToUpdate","moveGradientsOutsideSymbol","arrayFrom","arrayLike","browser","isChrome","test","navigator","userAgent","isFirefox","isIE","isEdge","dispatchEvent","data","event","createEvent","initCustomEvent","evalStylesIEWorkaround","updatedNodes","querySelectorAll","textContent","getUrlWithoutFragment","url","location","href","split","eventName","angular","run","$rootScope","$on","newUrl","oldUrl","defaultSelector","selector","insertBefore","selectAttributes","nodes","matcher","acc","arrayfied","matched","concat","xLinkNS","xLinkAttrName","specialUrlCharsPattern","encoder","match","charCodeAt","toUpperCase","escapeRegExp","str","updateReferences","startsWith","replaceWith","setAttributeNS","attList","attSelector","updateUrls","references","startsWithEncoded","replaceWithEncoded","localName","RegExp","Events","MOUNT","SYMBOL_MOUNT","Sprite$$1","cfg","emitter","_emitter","_autoConfigure","baseUrl","getElementsByTagName","handleLocationChange","_handleLocationChange","bind","addEventListener","spriteNode","symbolNode","detail","sprite","isNewSymbol","attach","removeEventListener","prepend","mountNode","updateUrls$1","usages","ready$1","definition","fns","listener","hack","doScroll","domContentLoaded","loaded","readyState","shift","setTimeout","spriteNodeId","spriteGlobalVarName","isSpriteExists","loadSprite","getElementById","body","sprite$1"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/cloudycraft-vue/blog-web/node_modules/svg-sprite-loader/runtime/browser-sprite.build.js"],"sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.BrowserSprite = factory());\n}(this, (function () { 'use strict';\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar deepmerge = createCommonjsModule(function (module, exports) {\n(function (root, factory) {\n    if (typeof undefined === 'function' && undefined.amd) {\n        undefined(factory);\n    } else {\n        module.exports = factory();\n    }\n}(commonjsGlobal, function () {\n\nfunction isMergeableObject(val) {\n    var nonNullObject = val && typeof val === 'object';\n\n    return nonNullObject\n        && Object.prototype.toString.call(val) !== '[object RegExp]'\n        && Object.prototype.toString.call(val) !== '[object Date]'\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true;\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice();\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n        }\n    });\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {};\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function (key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n        });\n    }\n    Object.keys(source).forEach(function (key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n        }\n    });\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var array = Array.isArray(source);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge };\n    var arrayMerge = options.arrayMerge || defaultArrayMerge;\n\n    if (array) {\n        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n};\n\nreturn deepmerge\n\n}));\n});\n\n//      \n// An event handler can take an optional event argument\n// and should not return a value\n                                          \n// An array of all currently registered event handlers for a type\n                                            \n// A map of event types and their corresponding event handlers.\n                        \n                                   \n  \n\n/** Mitt: Tiny (~200b) functional event emitter / pubsub.\n *  @name mitt\n *  @returns {Mitt}\n */\nfunction mitt(all                 ) {\n\tall = all || Object.create(null);\n\n\treturn {\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to listen for, or `\"*\"` for all events\n\t\t * @param  {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton: function on(type        , handler              ) {\n\t\t\t(all[type] || (all[type] = [])).push(handler);\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to unregister `handler` from, or `\"*\"`\n\t\t * @param  {Function} handler Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff: function off(type        , handler              ) {\n\t\t\tif (all[type]) {\n\t\t\t\tall[type].splice(all[type].indexOf(handler) >>> 0, 1);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `\"*\"` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * @param {String} type  The event type to invoke\n\t\t * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberof mitt\n\t\t */\n\t\temit: function emit(type        , evt     ) {\n\t\t\t(all[type] || []).map(function (handler) { handler(evt); });\n\t\t\t(all['*'] || []).map(function (handler) { handler(type, evt); });\n\t\t}\n\t};\n}\n\nvar namespaces_1 = createCommonjsModule(function (module, exports) {\nvar namespaces = {\n  svg: {\n    name: 'xmlns',\n    uri: 'http://www.w3.org/2000/svg'\n  },\n  xlink: {\n    name: 'xmlns:xlink',\n    uri: 'http://www.w3.org/1999/xlink'\n  }\n};\n\nexports.default = namespaces;\nmodule.exports = exports.default;\n});\n\n/**\n * @param {Object} attrs\n * @return {string}\n */\nvar objectToAttrsString = function (attrs) {\n  return Object.keys(attrs).map(function (attr) {\n    var value = attrs[attr].toString().replace(/\"/g, '&quot;');\n    return (attr + \"=\\\"\" + value + \"\\\"\");\n  }).join(' ');\n};\n\nvar svg = namespaces_1.svg;\nvar xlink = namespaces_1.xlink;\n\nvar defaultAttrs = {};\ndefaultAttrs[svg.name] = svg.uri;\ndefaultAttrs[xlink.name] = xlink.uri;\n\n/**\n * @param {string} [content]\n * @param {Object} [attributes]\n * @return {string}\n */\nvar wrapInSvgString = function (content, attributes) {\n  if ( content === void 0 ) content = '';\n\n  var attrs = deepmerge(defaultAttrs, attributes || {});\n  var attrsRendered = objectToAttrsString(attrs);\n  return (\"<svg \" + attrsRendered + \">\" + content + \"</svg>\");\n};\n\nvar svg$1 = namespaces_1.svg;\nvar xlink$1 = namespaces_1.xlink;\n\nvar defaultConfig = {\n  attrs: ( obj = {\n    style: ['position: absolute', 'width: 0', 'height: 0'].join('; '),\n    'aria-hidden': 'true'\n  }, obj[svg$1.name] = svg$1.uri, obj[xlink$1.name] = xlink$1.uri, obj )\n};\nvar obj;\n\nvar Sprite = function Sprite(config) {\n  this.config = deepmerge(defaultConfig, config || {});\n  this.symbols = [];\n};\n\n/**\n * Add new symbol. If symbol with the same id exists it will be replaced.\n * @param {SpriteSymbol} symbol\n * @return {boolean} `true` - symbol was added, `false` - replaced\n */\nSprite.prototype.add = function add (symbol) {\n  var ref = this;\n    var symbols = ref.symbols;\n  var existing = this.find(symbol.id);\n\n  if (existing) {\n    symbols[symbols.indexOf(existing)] = symbol;\n    return false;\n  }\n\n  symbols.push(symbol);\n  return true;\n};\n\n/**\n * Remove symbol & destroy it\n * @param {string} id\n * @return {boolean} `true` - symbol was found & successfully destroyed, `false` - otherwise\n */\nSprite.prototype.remove = function remove (id) {\n  var ref = this;\n    var symbols = ref.symbols;\n  var symbol = this.find(id);\n\n  if (symbol) {\n    symbols.splice(symbols.indexOf(symbol), 1);\n    symbol.destroy();\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * @param {string} id\n * @return {SpriteSymbol|null}\n */\nSprite.prototype.find = function find (id) {\n  return this.symbols.filter(function (s) { return s.id === id; })[0] || null;\n};\n\n/**\n * @param {string} id\n * @return {boolean}\n */\nSprite.prototype.has = function has (id) {\n  return this.find(id) !== null;\n};\n\n/**\n * @return {string}\n */\nSprite.prototype.stringify = function stringify () {\n  var ref = this.config;\n    var attrs = ref.attrs;\n  var stringifiedSymbols = this.symbols.map(function (s) { return s.stringify(); }).join('');\n  return wrapInSvgString(stringifiedSymbols, attrs);\n};\n\n/**\n * @return {string}\n */\nSprite.prototype.toString = function toString () {\n  return this.stringify();\n};\n\nSprite.prototype.destroy = function destroy () {\n  this.symbols.forEach(function (s) { return s.destroy(); });\n};\n\nvar SpriteSymbol = function SpriteSymbol(ref) {\n  var id = ref.id;\n  var viewBox = ref.viewBox;\n  var content = ref.content;\n\n  this.id = id;\n  this.viewBox = viewBox;\n  this.content = content;\n};\n\n/**\n * @return {string}\n */\nSpriteSymbol.prototype.stringify = function stringify () {\n  return this.content;\n};\n\n/**\n * @return {string}\n */\nSpriteSymbol.prototype.toString = function toString () {\n  return this.stringify();\n};\n\nSpriteSymbol.prototype.destroy = function destroy () {\n    var this$1 = this;\n\n  ['id', 'viewBox', 'content'].forEach(function (prop) { return delete this$1[prop]; });\n};\n\n/**\n * @param {string} content\n * @return {Element}\n */\nvar parse = function (content) {\n  var hasImportNode = !!document.importNode;\n  var doc = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;\n\n  /**\n   * Fix for browser which are throwing WrongDocumentError\n   * if you insert an element which is not part of the document\n   * @see http://stackoverflow.com/a/7986519/4624403\n   */\n  if (hasImportNode) {\n    return document.importNode(doc, true);\n  }\n\n  return doc;\n};\n\nvar BrowserSpriteSymbol = (function (SpriteSymbol$$1) {\n  function BrowserSpriteSymbol () {\n    SpriteSymbol$$1.apply(this, arguments);\n  }\n\n  if ( SpriteSymbol$$1 ) BrowserSpriteSymbol.__proto__ = SpriteSymbol$$1;\n  BrowserSpriteSymbol.prototype = Object.create( SpriteSymbol$$1 && SpriteSymbol$$1.prototype );\n  BrowserSpriteSymbol.prototype.constructor = BrowserSpriteSymbol;\n\n  var prototypeAccessors = { isMounted: {} };\n\n  prototypeAccessors.isMounted.get = function () {\n    return !!this.node;\n  };\n\n  /**\n   * @param {Element} node\n   * @return {BrowserSpriteSymbol}\n   */\n  BrowserSpriteSymbol.createFromExistingNode = function createFromExistingNode (node) {\n    return new BrowserSpriteSymbol({\n      id: node.getAttribute('id'),\n      viewBox: node.getAttribute('viewBox'),\n      content: node.outerHTML\n    });\n  };\n\n  BrowserSpriteSymbol.prototype.destroy = function destroy () {\n    if (this.isMounted) {\n      this.unmount();\n    }\n    SpriteSymbol$$1.prototype.destroy.call(this);\n  };\n\n  /**\n   * @param {Element|string} target\n   * @return {Element}\n   */\n  BrowserSpriteSymbol.prototype.mount = function mount (target) {\n    if (this.isMounted) {\n      return this.node;\n    }\n\n    var mountTarget = typeof target === 'string' ? document.querySelector(target) : target;\n    var node = this.render();\n    this.node = node;\n\n    mountTarget.appendChild(node);\n\n    return node;\n  };\n\n  /**\n   * @return {Element}\n   */\n  BrowserSpriteSymbol.prototype.render = function render () {\n    var content = this.stringify();\n    return parse(wrapInSvgString(content)).childNodes[0];\n  };\n\n  BrowserSpriteSymbol.prototype.unmount = function unmount () {\n    this.node.parentNode.removeChild(this.node);\n  };\n\n  Object.defineProperties( BrowserSpriteSymbol.prototype, prototypeAccessors );\n\n  return BrowserSpriteSymbol;\n}(SpriteSymbol));\n\nvar defaultConfig$1 = {\n  /**\n   * Should following options be automatically configured:\n   * - `syncUrlsWithBaseTag`\n   * - `locationChangeAngularEmitter`\n   * - `moveGradientsOutsideSymbol`\n   * @type {boolean}\n   */\n  autoConfigure: true,\n\n  /**\n   * Default mounting selector\n   * @type {string}\n   */\n  mountTo: 'body',\n\n  /**\n   * Fix disappearing SVG elements when <base href> exists.\n   * Executes when sprite mounted.\n   * @see http://stackoverflow.com/a/18265336/796152\n   * @see https://github.com/everdimension/angular-svg-base-fix\n   * @see https://github.com/angular/angular.js/issues/8934#issuecomment-56568466\n   * @type {boolean}\n   */\n  syncUrlsWithBaseTag: false,\n\n  /**\n   * Should sprite listen custom location change event\n   * @type {boolean}\n   */\n  listenLocationChangeEvent: true,\n\n  /**\n   * Custom window event name which should be emitted to update sprite urls\n   * @type {string}\n   */\n  locationChangeEvent: 'locationChange',\n\n  /**\n   * Emit location change event in Angular automatically\n   * @type {boolean}\n   */\n  locationChangeAngularEmitter: false,\n\n  /**\n   * Selector to find symbols usages when updating sprite urls\n   * @type {string}\n   */\n  usagesToUpdate: 'use[*|href]',\n\n  /**\n   * Fix Firefox bug when gradients and patterns don't work if they are within a symbol.\n   * Executes when sprite is rendered, but not mounted.\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=306674\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=353575\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=1235364\n   * @type {boolean}\n   */\n  moveGradientsOutsideSymbol: false\n};\n\n/**\n * @param {*} arrayLike\n * @return {Array}\n */\nvar arrayFrom = function (arrayLike) {\n  return Array.prototype.slice.call(arrayLike, 0);\n};\n\nvar browser = {\n  isChrome: function () { return /chrome/i.test(navigator.userAgent); },\n  isFirefox: function () { return /firefox/i.test(navigator.userAgent); },\n\n  // https://msdn.microsoft.com/en-us/library/ms537503(v=vs.85).aspx\n  isIE: function () { return /msie/i.test(navigator.userAgent) || /trident/i.test(navigator.userAgent); },\n  isEdge: function () { return /edge/i.test(navigator.userAgent); }\n};\n\n/**\n * @param {string} name\n * @param {*} data\n */\nvar dispatchEvent = function (name, data) {\n  var event = document.createEvent('CustomEvent');\n  event.initCustomEvent(name, false, false, data);\n  window.dispatchEvent(event);\n};\n\n/**\n * IE doesn't evaluate <style> tags in SVGs that are dynamically added to the page.\n * This trick will trigger IE to read and use any existing SVG <style> tags.\n * @see https://github.com/iconic/SVGInjector/issues/23\n * @see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n *\n * @param {Element} node DOM Element to search <style> tags in\n * @return {Array<HTMLStyleElement>}\n */\nvar evalStylesIEWorkaround = function (node) {\n  var updatedNodes = [];\n\n  arrayFrom(node.querySelectorAll('style'))\n    .forEach(function (style) {\n      style.textContent += '';\n      updatedNodes.push(style);\n    });\n\n  return updatedNodes;\n};\n\n/**\n * @param {string} [url] If not provided - current URL will be used\n * @return {string}\n */\nvar getUrlWithoutFragment = function (url) {\n  return (url || window.location.href).split('#')[0];\n};\n\n/* global angular */\n/**\n * @param {string} eventName\n */\nvar locationChangeAngularEmitter = function (eventName) {\n  angular.module('ng').run(['$rootScope', function ($rootScope) {\n    $rootScope.$on('$locationChangeSuccess', function (e, newUrl, oldUrl) {\n      dispatchEvent(eventName, { oldUrl: oldUrl, newUrl: newUrl });\n    });\n  }]);\n};\n\nvar defaultSelector = 'linearGradient, radialGradient, pattern, mask, clipPath';\n\n/**\n * @param {Element} svg\n * @param {string} [selector]\n * @return {Element}\n */\nvar moveGradientsOutsideSymbol = function (svg, selector) {\n  if ( selector === void 0 ) selector = defaultSelector;\n\n  arrayFrom(svg.querySelectorAll('symbol')).forEach(function (symbol) {\n    arrayFrom(symbol.querySelectorAll(selector)).forEach(function (node) {\n      symbol.parentNode.insertBefore(node, symbol);\n    });\n  });\n  return svg;\n};\n\n/**\n * @param {NodeList} nodes\n * @param {Function} [matcher]\n * @return {Attr[]}\n */\nfunction selectAttributes(nodes, matcher) {\n  var attrs = arrayFrom(nodes).reduce(function (acc, node) {\n    if (!node.attributes) {\n      return acc;\n    }\n\n    var arrayfied = arrayFrom(node.attributes);\n    var matched = matcher ? arrayfied.filter(matcher) : arrayfied;\n    return acc.concat(matched);\n  }, []);\n\n  return attrs;\n}\n\n/**\n * @param {NodeList|Node} nodes\n * @param {boolean} [clone=true]\n * @return {string}\n */\n\nvar xLinkNS = namespaces_1.xlink.uri;\nvar xLinkAttrName = 'xlink:href';\n\n// eslint-disable-next-line no-useless-escape\nvar specialUrlCharsPattern = /[{}|\\\\\\^\\[\\]`\"<>]/g;\n\nfunction encoder(url) {\n  return url.replace(specialUrlCharsPattern, function (match) {\n    return (\"%\" + (match[0].charCodeAt(0).toString(16).toUpperCase()));\n  });\n}\n\nfunction escapeRegExp(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\n}\n\n/**\n * @param {NodeList} nodes\n * @param {string} startsWith\n * @param {string} replaceWith\n * @return {NodeList}\n */\nfunction updateReferences(nodes, startsWith, replaceWith) {\n  arrayFrom(nodes).forEach(function (node) {\n    var href = node.getAttribute(xLinkAttrName);\n    if (href && href.indexOf(startsWith) === 0) {\n      var newUrl = href.replace(startsWith, replaceWith);\n      node.setAttributeNS(xLinkNS, xLinkAttrName, newUrl);\n    }\n  });\n\n  return nodes;\n}\n\n/**\n * List of SVG attributes to update url() target in them\n */\nvar attList = [\n  'clipPath',\n  'colorProfile',\n  'src',\n  'cursor',\n  'fill',\n  'filter',\n  'marker',\n  'markerStart',\n  'markerMid',\n  'markerEnd',\n  'mask',\n  'stroke',\n  'style'\n];\n\nvar attSelector = attList.map(function (attr) { return (\"[\" + attr + \"]\"); }).join(',');\n\n/**\n * Update URLs in svg image (like `fill=\"url(...)\"`) and update referencing elements\n * @param {Element} svg\n * @param {NodeList} references\n * @param {string|RegExp} startsWith\n * @param {string} replaceWith\n * @return {void}\n *\n * @example\n * const sprite = document.querySelector('svg.sprite');\n * const usages = document.querySelectorAll('use');\n * updateUrls(sprite, usages, '#', 'prefix#');\n */\nvar updateUrls = function (svg, references, startsWith, replaceWith) {\n  var startsWithEncoded = encoder(startsWith);\n  var replaceWithEncoded = encoder(replaceWith);\n\n  var nodes = svg.querySelectorAll(attSelector);\n  var attrs = selectAttributes(nodes, function (ref) {\n    var localName = ref.localName;\n    var value = ref.value;\n\n    return attList.indexOf(localName) !== -1 && value.indexOf((\"url(\" + startsWithEncoded)) !== -1;\n  });\n\n  attrs.forEach(function (attr) { return attr.value = attr.value.replace(new RegExp(escapeRegExp(startsWithEncoded), 'g'), replaceWithEncoded); });\n  updateReferences(references, startsWithEncoded, replaceWithEncoded);\n};\n\n/**\n * Internal emitter events\n * @enum\n * @private\n */\nvar Events = {\n  MOUNT: 'mount',\n  SYMBOL_MOUNT: 'symbol_mount'\n};\n\nvar BrowserSprite = (function (Sprite$$1) {\n  function BrowserSprite(cfg) {\n    var this$1 = this;\n    if ( cfg === void 0 ) cfg = {};\n\n    Sprite$$1.call(this, deepmerge(defaultConfig$1, cfg));\n\n    var emitter = mitt();\n    this._emitter = emitter;\n    this.node = null;\n\n    var ref = this;\n    var config = ref.config;\n\n    if (config.autoConfigure) {\n      this._autoConfigure(cfg);\n    }\n\n    if (config.syncUrlsWithBaseTag) {\n      var baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\n      emitter.on(Events.MOUNT, function () { return this$1.updateUrls('#', baseUrl); });\n    }\n\n    var handleLocationChange = this._handleLocationChange.bind(this);\n    this._handleLocationChange = handleLocationChange;\n\n    // Provide way to update sprite urls externally via dispatching custom window event\n    if (config.listenLocationChangeEvent) {\n      window.addEventListener(config.locationChangeEvent, handleLocationChange);\n    }\n\n    // Emit location change event in Angular automatically\n    if (config.locationChangeAngularEmitter) {\n      locationChangeAngularEmitter(config.locationChangeEvent);\n    }\n\n    // After sprite mounted\n    emitter.on(Events.MOUNT, function (spriteNode) {\n      if (config.moveGradientsOutsideSymbol) {\n        moveGradientsOutsideSymbol(spriteNode);\n      }\n    });\n\n    // After symbol mounted into sprite\n    emitter.on(Events.SYMBOL_MOUNT, function (symbolNode) {\n      if (config.moveGradientsOutsideSymbol) {\n        moveGradientsOutsideSymbol(symbolNode.parentNode);\n      }\n\n      if (browser.isIE() || browser.isEdge()) {\n        evalStylesIEWorkaround(symbolNode);\n      }\n    });\n  }\n\n  if ( Sprite$$1 ) BrowserSprite.__proto__ = Sprite$$1;\n  BrowserSprite.prototype = Object.create( Sprite$$1 && Sprite$$1.prototype );\n  BrowserSprite.prototype.constructor = BrowserSprite;\n\n  var prototypeAccessors = { isMounted: {} };\n\n  /**\n   * @return {boolean}\n   */\n  prototypeAccessors.isMounted.get = function () {\n    return !!this.node;\n  };\n\n  /**\n   * Automatically configure following options\n   * - `syncUrlsWithBaseTag`\n   * - `locationChangeAngularEmitter`\n   * - `moveGradientsOutsideSymbol`\n   * @param {Object} cfg\n   * @private\n   */\n  BrowserSprite.prototype._autoConfigure = function _autoConfigure (cfg) {\n    var ref = this;\n    var config = ref.config;\n\n    if (typeof cfg.syncUrlsWithBaseTag === 'undefined') {\n      config.syncUrlsWithBaseTag = typeof document.getElementsByTagName('base')[0] !== 'undefined';\n    }\n\n    if (typeof cfg.locationChangeAngularEmitter === 'undefined') {\n        config.locationChangeAngularEmitter = typeof window.angular !== 'undefined';\n    }\n\n    if (typeof cfg.moveGradientsOutsideSymbol === 'undefined') {\n      config.moveGradientsOutsideSymbol = browser.isFirefox();\n    }\n  };\n\n  /**\n   * @param {Event} event\n   * @param {Object} event.detail\n   * @param {string} event.detail.oldUrl\n   * @param {string} event.detail.newUrl\n   * @private\n   */\n  BrowserSprite.prototype._handleLocationChange = function _handleLocationChange (event) {\n    var ref = event.detail;\n    var oldUrl = ref.oldUrl;\n    var newUrl = ref.newUrl;\n    this.updateUrls(oldUrl, newUrl);\n  };\n\n  /**\n   * Add new symbol. If symbol with the same id exists it will be replaced.\n   * If sprite already mounted - `symbol.mount(sprite.node)` will be called.\n   * @fires Events#SYMBOL_MOUNT\n   * @param {BrowserSpriteSymbol} symbol\n   * @return {boolean} `true` - symbol was added, `false` - replaced\n   */\n  BrowserSprite.prototype.add = function add (symbol) {\n    var sprite = this;\n    var isNewSymbol = Sprite$$1.prototype.add.call(this, symbol);\n\n    if (this.isMounted && isNewSymbol) {\n      symbol.mount(sprite.node);\n      this._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);\n    }\n\n    return isNewSymbol;\n  };\n\n  /**\n   * Attach to existing DOM node\n   * @param {string|Element} target\n   * @return {Element|null} attached DOM Element. null if node to attach not found.\n   */\n  BrowserSprite.prototype.attach = function attach (target) {\n    var this$1 = this;\n\n    var sprite = this;\n\n    if (sprite.isMounted) {\n      return sprite.node;\n    }\n\n    /** @type Element */\n    var node = typeof target === 'string' ? document.querySelector(target) : target;\n    sprite.node = node;\n\n    // Already added symbols needs to be mounted\n    this.symbols.forEach(function (symbol) {\n      symbol.mount(sprite.node);\n      this$1._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);\n    });\n\n    // Create symbols from existing DOM nodes, add and mount them\n    arrayFrom(node.querySelectorAll('symbol'))\n      .forEach(function (symbolNode) {\n        var symbol = BrowserSpriteSymbol.createFromExistingNode(symbolNode);\n        symbol.node = symbolNode; // hack to prevent symbol mounting to sprite when adding\n        sprite.add(symbol);\n      });\n\n    this._emitter.emit(Events.MOUNT, node);\n\n    return node;\n  };\n\n  BrowserSprite.prototype.destroy = function destroy () {\n    var ref = this;\n    var config = ref.config;\n    var symbols = ref.symbols;\n    var _emitter = ref._emitter;\n\n    symbols.forEach(function (s) { return s.destroy(); });\n\n    _emitter.off('*');\n    window.removeEventListener(config.locationChangeEvent, this._handleLocationChange);\n\n    if (this.isMounted) {\n      this.unmount();\n    }\n  };\n\n  /**\n   * @fires Events#MOUNT\n   * @param {string|Element} [target]\n   * @param {boolean} [prepend=false]\n   * @return {Element|null} rendered sprite node. null if mount node not found.\n   */\n  BrowserSprite.prototype.mount = function mount (target, prepend) {\n    if ( target === void 0 ) target = this.config.mountTo;\n    if ( prepend === void 0 ) prepend = false;\n\n    var sprite = this;\n\n    if (sprite.isMounted) {\n      return sprite.node;\n    }\n\n    var mountNode = typeof target === 'string' ? document.querySelector(target) : target;\n    var node = sprite.render();\n    this.node = node;\n\n    if (prepend && mountNode.childNodes[0]) {\n      mountNode.insertBefore(node, mountNode.childNodes[0]);\n    } else {\n      mountNode.appendChild(node);\n    }\n\n    this._emitter.emit(Events.MOUNT, node);\n\n    return node;\n  };\n\n  /**\n   * @return {Element}\n   */\n  BrowserSprite.prototype.render = function render () {\n    return parse(this.stringify());\n  };\n\n  /**\n   * Detach sprite from the DOM\n   */\n  BrowserSprite.prototype.unmount = function unmount () {\n    this.node.parentNode.removeChild(this.node);\n  };\n\n  /**\n   * Update URLs in sprite and usage elements\n   * @param {string} oldUrl\n   * @param {string} newUrl\n   * @return {boolean} `true` - URLs was updated, `false` - sprite is not mounted\n   */\n  BrowserSprite.prototype.updateUrls = function updateUrls$1 (oldUrl, newUrl) {\n    if (!this.isMounted) {\n      return false;\n    }\n\n    var usages = document.querySelectorAll(this.config.usagesToUpdate);\n\n    updateUrls(\n      this.node,\n      usages,\n      ((getUrlWithoutFragment(oldUrl)) + \"#\"),\n      ((getUrlWithoutFragment(newUrl)) + \"#\")\n    );\n\n    return true;\n  };\n\n  Object.defineProperties( BrowserSprite.prototype, prototypeAccessors );\n\n  return BrowserSprite;\n}(Sprite));\n\nvar ready$1 = createCommonjsModule(function (module) {\n/*!\n  * domready (c) Dustin Diaz 2014 - License MIT\n  */\n!function (name, definition) {\n\n  { module.exports = definition(); }\n\n}('domready', function () {\n\n  var fns = [], listener\n    , doc = document\n    , hack = doc.documentElement.doScroll\n    , domContentLoaded = 'DOMContentLoaded'\n    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState);\n\n\n  if (!loaded)\n  { doc.addEventListener(domContentLoaded, listener = function () {\n    doc.removeEventListener(domContentLoaded, listener);\n    loaded = 1;\n    while (listener = fns.shift()) { listener(); }\n  }); }\n\n  return function (fn) {\n    loaded ? setTimeout(fn, 0) : fns.push(fn);\n  }\n\n});\n});\n\nvar spriteNodeId = '__SVG_SPRITE_NODE__';\nvar spriteGlobalVarName = '__SVG_SPRITE__';\nvar isSpriteExists = !!window[spriteGlobalVarName];\n\n// eslint-disable-next-line import/no-mutable-exports\nvar sprite;\n\nif (isSpriteExists) {\n  sprite = window[spriteGlobalVarName];\n} else {\n  sprite = new BrowserSprite({\n    attrs: {\n      id: spriteNodeId,\n      'aria-hidden': 'true'\n    }\n  });\n  window[spriteGlobalVarName] = sprite;\n}\n\nvar loadSprite = function () {\n  /**\n   * Check for page already contains sprite node\n   * If found - attach to and reuse it's content\n   * If not - render and mount the new sprite\n   */\n  var existing = document.getElementById(spriteNodeId);\n\n  if (existing) {\n    sprite.attach(existing);\n  } else {\n    sprite.mount(document.body, true);\n  }\n};\n\nif (document.body) {\n  loadSprite();\n} else {\n  ready$1(loadSprite);\n}\n\nvar sprite$1 = sprite;\n\nreturn sprite$1;\n\n})));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}