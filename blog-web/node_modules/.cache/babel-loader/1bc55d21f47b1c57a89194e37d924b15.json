{"ast":null,"code":"/*!\n  * @intlify/runtime v9.1.10\n  * (c) 2022 kazuya kawaguchi\n  * Released under the MIT License.\n  */\nimport { isNumber, isObject, isString, isFunction, isPlainObject, toDisplayString } from '@intlify/shared';\n\nconst DEFAULT_MODIFIER = str => str;\n\nconst DEFAULT_MESSAGE = ctx => ''; // eslint-disable-line\n\n\nconst DEFAULT_MESSAGE_DATA_TYPE = 'text';\n\nconst DEFAULT_NORMALIZE = values => values.length === 0 ? '' : values.join('');\n\nconst DEFAULT_INTERPOLATE = toDisplayString;\n\nfunction pluralDefault(choice, choicesLength) {\n  choice = Math.abs(choice);\n\n  if (choicesLength === 2) {\n    // prettier-ignore\n    return choice ? choice > 1 ? 1 : 0 : 1;\n  }\n\n  return choice ? Math.min(choice, 2) : 0;\n}\n\nfunction getPluralIndex(options) {\n  // prettier-ignore\n  const index = isNumber(options.pluralIndex) ? options.pluralIndex : -1; // prettier-ignore\n\n  return options.named && (isNumber(options.named.count) || isNumber(options.named.n)) ? isNumber(options.named.count) ? options.named.count : isNumber(options.named.n) ? options.named.n : index : index;\n}\n\nfunction normalizeNamed(pluralIndex, props) {\n  if (!props.count) {\n    props.count = pluralIndex;\n  }\n\n  if (!props.n) {\n    props.n = pluralIndex;\n  }\n}\n\nfunction createMessageContext(options = {}) {\n  const locale = options.locale;\n  const pluralIndex = getPluralIndex(options);\n  const pluralRule = isObject(options.pluralRules) && isString(locale) && isFunction(options.pluralRules[locale]) ? options.pluralRules[locale] : pluralDefault;\n  const orgPluralRule = isObject(options.pluralRules) && isString(locale) && isFunction(options.pluralRules[locale]) ? pluralDefault : undefined;\n\n  const plural = messages => messages[pluralRule(pluralIndex, messages.length, orgPluralRule)];\n\n  const _list = options.list || [];\n\n  const list = index => _list[index]; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  const _named = options.named || {};\n\n  isNumber(options.pluralIndex) && normalizeNamed(pluralIndex, _named);\n\n  const named = key => _named[key]; // TODO: need to design resolve message function?\n\n\n  function message(key) {\n    // prettier-ignore\n    const msg = isFunction(options.messages) ? options.messages(key) : isObject(options.messages) ? options.messages[key] : false;\n    return !msg ? options.parent ? options.parent.message(key) // resolve from parent messages\n    : DEFAULT_MESSAGE : msg;\n  }\n\n  const _modifier = name => options.modifiers ? options.modifiers[name] : DEFAULT_MODIFIER;\n\n  const normalize = isPlainObject(options.processor) && isFunction(options.processor.normalize) ? options.processor.normalize : DEFAULT_NORMALIZE;\n  const interpolate = isPlainObject(options.processor) && isFunction(options.processor.interpolate) ? options.processor.interpolate : DEFAULT_INTERPOLATE;\n  const type = isPlainObject(options.processor) && isString(options.processor.type) ? options.processor.type : DEFAULT_MESSAGE_DATA_TYPE;\n  const ctx = {\n    [\"list\"\n    /* LIST */\n    ]: list,\n    [\"named\"\n    /* NAMED */\n    ]: named,\n    [\"plural\"\n    /* PLURAL */\n    ]: plural,\n    [\"linked\"\n    /* LINKED */\n    ]: (key, modifier) => {\n      // TODO: should check `key`\n      const msg = message(key)(ctx);\n      return isString(modifier) ? _modifier(modifier)(msg) : msg;\n    },\n    [\"message\"\n    /* MESSAGE */\n    ]: message,\n    [\"type\"\n    /* TYPE */\n    ]: type,\n    [\"interpolate\"\n    /* INTERPOLATE */\n    ]: interpolate,\n    [\"normalize\"\n    /* NORMALIZE */\n    ]: normalize\n  };\n  return ctx;\n}\n\nexport { DEFAULT_MESSAGE_DATA_TYPE, createMessageContext };","map":{"version":3,"names":["isNumber","isObject","isString","isFunction","isPlainObject","toDisplayString","DEFAULT_MODIFIER","str","DEFAULT_MESSAGE","ctx","DEFAULT_MESSAGE_DATA_TYPE","DEFAULT_NORMALIZE","values","length","join","DEFAULT_INTERPOLATE","pluralDefault","choice","choicesLength","Math","abs","min","getPluralIndex","options","index","pluralIndex","named","count","n","normalizeNamed","props","createMessageContext","locale","pluralRule","pluralRules","orgPluralRule","undefined","plural","messages","_list","list","_named","key","message","msg","parent","_modifier","name","modifiers","normalize","processor","interpolate","type","modifier"],"sources":["/Users/lord/Documents/Programmer/vue/VueProjects/cloudycraft-vue/blog-web/node_modules/@intlify/runtime/dist/runtime.esm-bundler.js"],"sourcesContent":["/*!\n  * @intlify/runtime v9.1.10\n  * (c) 2022 kazuya kawaguchi\n  * Released under the MIT License.\n  */\nimport { isNumber, isObject, isString, isFunction, isPlainObject, toDisplayString } from '@intlify/shared';\n\nconst DEFAULT_MODIFIER = (str) => str;\r\nconst DEFAULT_MESSAGE = (ctx) => ''; // eslint-disable-line\r\nconst DEFAULT_MESSAGE_DATA_TYPE = 'text';\r\nconst DEFAULT_NORMALIZE = (values) => values.length === 0 ? '' : values.join('');\r\nconst DEFAULT_INTERPOLATE = toDisplayString;\r\nfunction pluralDefault(choice, choicesLength) {\r\n    choice = Math.abs(choice);\r\n    if (choicesLength === 2) {\r\n        // prettier-ignore\r\n        return choice\r\n            ? choice > 1\r\n                ? 1\r\n                : 0\r\n            : 1;\r\n    }\r\n    return choice ? Math.min(choice, 2) : 0;\r\n}\r\nfunction getPluralIndex(options) {\r\n    // prettier-ignore\r\n    const index = isNumber(options.pluralIndex)\r\n        ? options.pluralIndex\r\n        : -1;\r\n    // prettier-ignore\r\n    return options.named && (isNumber(options.named.count) || isNumber(options.named.n))\r\n        ? isNumber(options.named.count)\r\n            ? options.named.count\r\n            : isNumber(options.named.n)\r\n                ? options.named.n\r\n                : index\r\n        : index;\r\n}\r\nfunction normalizeNamed(pluralIndex, props) {\r\n    if (!props.count) {\r\n        props.count = pluralIndex;\r\n    }\r\n    if (!props.n) {\r\n        props.n = pluralIndex;\r\n    }\r\n}\r\nfunction createMessageContext(options = {}) {\r\n    const locale = options.locale;\r\n    const pluralIndex = getPluralIndex(options);\r\n    const pluralRule = isObject(options.pluralRules) &&\r\n        isString(locale) &&\r\n        isFunction(options.pluralRules[locale])\r\n        ? options.pluralRules[locale]\r\n        : pluralDefault;\r\n    const orgPluralRule = isObject(options.pluralRules) &&\r\n        isString(locale) &&\r\n        isFunction(options.pluralRules[locale])\r\n        ? pluralDefault\r\n        : undefined;\r\n    const plural = (messages) => messages[pluralRule(pluralIndex, messages.length, orgPluralRule)];\r\n    const _list = options.list || [];\r\n    const list = (index) => _list[index];\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const _named = options.named || {};\r\n    isNumber(options.pluralIndex) && normalizeNamed(pluralIndex, _named);\r\n    const named = (key) => _named[key];\r\n    // TODO: need to design resolve message function?\r\n    function message(key) {\r\n        // prettier-ignore\r\n        const msg = isFunction(options.messages)\r\n            ? options.messages(key)\r\n            : isObject(options.messages)\r\n                ? options.messages[key]\r\n                : false;\r\n        return !msg\r\n            ? options.parent\r\n                ? options.parent.message(key) // resolve from parent messages\r\n                : DEFAULT_MESSAGE\r\n            : msg;\r\n    }\r\n    const _modifier = (name) => options.modifiers\r\n        ? options.modifiers[name]\r\n        : DEFAULT_MODIFIER;\r\n    const normalize = isPlainObject(options.processor) && isFunction(options.processor.normalize)\r\n        ? options.processor.normalize\r\n        : DEFAULT_NORMALIZE;\r\n    const interpolate = isPlainObject(options.processor) &&\r\n        isFunction(options.processor.interpolate)\r\n        ? options.processor.interpolate\r\n        : DEFAULT_INTERPOLATE;\r\n    const type = isPlainObject(options.processor) && isString(options.processor.type)\r\n        ? options.processor.type\r\n        : DEFAULT_MESSAGE_DATA_TYPE;\r\n    const ctx = {\r\n        [\"list\" /* LIST */]: list,\r\n        [\"named\" /* NAMED */]: named,\r\n        [\"plural\" /* PLURAL */]: plural,\r\n        [\"linked\" /* LINKED */]: (key, modifier) => {\r\n            // TODO: should check `key`\r\n            const msg = message(key)(ctx);\r\n            return isString(modifier) ? _modifier(modifier)(msg) : msg;\r\n        },\r\n        [\"message\" /* MESSAGE */]: message,\r\n        [\"type\" /* TYPE */]: type,\r\n        [\"interpolate\" /* INTERPOLATE */]: interpolate,\r\n        [\"normalize\" /* NORMALIZE */]: normalize\r\n    };\r\n    return ctx;\r\n}\n\nexport { DEFAULT_MESSAGE_DATA_TYPE, createMessageContext };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}