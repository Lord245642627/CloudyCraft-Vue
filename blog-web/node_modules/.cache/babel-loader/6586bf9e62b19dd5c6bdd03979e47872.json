{"ast":null,"code":"import { defineComponent, ref, watch, provide, openBlock, createElementBlock, normalizeClass, unref, renderSlot } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../tokens/index.mjs';\nimport { collapseProps, collapseEmits } from './collapse.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { castArray } from 'lodash-unified';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nimport { collapseContextKey } from '../../../tokens/collapse.mjs';\nconst __default__ = {\n  name: \"ElCollapse\"\n};\n\nconst _sfc_main = /* @__PURE__ */defineComponent({ ...__default__,\n  props: collapseProps,\n  emits: collapseEmits,\n\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    const props = __props;\n    const ns = useNamespace(\"collapse\");\n    const activeNames = ref(castArray(props.modelValue));\n\n    const setActiveNames = _activeNames => {\n      activeNames.value = _activeNames;\n      const value = props.accordion ? activeNames.value[0] : activeNames.value;\n      emit(UPDATE_MODEL_EVENT, value);\n      emit(CHANGE_EVENT, value);\n    };\n\n    const handleItemClick = name => {\n      if (props.accordion) {\n        setActiveNames([(activeNames.value[0] || activeNames.value[0] === 0) && activeNames.value[0] === name ? \"\" : name]);\n      } else {\n        const _activeNames = [...activeNames.value];\n\n        const index = _activeNames.indexOf(name);\n\n        if (index > -1) {\n          _activeNames.splice(index, 1);\n        } else {\n          _activeNames.push(name);\n        }\n\n        setActiveNames(_activeNames);\n      }\n    };\n\n    watch(() => props.modelValue, () => activeNames.value = castArray(props.modelValue), {\n      deep: true\n    });\n    provide(collapseContextKey, {\n      activeNames,\n      handleItemClick\n    });\n    expose({\n      activeNames,\n      setActiveNames\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        class: normalizeClass(unref(ns).b()),\n        role: \"tablist\",\n        \"aria-multiselectable\": \"true\"\n      }, [renderSlot(_ctx.$slots, \"default\")], 2);\n    };\n  }\n\n});\n\nvar Collapse = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/collapse/src/collapse.vue\"]]);\n\nexport { Collapse as default };","map":null,"metadata":{},"sourceType":"module"}