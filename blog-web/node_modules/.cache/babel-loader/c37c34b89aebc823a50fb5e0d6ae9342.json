{"ast":null,"code":"import { onMounted, onBeforeUnmount } from 'vue';\nimport { isClient } from '@vueuse/core';\nimport '../../constants/index.mjs';\nimport { EVENT_CODE } from '../../constants/aria.mjs';\nlet registeredEscapeHandlers = [];\n\nconst useEscapeKeydown = handler => {\n  const cachedHandler = e => {\n    const event = e;\n\n    if (event.key === EVENT_CODE.esc) {\n      registeredEscapeHandlers.forEach(registeredHandler => registeredHandler(event));\n    }\n  };\n\n  onMounted(() => {\n    if (registeredEscapeHandlers.length === 0) {\n      document.addEventListener(\"keydown\", cachedHandler);\n    }\n\n    if (isClient) registeredEscapeHandlers.push(handler);\n  });\n  onBeforeUnmount(() => {\n    registeredEscapeHandlers = registeredEscapeHandlers.filter(registeredHandler => registeredHandler !== handler);\n\n    if (registeredEscapeHandlers.length === 0) {\n      if (isClient) document.removeEventListener(\"keydown\", cachedHandler);\n    }\n  });\n};\n\nexport { useEscapeKeydown };","map":null,"metadata":{},"sourceType":"module"}