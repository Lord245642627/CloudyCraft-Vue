{"ast":null,"code":"import '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { dialogContentProps } from './dialog-content.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { isBoolean } from '@vueuse/core';\nconst dialogProps = buildProps({ ...dialogContentProps,\n  appendToBody: {\n    type: Boolean,\n    default: false\n  },\n  beforeClose: {\n    type: definePropType(Function)\n  },\n  destroyOnClose: {\n    type: Boolean,\n    default: false\n  },\n  closeOnClickModal: {\n    type: Boolean,\n    default: true\n  },\n  closeOnPressEscape: {\n    type: Boolean,\n    default: true\n  },\n  lockScroll: {\n    type: Boolean,\n    default: true\n  },\n  modal: {\n    type: Boolean,\n    default: true\n  },\n  openDelay: {\n    type: Number,\n    default: 0\n  },\n  closeDelay: {\n    type: Number,\n    default: 0\n  },\n  top: {\n    type: String\n  },\n  modelValue: {\n    type: Boolean,\n    default: false\n  },\n  modalClass: String,\n  width: {\n    type: [String, Number]\n  },\n  zIndex: {\n    type: Number\n  },\n  trapFocus: {\n    type: Boolean,\n    default: false\n  }\n});\nconst dialogEmits = {\n  open: () => true,\n  opened: () => true,\n  close: () => true,\n  closed: () => true,\n  [UPDATE_MODEL_EVENT]: value => isBoolean(value),\n  openAutoFocus: () => true,\n  closeAutoFocus: () => true\n};\nexport { dialogEmits, dialogProps };","map":null,"metadata":{},"sourceType":"module"}