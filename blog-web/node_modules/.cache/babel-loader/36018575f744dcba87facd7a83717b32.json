{"ast":null,"code":"import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, unref, normalizeStyle, createElementVNode, renderSlot, createBlock, withModifiers, withCtx, createVNode, createCommentVNode, Transition } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Close } from '@element-plus/icons-vue';\nimport '../../../hooks/index.mjs';\nimport { tagProps, tagEmits } from './tag.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useSize } from '../../../hooks/use-common-props/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst __default__ = {\n  name: \"ElTag\"\n};\n\nconst _sfc_main = /* @__PURE__ */defineComponent({ ...__default__,\n  props: tagProps,\n  emits: tagEmits,\n\n  setup(__props, {\n    emit\n  }) {\n    const props = __props;\n    const tagSize = useSize();\n    const ns = useNamespace(\"tag\");\n    const classes = computed(() => {\n      const {\n        type,\n        hit,\n        effect,\n        closable,\n        round\n      } = props;\n      return [ns.b(), ns.is(\"closable\", closable), ns.m(type), ns.m(tagSize.value), ns.m(effect), ns.is(\"hit\", hit), ns.is(\"round\", round)];\n    });\n\n    const handleClose = event => {\n      emit(\"close\", event);\n    };\n\n    const handleClick = event => {\n      emit(\"click\", event);\n    };\n\n    return (_ctx, _cache) => {\n      return _ctx.disableTransitions ? (openBlock(), createElementBlock(\"span\", {\n        key: 0,\n        class: normalizeClass(unref(classes)),\n        style: normalizeStyle({\n          backgroundColor: _ctx.color\n        }),\n        onClick: handleClick\n      }, [createElementVNode(\"span\", {\n        class: normalizeClass(unref(ns).e(\"content\"))\n      }, [renderSlot(_ctx.$slots, \"default\")], 2), _ctx.closable ? (openBlock(), createBlock(unref(ElIcon), {\n        key: 0,\n        class: normalizeClass(unref(ns).e(\"close\")),\n        onClick: withModifiers(handleClose, [\"stop\"])\n      }, {\n        default: withCtx(() => [createVNode(unref(Close))]),\n        _: 1\n      }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)], 6)) : (openBlock(), createBlock(Transition, {\n        key: 1,\n        name: `${unref(ns).namespace.value}-zoom-in-center`,\n        appear: \"\"\n      }, {\n        default: withCtx(() => [createElementVNode(\"span\", {\n          class: normalizeClass(unref(classes)),\n          style: normalizeStyle({\n            backgroundColor: _ctx.color\n          }),\n          onClick: handleClick\n        }, [createElementVNode(\"span\", {\n          class: normalizeClass(unref(ns).e(\"content\"))\n        }, [renderSlot(_ctx.$slots, \"default\")], 2), _ctx.closable ? (openBlock(), createBlock(unref(ElIcon), {\n          key: 0,\n          class: normalizeClass(unref(ns).e(\"close\")),\n          onClick: withModifiers(handleClose, [\"stop\"])\n        }, {\n          default: withCtx(() => [createVNode(unref(Close))]),\n          _: 1\n        }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)], 6)]),\n        _: 3\n      }, 8, [\"name\"]));\n    };\n  }\n\n});\n\nvar Tag = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tag/src/tag.vue\"]]);\n\nexport { Tag as default };","map":null,"metadata":{},"sourceType":"module"}