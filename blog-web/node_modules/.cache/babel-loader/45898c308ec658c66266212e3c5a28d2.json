{"ast":null,"code":"import { watch, isRef } from 'vue';\n\nconst useRestoreActive = (toggle, initialFocus) => {\n  let previousActive;\n  watch(() => toggle.value, val => {\n    var _a, _b;\n\n    if (val) {\n      previousActive = document.activeElement;\n\n      if (isRef(initialFocus)) {\n        (_b = (_a = initialFocus.value).focus) == null ? void 0 : _b.call(_a);\n      }\n    } else {\n      if (process.env.NODE_ENV === \"test\") {\n        previousActive.focus.call(previousActive);\n      } else {\n        previousActive.focus();\n      }\n    }\n  });\n};\n\nexport { useRestoreActive };","map":null,"metadata":{},"sourceType":"module"}