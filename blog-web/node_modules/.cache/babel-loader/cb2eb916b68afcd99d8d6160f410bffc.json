{"ast":null,"code":"function isValidValue(val) {\n  return val || val === 0;\n}\n\nfunction isValidArray(val) {\n  return Array.isArray(val) && val.length;\n}\n\nfunction toValidArray(val) {\n  return Array.isArray(val) ? val : isValidValue(val) ? [val] : [];\n}\n\nfunction treeFind(treeData, findCallback, getChildren, resultCallback, parent) {\n  for (let i = 0; i < treeData.length; i++) {\n    const data = treeData[i];\n\n    if (findCallback(data, i, treeData, parent)) {\n      return resultCallback ? resultCallback(data, i, treeData, parent) : data;\n    } else {\n      const children = getChildren(data);\n\n      if (isValidArray(children)) {\n        const find = treeFind(children, findCallback, getChildren, resultCallback, data);\n        if (find) return find;\n      }\n    }\n  }\n}\n\nexport { isValidArray, isValidValue, toValidArray, treeFind };","map":null,"metadata":{},"sourceType":"module"}