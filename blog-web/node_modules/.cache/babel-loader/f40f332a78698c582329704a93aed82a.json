{"ast":null,"code":"import { ref, onMounted, nextTick } from 'vue';\nimport { useEventListener } from '@vueuse/core';\n\nconst useLifecycle = (props, initData, resetSize) => {\n  const sliderWrapper = ref();\n  onMounted(async () => {\n    if (props.range) {\n      if (Array.isArray(props.modelValue)) {\n        initData.firstValue = Math.max(props.min, props.modelValue[0]);\n        initData.secondValue = Math.min(props.max, props.modelValue[1]);\n      } else {\n        initData.firstValue = props.min;\n        initData.secondValue = props.max;\n      }\n\n      initData.oldValue = [initData.firstValue, initData.secondValue];\n    } else {\n      if (typeof props.modelValue !== \"number\" || Number.isNaN(props.modelValue)) {\n        initData.firstValue = props.min;\n      } else {\n        initData.firstValue = Math.min(props.max, Math.max(props.min, props.modelValue));\n      }\n\n      initData.oldValue = initData.firstValue;\n    }\n\n    useEventListener(window, \"resize\", resetSize);\n    await nextTick();\n    resetSize();\n  });\n  return {\n    sliderWrapper\n  };\n};\n\nexport { useLifecycle };","map":null,"metadata":{},"sourceType":"module"}