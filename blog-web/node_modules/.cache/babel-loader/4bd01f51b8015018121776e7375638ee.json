{"ast":null,"code":"/*! js-cookie v3.0.1 | MIT */\n\n/* eslint-disable no-var */\nfunction assign(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\n\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent);\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g, decodeURIComponent);\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init(converter, defaultAttributes) {\n  function set(key, value, attributes) {\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    key = encodeURIComponent(key).replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent).replace(/[()]/g, escape);\n    var stringifiedAttributes = '';\n\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue;\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue;\n      } // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n\n\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return document.cookie = key + '=' + converter.write(value, key) + stringifiedAttributes;\n  }\n\n  function get(key) {\n    if (typeof document === 'undefined' || arguments.length && !key) {\n      return;\n    } // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n\n\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var foundKey = decodeURIComponent(parts[0]);\n        jar[foundKey] = converter.read(value, foundKey);\n\n        if (key === foundKey) {\n          break;\n        }\n      } catch (e) {}\n    }\n\n    return key ? jar[key] : jar;\n  }\n\n  return Object.create({\n    set: set,\n    get: get,\n    remove: function (key, attributes) {\n      set(key, '', assign({}, attributes, {\n        expires: -1\n      }));\n    },\n    withAttributes: function (attributes) {\n      return init(this.converter, assign({}, this.attributes, attributes));\n    },\n    withConverter: function (converter) {\n      return init(assign({}, this.converter, converter), this.attributes);\n    }\n  }, {\n    attributes: {\n      value: Object.freeze(defaultAttributes)\n    },\n    converter: {\n      value: Object.freeze(converter)\n    }\n  });\n}\n\nvar api = init(defaultConverter, {\n  path: '/'\n});\n/* eslint-enable no-var */\n\nexport default api;","map":null,"metadata":{},"sourceType":"module"}