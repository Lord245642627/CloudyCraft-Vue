{"ast":null,"code":"import { getCurrentInstance, ref, unref } from 'vue';\nimport { getRowIdentity } from '../util.mjs';\n\nfunction useCurrent(watcherData) {\n  const instance = getCurrentInstance();\n\n  const _currentRowKey = ref(null);\n\n  const currentRow = ref(null);\n\n  const setCurrentRowKey = key => {\n    instance.store.assertRowKey();\n    _currentRowKey.value = key;\n    setCurrentRowByKey(key);\n  };\n\n  const restoreCurrentRowKey = () => {\n    _currentRowKey.value = null;\n  };\n\n  const setCurrentRowByKey = key => {\n    const {\n      data,\n      rowKey\n    } = watcherData;\n    let _currentRow = null;\n\n    if (rowKey.value) {\n      _currentRow = (unref(data) || []).find(item => getRowIdentity(item, rowKey.value) === key);\n    }\n\n    currentRow.value = _currentRow;\n    instance.emit(\"current-change\", currentRow.value, null);\n  };\n\n  const updateCurrentRow = _currentRow => {\n    const oldCurrentRow = currentRow.value;\n\n    if (_currentRow && _currentRow !== oldCurrentRow) {\n      currentRow.value = _currentRow;\n      instance.emit(\"current-change\", currentRow.value, oldCurrentRow);\n      return;\n    }\n\n    if (!_currentRow && oldCurrentRow) {\n      currentRow.value = null;\n      instance.emit(\"current-change\", null, oldCurrentRow);\n    }\n  };\n\n  const updateCurrentRowData = () => {\n    const rowKey = watcherData.rowKey.value;\n    const data = watcherData.data.value || [];\n    const oldCurrentRow = currentRow.value;\n\n    if (!data.includes(oldCurrentRow) && oldCurrentRow) {\n      if (rowKey) {\n        const currentRowKey = getRowIdentity(oldCurrentRow, rowKey);\n        setCurrentRowByKey(currentRowKey);\n      } else {\n        currentRow.value = null;\n      }\n\n      if (currentRow.value === null) {\n        instance.emit(\"current-change\", null, oldCurrentRow);\n      }\n    } else if (_currentRowKey.value) {\n      setCurrentRowByKey(_currentRowKey.value);\n      restoreCurrentRowKey();\n    }\n  };\n\n  return {\n    setCurrentRowKey,\n    restoreCurrentRowKey,\n    setCurrentRowByKey,\n    updateCurrentRow,\n    updateCurrentRowData,\n    states: {\n      _currentRowKey,\n      currentRow\n    }\n  };\n}\n\nexport { useCurrent as default };","map":null,"metadata":{},"sourceType":"module"}